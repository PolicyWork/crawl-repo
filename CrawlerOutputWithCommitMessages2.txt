
=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f3b148d21220c444d469139803fb362f32c134cc

[COMMIT MESSAGE]:Implemented the User image upload. All images uploaded here are placed||into a img taggable directory aka they are not secured.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/myguel/task-java-advance/commit/7f6552ac139eb57fbf2550ced44a67e397e52c3c

[COMMIT MESSAGE]:add configuracion y auditoria||
=========================================================

+ @PreAuthorize("hasAnyRole('ROL_ADMINISTRADOR', 'ROL_DIRECTOR','ROL_USER')")
+ @PreAuthorize("hasAnyRole('ROL_ADMINISTRADOR', 'ROL_DIRECTOR')")
+ @PreAuthorize("hasAnyRole('ROL_ADMINISTRADOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=37&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/00341f1eeaf499805d1ffd3165c867db2535032a

[COMMIT MESSAGE]:check read permissions on messages||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/faab5c1c774af6e9912c32f5975f344583605774

[COMMIT MESSAGE]:adding status resource||
=========================================================

+@PreAuthorize("denyAll")
- //@PreAuthorize("hasPermission('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/javasparx/SpringGwt/commit/f76871e0d61d30209cc72655caa0b4526a40bb00

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/metadata-stores/commit/0b0571c93a67bfbeff011cfec159a75164201b81

[COMMIT MESSAGE]:Updates with improvements and permissions for the search service.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/f3b148d21220c444d469139803fb362f32c134cc

[COMMIT MESSAGE]:Implemented the User image upload. All images uploaded here are placed||into a img taggable directory aka they are not secured.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/9fc47bd6e1818055800301759d602f5d931ecd81

[COMMIT MESSAGE]:APPWEB150: Added roles screen to Eclipselink GWT showcase||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/1b76a4e5875d39a592a0e0fa527a0b99c4e7a934

[COMMIT MESSAGE]:Added ROLE dependency (collection) to show collections management wit…||…h hibernate (work in progress)
=========================================================

-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND hasRole('ROLE_ROLE_DISABLE')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND ( (#role.id == 0 AND hasRole('ROLE_ROLE_CREATE')) OR (#role.id != 0 AND hasRole('ROLE_ROLE_EDIT')) )")
+@PreAuthorize("hasRole('ROLE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/f87cf80e65cba08cadd899102fd321252a448188

[COMMIT MESSAGE]:Added ROLE dependency (collection) to show collections management wit…||…h hibernate (work in progress)
=========================================================

+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND hasRole('ROLE_ROLE_DISABLE')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND ( (#role.id == 0 AND hasRole('ROLE_ROLE_CREATE')) OR (#role.id != 0 AND hasRole('ROLE_ROLE_EDIT')) )")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=38&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/47c778053346f765d94bb89861caf18ceb06a3eb

[COMMIT MESSAGE]:Lisätty metodit oppiaineen vuosiluokkakokonaisuuden ja vuosiluokan si…||…sällön päivittämiseen
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e940bded85f59013446cc522cd84e100ddf27f59

[COMMIT MESSAGE]:lisää oppiaineen tavoitteiden vuosiluokkaistaminen||keskeneräinen ensimmäinen versio.
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/f00519e01fbed89e63b86527d55bdf7efc39c73a

[COMMIT MESSAGE]:Käytä OppimaaraLaajaDto:ta jotta oppimääriinkin populoituisi kaikki p…||…erusteista löytyvä data
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/dd9b3b13b6fff4c1dfebcddbad826dce6930991b

[COMMIT MESSAGE]:OppiaineControlleriin getAll-operaatio||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/cf45ceb07932d899676540c7a247e315ae04c1e6

[COMMIT MESSAGE]:Adding user message services||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ssherwood/symptom-mgmt-spring/commit/d4d0b02ceb0dd61b709a6487a0bdbd2085a2a058

[COMMIT MESSAGE]:Initial check-in||
=========================================================

+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mitreid-connect/trust-framework/commit/c7b0cc495ed0e89310df85b3d443095e5c9398a6

[COMMIT MESSAGE]:added openid-connect authentication layer in front of cards.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/d37ec900db3bc5bb3ff8a14dfbfb2477dbb97f90

[COMMIT MESSAGE]:Enhancement: Add support for permissions to AlleleAssay DTO||ACL permissions were added to the AlleleAssay DTO. In addition a new
Permission ("Run") was added to the CustomPermission class. Some additional
tests and a security bugfix for lack of permission check  of the CdvService
findAlleleAsssaysWithStats function were added.
=========================================================

+ @PreAuthorize("hasPermission(#phenotypeId,'com.gmi.nordborglab.browser.server.domain.phenotype.TraitUom','READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/a6b75b29568a6254b2d71b2de53cac2bfa99c0fa

[COMMIT MESSAGE]:Feature: Display of GWAS status was enhanced.||* Instead of displaying the GWAS status below the analysis details, it is displayed next to it.
* Instead of a horizontal ProgressBar a circular ProgressBar (CircularProgressBar.java) is
 used
 * The action dropdown button (Run on HPC) and the status label (N/A, Finished) are
  collapsed into one  DropDownButton. Furthermore additional actions are enabled:
    - Status = 'Error' -> Delete/Re-run
    - Status = 'Finished' -> Delete
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/cac529eb8f83730455a6e3b5aad4461ef7a5e3c6

[COMMIT MESSAGE]:Display phenotype, study and analysis list based on elasticsearch. Th…||…is allows for filtering and searching
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/dfaea8487bc567b92f7725c13e1f4d277188dcc3

[COMMIT MESSAGE]:Introduction of AclManager and refactoring of service methods||
=========================================================

+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasPermission(#gwasResultId,'com.gmi.nordborglab.browser.server.domain.util.GWASResult','READ')")
- @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'edit')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'EDIT')")
- @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'edit')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'EDIT')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ') ")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/3657b5210ed3a79d470d4266336e0a9a2a7a9939

[COMMIT MESSAGE]:Lisätty REST-controlleri ulkopuolisille palveluille||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/b7d0766f4402de605b037a710b6aaea17e1dfa5d

[COMMIT MESSAGE]:Lisätty REST-API ohjeiden hallintaan||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/28dabd65abdbf598096a71e0c106aa6cb4e86979

[COMMIT MESSAGE]:lisää kirjautuneen käyttäjän tietojen API||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/21ed3ccc7b563d8b4f2844c4b98f1f4940ccccb4

[COMMIT MESSAGE]:Lisätty service käyttäjän tietojen hakemiseen ja otettu se käyttöön k…||…ommenttien yhteydessä
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/c9e46653b3c17f045c922b432328d9bf389927e4

[COMMIT MESSAGE]:lisää tuki tekstikappaleen lukitukselle||
=========================================================

+ @PreAuthorize("hasPermission(#ctx.opsId,'opetussuunnitelma','luku')")
+ @PreAuthorize("hasPermission(#ctx.opsId,'opetussuunnitelma','muokkaus')")
+ @PreAuthorize("hasPermission(#ctx.opsId,'opetussuunnitelma','muokkaus')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=39&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/47b166173c0cc0c97f8c48f3e2f1331c2020de25

[COMMIT MESSAGE]:Lisätty toiminnallisuus tekstikappaleiden päivittämiseen||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/3799ab9b3c572fb350fc7a22482d7a67234c08c7

[COMMIT MESSAGE]:Lisätty tekstikappalepuu ja metodeja sen muokkaamiseen||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/2837a31d6ff0a1857bd904d2daf00633819484f6

[COMMIT MESSAGE]:oikeustarkistelukorjauksia||
=========================================================

- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','LUKU')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/5450e0174c28788e910686295f437b018e397d42

[COMMIT MESSAGE]:perusopetuksen tekstiosien muokkaus.||
=========================================================

+ @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/999c3e619975b07e13ae648321868bafff22db28

[COMMIT MESSAGE]:perusteen sisällön päivityksen refaktorointi.||
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/a7bdb315375f4353c0ecac21591c669f5d5a2dfb

[COMMIT MESSAGE]:perusteenosien haku suppeassa muodossa.||refaktorointia. perusteen osien ja sisältöviitteiden haku suppeassa
muodossa (ilman yksityiskohtia).
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/34f422b1bbfd46c650e2d7e11439f7c1e87d1a35

[COMMIT MESSAGE]:Lisätty sisällön sorttaustoiminto backendiin||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/62a748b3320909e132aedba8aa36a241f657d07a

[COMMIT MESSAGE]:Lisätty tutkinnon osien kopiointi editoitavaksi||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/c2bbe1d64b654308690aef22a189f5024cf06802

[COMMIT MESSAGE]:Muuttumattomia tekstikappaleita voi kopioida muokattavaksi||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/bab6fc62e2be309a9074b5b32bfdf055d6440032

[COMMIT MESSAGE]:Paranteluja versiohallintaan||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/0c2e96c6256ef53e74fa182bc4c2766c07cfcaa6

[COMMIT MESSAGE]:Lisätty poistaminen tutkinnonosaviitteisiin ja korjattu editointikont…||…rolleja
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/faddbdfd0b030280e6283db8308ec748cac0e5a4

[COMMIT MESSAGE]:tekstikappaleen poisto||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/7fb62e8d557e14bbdbb68bff7ddb166882cac1ab

[COMMIT MESSAGE]:laaja-alaisen osaamisen lukitus||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/f9c8e4507d1b573cd333f3889ac4d50155bbd838

[COMMIT MESSAGE]:Uusia rajapintoja ja korjattu bugi perustelistauksen linkkien generoi…||…nnissa
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/78bc0bed8e1564bd2ad758ec246a2662489c11e0

[COMMIT MESSAGE]:Lisätty rajapinta koko perusopetuksen perusteen hakemiseen sisältöineen||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/7fb62e8d557e14bbdbb68bff7ddb166882cac1ab

[COMMIT MESSAGE]:laaja-alaisen osaamisen lukitus||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/490222013d458b57cf596712c33ae389b4363c58

[COMMIT MESSAGE]:perusteen korjaus julkaisun jälkeen||Lisättu KORJAUS-oikeus update-palveluihin (WIP)
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.dto.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#viiteId, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#tov.id, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/2837a31d6ff0a1857bd904d2daf00633819484f6

[COMMIT MESSAGE]:oikeustarkistelukorjauksia||
=========================================================

- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','LUKU')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/5450e0174c28788e910686295f437b018e397d42

[COMMIT MESSAGE]:perusopetuksen tekstiosien muokkaus.||
=========================================================

+ @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/b5e98533104c9452c7c73267d1cd3da83f44074d

[COMMIT MESSAGE]:laaja-alaisten osaamisten CRUD.||Laaja-alaisten osaamisten CRUD. Lisäksi lisätty HTML-merkkauksen validointeja ja tekstikappaleiden UTF8-normalisointi.
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/80694232d168e85a2b4f1c30114ab10cfa157bfd

[COMMIT MESSAGE]:YL perusteen tietomalli ja palvelut, WIP||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/razbomi/boxing-spring-boot/commit/5529952140175ce237cc234d1782df4a5f3b89b5

[COMMIT MESSAGE]:initial commit||Greeting service and file uploads, playing
=========================================================

+ // @PreAuthorize("permitAll")
+//@PreAuthorize("denyAll")
+ // @PreAuthorize("hasRole('ROLE_USER')")
+ // @PreAuthorize("hasPermission(#id, read)")
+ // @PreAuthorize("hasPermission(#id, 'au.org.boxing.boxing.Application', read)")
+ // @PreAuthorize("hasRole('ROLE_USER')")
+ // @PreAuthorize("true")

=========================================================
[CODE-CHANGE-URL]:https://github.com/erick485/ERP_Quipucamayoc/commit/314a8791256fe4712c0e0afca3330a6aeafd1980

[COMMIT MESSAGE]:Gran cambio||
=========================================================

+ @PreAuthorize("hasAnyRole('admin')")
+// @PreAuthorize("hasRole('user')")
+ @PreAuthorize("hasAnyRole('admin')")
+// @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ // @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasAuthority('userperfil')")
+ @PreAuthorize("hasRole('userperfil')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=40&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/sangeeth/springworks/commit/d906fb76c1c19e499884dbe518b1324b63605e20

[COMMIT MESSAGE]:Spring Security Samples using Maven & Eclipse instead of Gradle||https://github.com/SpringSource/spring-security/tree/master/samples/
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/359c3bbdc19b248c88c59c23ccf0333426b9e924

[COMMIT MESSAGE]:Added delete and update to Tour.||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/11f9a4a07454c45b70cdc7dfee6590c101b5e9fc

[COMMIT MESSAGE]:SQL Changes:||-location_lat/location_long are now decimal(16,8) up from float
-artist_name is now varchar(200) up from 100
-title is now varchar(100) up from 50
-description is now varchar(10000) up from 255
-tags are now varchat(512) up from 300
-ALL varchar(50) upgraded to varchar(100)

JavaChanges:
-Updated ArtObjEntity and POJO to use BigDecimal rather than float for lat/long
-Added resource for list upload JSON in resource/services
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/b2c0159a72d1082c63f5e01b0f4a07de1da35787

[COMMIT MESSAGE]:Image upload fully implemented for art objects.||
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#artObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/377b8970112c9a4ec48cb65464b1f60164f79abc

[COMMIT MESSAGE]:Splitting up PublicArtBackend||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nathan-wolfe-lienhardt/cos576/commit/d2309e07ac8735f532ba52de645a2f7edc1565ef

[COMMIT MESSAGE]:Tried yet again, to commit more SIP examples||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/ShiraazMoollatjie/spring-security-sessions/commit/cb7357a808dce5814853701a44cbfb3676e260af

[COMMIT MESSAGE]:* Finally got the method level security to work.||* Removed the Interface for Method Level Security
* The In Memory Authentication Provider uses a role_user instead of a role_admin now.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ShiraazMoollatjie/spring-security-sessions/commit/984dff15fe49891dff0cd09d62b9e3f3bde5e298

[COMMIT MESSAGE]:* Playing with Spring method level security, does not work at the mom…||…ent if i add <global-method-security/>. The MethodLevelSecurityController is split into an interface and an implementation so far.

* Removing all the default templating added with IntelliJ on new files.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPER_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=41&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/springinpractice/sip07/commit/d656ea1a0dfb8f919aa7a42d084a41d8e15f5b8b

[COMMIT MESSAGE]:Moving classes from SVN to git.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/0e9e572fe8860eaa37d764aba12ef442f5274bea

[COMMIT MESSAGE]:adicionado teste de controle de acesso para recursos de Accountmanager||
=========================================================

+ @PreAuthorize("hasPermission(#accountId, 'Account.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/edf74a845868265c577b3e69d4b2b82ec565ebd4

[COMMIT MESSAGE]:adicionado testes para controle de acesso a recursos de conta e siste…||…ma de contas. algumas refatoracoes foram feitas
=========================================================

+ @PreAuthorize("hasPermission(#account, 'Account.read')")
+ @PreAuthorize("hasPermission(#profile, 'Profile.read')")
+ @PreAuthorize("hasPermission(#id, 'AccountSystem.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/677eb0110a676f2117242f0d13f37c77b84e9218

[COMMIT MESSAGE]:adicionada camada de seguranca de controle de acesso do spring. verif…||…icacao de acesso ao conta implementada. falta outras verificacoes
=========================================================

+ @PreAuthorize("hasPermission(#accountId, 'Account.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ahmadrgb/EWS-interview/commit/c8516052b417642a713a953a221ab81a8477063f

[COMMIT MESSAGE]:added our project||this is our project
=========================================================

+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKET')")
+ @PreAuthorize("#ticket.id == 0 and hasAuthority('CREATE_TICKET')")
+ @PreAuthorize("(authentication.principal.equals(#ticket.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_TICKET')")
+ @PreAuthorize("hasAuthority('VIEW_COMMENTS')")
+ @PreAuthorize("#comment.id == 0 and hasAuthority('CREATE_COMMENT')")
+ @PreAuthorize("(authentication.principal.equals(#comment.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_COMMENT')")
+ @PreAuthorize("hasAuthority('VIEW_ATTACHMENT')")
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#message.user) and " +
+ @PreAuthorize("hasAuthority('VIEW_CHAT_REQUESTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/xfcjscn/infra-server/commit/ad3074f0741abc3d99d87f5e64925d877d78b987

[COMMIT MESSAGE]:add SSChecker||
=========================================================

+ @PreAuthorize("hasPermission(#target, #method)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adriangonz/SORception/commit/f168c1bb18b852fe734b47c2b3fccff7751c8645

[COMMIT MESSAGE]:Empiezo con autorizaciones||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAnonymous() || hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/050e14cea6a62061358382bd41d0297cff93a450

[COMMIT MESSAGE]:MIFOS-4190: add service facades for retrieving change logs for center||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/6015c4e0cdbde9b043281bb0844596d41e3ba516

[COMMIT MESSAGE]:MIFOS-4190: add service facades around applying charges and reverting…||… charges on customer accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=42&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bartosz25/library-sample-project/commit/3cb1e6d5e612ad81359dd9a79f3b90c277ec7535

[COMMIT MESSAGE]:Maven project structure, pom.xml and one new todo||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ // @PreAuthorize("(#subscriber.login == principal.username) or (#subscriber.login == #user.username) or (#subscriber.login == 'bartosz') or (#subscriber.getLogin() == principal.username)")
+ // OK : @PreAuthorize("'bartosz' == principal.username")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ // OK too : @PreAuthorize("hasAuthority('SUBSCRIBER_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CHAT_CONSULT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CHAT_CONSULT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'EXPORT_DO')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ // @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'SUBSCRIBER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'NEWSLETTER_WRITE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'NEWSLETTER_WRITE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'QUESTION_READ')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITERLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_DELETE')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.bookingNb > 0")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.id == subscriber.id")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'PENALTY_ACCEPT')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'QUESTION_READ')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("isAnonymous() or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("(#subscriber.login == principal.username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#subscriber.login == principal.username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.id == subscriptionTransfer.subscriptionTransferPK.idGiver")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITERLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apobbati/ICAM_POC/commit/9e73082a00a0d9ac1635b179c2ab5fcef5e1dd8a

[COMMIT MESSAGE]:Adding CORS||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apobbati/ICAM_POC/commit/7ab5d17ce0b12785b713bd4ea06ff4ee40495c14

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('NOT_THERE')")
+ @PreAuthorize("hasRole('ACCESS_LEVEL1')")
+ @PreAuthorize("hasRole('NOT_THERE')")
+ @PreAuthorize("hasRole('ACCESS_LEVEL1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/spring-test-example/commit/572e290ec3f67ab97585a498420155e1cdd449bf

[COMMIT MESSAGE]:Added EmployeeEventHandler||Renamed parameter for findOne
Added MethodSecurity to the dispatcher servlet
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and #employeeId == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and #id == principal.id )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/drinkit/drinkIt/commit/85e74934f527135121f412f15ad9b695dcbfc299

[COMMIT MESSAGE]:moving to mongodb: restructure||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/einherjer-uy/spring-security-sample/commit/03b7347f63e5926a0ad92e71c500440119d33ccd

[COMMIT MESSAGE]:fixes||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated")
- @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/einherjer-uy/spring-security-sample/commit/890ef695973affc2df0a52d3c979f4345f977f73

[COMMIT MESSAGE]:first draft||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3189da64f3ee3d31364b55366d948f7809596573

[COMMIT MESSAGE]:[MIFOS-4220] Displaying unapplied contraction scripts in system prope…||…rties
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/38629af3a0c2dcca0bfad00c8e89d80c92287701

[COMMIT MESSAGE]:FIX MIFOS-3478: Make Mifos Database Version a link to a page that dis…||…plays rows in applied_upgrades

Also removed number formatting in system info page for database version
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=43&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3189da64f3ee3d31364b55366d948f7809596573

[COMMIT MESSAGE]:[MIFOS-4220] Displaying unapplied contraction scripts in system prope…||…rties
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/38629af3a0c2dcca0bfad00c8e89d80c92287701

[COMMIT MESSAGE]:FIX MIFOS-3478: Make Mifos Database Version a link to a page that dis…||…plays rows in applied_upgrades

Also removed number formatting in system info page for database version
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/126a747bca7428bdaf514e73c4c28d5dfa41fab6

[COMMIT MESSAGE]:MIFOS-4552: fix checklist functionality for edit and create||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8aecdd343972e376090d12612f4091e90d00d03b

[COMMIT MESSAGE]:MIFOS-4385: service facades around update of checklist||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9a4afe3fcd8920b1225cd3c2645554fe52c31188

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for creation of check lists||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3016add2b18c4ff27fedd83f6a0fc978df21e0b8

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3fd114346c44167fca5e8691fb38614e954a2339

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/bc1486e77c8b95b0b8c0ff872f7d9ce46d4a7289

[COMMIT MESSAGE]:Feature: Candidate gene list enrichment analysis added||Now it is possible to run candidate gene list enrichment analysis for a set of
gwas-results or a set of candidate gene lists. The analysis is done by sending a
message to the message-broker. The celery worker will run it. Furthermore it is
now possible to display the list of enrichments on the Experiment/Phenotype
and Study level.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','READ'))")
+ @PreAuthorize("hasPermission(#entity,'READ')")
+ @PreAuthorize("hasPermission(#entity,'READ')")
+ @PreAuthorize("hasPermission(#entity,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/8e84f6d625200218d2640cbac9b471f7d23c266d

[COMMIT MESSAGE]:Feature: Upload functionality added to candidate gene list||Users can now upload csv containing one column with gene ids. They will be added to the
 candidate gene list.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','EDIT') or hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/79a74b3fd1d7b875b3272ebf54cc2f1915e9fe5c

[COMMIT MESSAGE]:Candidate gene list||Basic functionality for creating candidate gene lists was added. Users can create new lists, add genes and share with other users.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#candidateGeneList.id == null or hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','READ')")
+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=44&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/f3b148d21220c444d469139803fb362f32c134cc

[COMMIT MESSAGE]:Implemented the User image upload. All images uploaded here are placed||into a img taggable directory aka they are not secured.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/studerw/spring-security-custom-db/commit/9eb328f1ed39b9e13509bfe573249101449b9920

[COMMIT MESSAGE]:adding new files||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=45&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/dminarik/Webbox/commit/cfca64757fcb10de378bcff6ba33f192a7e2f7df

[COMMIT MESSAGE]:Added basic spring security||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/elvis9xu/xjd-note/commit/c10ca5e09ccef99329ef7c64a3434e9da533fa1f

[COMMIT MESSAGE]:auth tmp finish||auth部分先进行到这，后期需要改进:
1. 使用token机制
2. 安全cookie支持
4. 使用spring-security
5. 支持OAuth2.0

马上要进行的是研究一个富客户端, 然后创建web应用
=========================================================

+ @PreAuthorize("test")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/e7f8b3bc074bcd997e68d52295ea712590304ca4

[COMMIT MESSAGE]:Possible to find by borrower||
=========================================================

- @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jluigonz/angular_bootstrap_spring/commit/77dc5515332a50b043578c4b314d63eb19a2723b

[COMMIT MESSAGE]:Primer commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/ab2a98580f8ac2e53384d19c353ddeb2f415b6dd

[COMMIT MESSAGE]:added TarnsferApplication Resource||cleaning getMyUser
=========================================================

+ @PreAuthorize("hasPermission(#transferApplication, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#transferApplication, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/64464cd74047449e8ad9444ad9a48c6cb5bb4367

[COMMIT MESSAGE]:merge Restful Core Authorities||added function to get lists by application id for coursework
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#activity, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#activity, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#activity, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#application, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#application, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#child, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#child, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#child, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#coursework, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#coursework, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#coursework, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#employment, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#employment, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#employment, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#scholarship, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#scholarship, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#scholarship, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#university, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#university, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#university, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=46&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhihaoXian/pluggable/commit/416b94dd88b0024a6f7fe039c7baabd90672c34a

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chavesrodolfo/adminApp/commit/d919e8ef51b86645a9500e4566c3b3c3e22a4b90

[COMMIT MESSAGE]:Base64Service, AuthenticationService||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/865864210d6df57fc07d053c06e0d1264f713d3b

[COMMIT MESSAGE]:poprawka do Nawigacji i inne drobne rzeczy||
=========================================================

-// @PreAuthorize("hasRole('ADMIN')")
+ // @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/c54b04fa1fbd040004abddd88c155288ddbb2beb

[COMMIT MESSAGE]:ajax jquery nawigacja||
=========================================================

- @PreAuthorize("hasRole('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/46253500e88e07f2e5502e27733deab437e99358

[COMMIT MESSAGE]:poprawki. Wreszcie zaczyna to jakoś wyglądać.||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/d861424f3c35a369906a78b82e40a3fa3c9a54e7

[COMMIT MESSAGE]:spring security metody, zmiana pobierania deklaracji, dodałem filtr h…||…ibernate
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/5cbcd920ff9d5bed6aa69549cf1d1f3aff1064fa

[COMMIT MESSAGE]:Testy||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/e34537c98e96781344cc9405e8d48fb1951f50eb

[COMMIT MESSAGE]:updates||
=========================================================

+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/081485c8bcd15bf167af5e7f045e652147ae07d2

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/0980c9dd51db337ead4843c071e4c050576c976a

[COMMIT MESSAGE]:No commit message||
=========================================================

-@PreAuthorize("denyAll")
+//@PreAuthorize("denyAll")
- @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+ @PreAuthorize("hasRole('AUTHORITY_USER')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/7199a7726919c44ba639a93b44b3c47388b2c7f0

[COMMIT MESSAGE]:updates||
=========================================================

-@PreAuthorize("denyAll")
- @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e4cef47e296700e427c1de7d6339bf5d32bdf9f1

[COMMIT MESSAGE]:Lisätty endpoint ja toteutus ops:n tilasiirtymille||
=========================================================

+ @PreAuthorize("hasPermission(#id, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/921723964ef4e0927615e6a734e3a702160ced0d

[COMMIT MESSAGE]:lisää oikeustarkistelu||Oikeustarkistelun ensimmäinen keskeneräinen versio.
=========================================================

- @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("(#tyyppi == T(fi.vm.sade.eperusteet.ylops.domain.Tyyppi).OPS and hasPermission(null, 'opetussuunnitelma', 'LUKU')) || " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/f34792710aa06d43c3a7e9e38a43624c53cc9b65

[COMMIT MESSAGE]:palauta vain suppea muoto opslistauksissa||
=========================================================

- @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/5fd86d8187702ad1367979b870de29931687fbfe

[COMMIT MESSAGE]:Poistettu duplikaattimetodi REST-apista||
=========================================================

- @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/ae8a7c733a864b8c97c3f6cf916cdf24018fa173

[COMMIT MESSAGE]:poista turhia luokkia||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/103420c5ddd1340c09654b643d8d3c1ec176c5d9

[COMMIT MESSAGE]:lisää API laajaalaisille osaamisille||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/d128be557da0320b4074952a56fea3a0f79448fe

[COMMIT MESSAGE]:Lisätty REST-rajapintaan metodi jolla hakea voimassaolevat perusopetu…||…ksen perusteet
=========================================================

+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/soscs/heumpage/commit/5a23ae863f7b9398ee450fb02fcf2b9e477b0c56

[COMMIT MESSAGE]:sitemesh, mybatis,bootstrap 설치||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/2198e08c80014f68c3c6a56471e62f75236d87bc

[COMMIT MESSAGE]:make projects open access after embargo period||run automatically via quartz job every 24 hours
or manual via embargo settings page
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=47&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/jaxenter-showcase/commit/5f177da55b40ab2af0c45f896351e4331eacfd52

[COMMIT MESSAGE]:Step 3: Add security for POST, PUT and DELETE||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pellcorp/JavaFirst/commit/3bb8bd6cd20aa0ea0397c6ce19abe2f4f8e5488e

[COMMIT MESSAGE]:further cleanup of examples to properly support saml and NoPassword||authentication mechanisms with existing DaoAuthenticationProvider.
=========================================================

+ @PreAuthorize("hasAnyRole('Administrator')")
+ @PreAuthorize("hasAnyRole('Administrator,User')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/trungtuan/motech/commit/29823e12a8ce60651a757d883177e69a3ae035d1

[COMMIT MESSAGE]:SDUI: Add Security tab to field definition||https://trello.com/c/0LFwZLfl

* Added 'Security' tab to object definition, as for now motech do not
support security settings for particular fields. User can specify who
can interact with objects (everyone, creator, owner, specific users,
specific roles). For last two options user must specify the list of
users/roles. If after selecting users/roles list he changes access
settings to another, lets say to 'everyone', the users/roles list
will be cleared.
* corrected 'advancedHistroy' typo
* removed some duplicates from messagess.properties

Change-Id: Ifab579ce04d2cf99d97c620da3396235fd0bd6b8
=========================================================

- @PreAuthorize("hasRole('manageUser')")
+ @PreAuthorize("hasAnyRole('manageUser', 'viewUser')")
+ @PreAuthorize("hasAnyRole('manageRole', 'viewRole')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/manuelq/active-directory/commit/d36bc0c7615832f31b009749c5035ebe5be579bd

[COMMIT MESSAGE]:test||
=========================================================

+ @PreAuthorize("hasRole('asdf')")
+ @PreAuthorize("hasRole('eCRV_Developers')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mohchi/spring-security-request-mapping/commit/d954a79b2d1707faaeb900757ec2f991b9392de8

[COMMIT MESSAGE]:Added support for path variables in security expressions||
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("authentication.name == #name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mohchi/spring-security-request-mapping/commit/bcf03622b4f4cb83dd6423d60f895dd72af56499

[COMMIT MESSAGE]:Added sample maven managed web project||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/az-ss/Spring-Security-Example/commit/0df533a340b840b51a64c6754c5a2fcb997509c5

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yerganat/crmextjs/commit/5e81493ab862684ec0826a0e8def66fa3cb99a67

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/subhrajitroy/motech-virgo/commit/eaa7262c4e388aa1301ae7201b66d7de6b226ded

[COMMIT MESSAGE]:Merged security||Change-Id: I25ca4b858abea5df545592e47361918fe495494f
=========================================================

- @PreAuthorize("hasAnyRole('viewSecurity', 'updateSecurity')")
- @PreAuthorize("hasRole('updateSecurity')")
- @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("hasRole('deleteUser')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=48&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/e0e075f1ae584fa2e2f832c4eb3b7e9efe35e70c

[COMMIT MESSAGE]:Fixes to multiple issues including indexing study errors and binder p…||…ages with study (requires reindexing said study) and moving parts of error to separate json files.
=========================================================

- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1063e940ce682f9820163c9f9b2f37dc91d891ab

[COMMIT MESSAGE]:Added studies with errors query. Provided straight access to Referenc…||…ePath parsing so that UI can provide custom references to be parsed. This basically supersedes the normal options request since building of both is very similar and both can address the basic request but path request provides additional functionality.
=========================================================

+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/cc625e0056834ad382ceb5419ef2e45dd895e2f5

[COMMIT MESSAGE]:Restriction validation framework is mostly done disregarding bugs and…||… some obscure features.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/a683417a7a949789d4f2c77baee48f8b089060dd

[COMMIT MESSAGE]:adicionado testes de controle de acesso aos recursos de transcoes||
=========================================================

+ @PreAuthorize("hasPermission(#originAccountId, 'Account.read') and hasPermission(#destAccountId, 'Account.read')")
+ @PreAuthorize("hasPermission(#rootAccountId, 'Account.read')")
+ @PreAuthorize("hasPermission(#txId, 'AccountTransaction.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nocode2k/spring3-mvc-example/commit/c96f66e9a7cf48296ee9be666acd57d4639e8708

[COMMIT MESSAGE]:Security 적용||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#article.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#article.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#comment.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#comment.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#email == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/honzikm/wpa/commit/d7e71706a1d172b6e58180f39fddb03b6a0d1e44

[COMMIT MESSAGE]:wpa semestralka||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ouar/trunk/commit/947c2541beb7b5ce8a8eab5463b2d3f41ae39f7c

[COMMIT MESSAGE]:structure v2 du quiz-web à refactoriser||
=========================================================

+ //@PreAuthorize("hasRole('Administrateur')")
+ //@PreAuthorize("hasRole('Administrateur')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=49&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/ebe86ee960b2f0d11370236de6d688fcbe6545ff

[COMMIT MESSAGE]:Loads of fixes||
=========================================================

- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")
- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=50&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/alvarodr/spring3.1/commit/5e0300b8a860ff9231b340c148645aa76003fe9a

[COMMIT MESSAGE]:Ejemplo spring 3.1||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/6a61d471c7eb47d4801f768ccf17ef4ad60a3bb4

[COMMIT MESSAGE]:OrderForm adds user to order. Admin can register new company||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/50913ded2e84c2697f72e10f71b83e8fc77bb2ae

[COMMIT MESSAGE]:Service and dao example||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/3ab106349b049534013532832a325ed154a59f71

[COMMIT MESSAGE]:Added nextDestination validations||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/38ed92a6aa356d4d820c20309ce8e7775ebd0c7e

[COMMIT MESSAGE]:Order updating for user. Not yet working 100%. Problems in DAO||parameters.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jormaral/SLdirect/commit/f04b5bb214bc0c50c9d0bffd6cc58ccf8f403807

[COMMIT MESSAGE]:Alejandro Sanchez Acosta <asanchez@neurowork.net>||Subida version 0.1
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gleant/wadi_harjotustyo/commit/1ba32161f92dad7e1e98a4ae2257fcedb5c18141

[COMMIT MESSAGE]:Viimeinen versio||
=========================================================

+ @PreAuthorize("hasRole('opettaja')")
+ @PreAuthorize("hasRole('opettaja')")
+ @PreAuthorize("hasRole('opettaja')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gleant/wadi_harjotustyo/commit/dc5b4c66c8688ba4db59bb35c47509566eb2fc28

[COMMIT MESSAGE]:Viestijono||
=========================================================

+ @PreAuthorize("hasRole('opettaja')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/v5developer/maven-framework-project/commit/78beef294e208518607d0cd58088359a512990ef

[COMMIT MESSAGE]:spring3 security example||
=========================================================

+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=51&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dimarzio/restmock/commit/042a6a69cbba652894988fd7214d895ea6518871

[COMMIT MESSAGE]:Added security to REST service||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bolkimen/SiteCore/commit/630019d08ebe1ed0ea192a0ce60df100d31b3e61

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'Post', 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'PostsThread', 'READ')")
+ @PreAuthorize("hasPermission(#poststhread, 'WRITE')")
+ @PreAuthorize("hasPermission(#poststhread, 'DELETE')")
+ @PreAuthorize("hasPermission(#poststhr, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mleyvag/TutoriasFisi/commit/1504fe3b406e761f8f29ee55a63b8013664f2791

[COMMIT MESSAGE]:1ercomit||yayaya mi primer commit
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/cdbf16ad6a62eab9bdfcec90f39dc6127cf4aa24

[COMMIT MESSAGE]:adicionado controle de acesso aos recursos de transacao e relatorios||
=========================================================

+ @PreAuthorize("hasPermission(#accountId, 'Account.read')")
+ @PreAuthorize("hasPermission(#a, 'Account.read')")
+ @PreAuthorize("hasPermission(#rootAccountId, 'Account.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/cd8cc3fbf6c67185881a456afe5e04b12d594bd2

[COMMIT MESSAGE]:delete last Game||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/b98eb07da4a19df3d2bbf321a200c9650d7cf959

[COMMIT MESSAGE]:enable secure urls||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ // @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jjane717/HIE/commit/1603ec306f8a5373c529395361fd90f03ff89ddc

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole(ROLE_USER)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/f9851aef27653ef7c2ec731d4ebbc5992504d991

[COMMIT MESSAGE]:editing&refactoring||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(['ROLE_ADMIN'])")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=52&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/davilj/projectman/commit/7f49c03f6939e531770e9a2a6fd3a29bab1104e4

[COMMIT MESSAGE]:Initialize git||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/changit/vaadin-spring-sec/commit/29b6439cfc5f011c85fd26067d8998463ae70347

[COMMIT MESSAGE]:added project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/geiner/formularioUTP/commit/319e6b7469b6272c9824326f684f49fa4c67fcce

[COMMIT MESSAGE]:primer commit||primero
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cmacmillan3/DMIT225-/commit/a29e1c745058c0caae6105afe2caf381515493e3

[COMMIT MESSAGE]:Finished all exercises.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chrisp-cbh/BricksAndMortarDynamicWebAndMaven/commit/c89f08d79c945a6eba16b25d0c6cfb647858da20

[COMMIT MESSAGE]:adding spike to check out spring security method validation||
=========================================================

+ @PreAuthorize("hasPermission('Product', 'get')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thinkbigthings/give3.org/commit/95b39447ef8589e2fc80a30fa281a3387d1dc606

[COMMIT MESSAGE]:transfer project to github||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=53&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/b1fb52f3436b9ea1a94d80bd589df7d5ba833d6d

[COMMIT MESSAGE]:Korjattu lukkojen omistajien nimien esittäminen||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#k.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("hasPermission(null, 'perusteprojekti', 'LUONTI')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'TILANVAIHTO')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/490222013d458b57cf596712c33ae389b4363c58

[COMMIT MESSAGE]:perusteen korjaus julkaisun jälkeen||Lisättu KORJAUS-oikeus update-palveluihin (WIP)
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.dto.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#viiteId, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#tov.id, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/a08fdbf591a7abb70c84d54e1b843df4e5f69148

[COMMIT MESSAGE]:Termistön hallinta backendissä||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fred4jupiter/sandbox/commit/17f845c15cd625857a29414a5b2cd204b78e5d53

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('RIGHT_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('RIGHT_EXTREM_SECURE') and (#account.balance + #amount >= -#account.overdraft)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/guddle/spring-projects/commit/f4f719461b2e9ca2cf9613714789ab72944a5a9a

[COMMIT MESSAGE]:update about spring security demo||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=54&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nguyenngoc92/diary.com/commit/15d5e2660ce734cc196e8c4de19e6cc54ffde496

[COMMIT MESSAGE]:diary update||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Varno/JavaStudy/commit/5fa5b9b07cb85f838be28bc2175986f999dd2f5d

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=55&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hensun871216/SpringSecurityleaning/commit/c05f21ac9ba56e0cc92cb6bc88108e817b0294b1

[COMMIT MESSAGE]:The new one||
=========================================================

+ @PreAuthorize("#userName==principal.username or hasRole('ROLE_ADMIN')") //change to use the aop

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/a78abbc3e98a46fe436ee31df106495eacb1ddf8

[COMMIT MESSAGE]:Added support for retrieving events based on importance||
=========================================================

+ @PreAuthorize("hasPermission(#domain, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/d1fd98f75dc09568b4a467ebd0d853f0c51ce126

[COMMIT MESSAGE]:Improved recurrence handling in Core.||
=========================================================

+ @PreAuthorize("hasPermission(#entity, 'delete')")
+ @PreAuthorize("hasPermission(#entity, 'delete')")
+ @PreAuthorize("hasPermission(#entity, 'save')")
+ @PreAuthorize("hasPermission(#entity, 'save')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/711cdd6e4eff800e70c9097c78ded4bb71d28db6

[COMMIT MESSAGE]:Added QueryDSL support.||Changed Tasks to have duration instead of timestamps.
Fixed typo in Event type.
=========================================================

+ @PreAuthorize("hasPermission(#domain, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/c5e12311f1aac85693d9b7db11a06d660c6cba8c

[COMMIT MESSAGE]:Lots of work on CORS and details that make things start to work on mo…||…bile.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or @relationService.isRelated(principal.person, #domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or @relationService.isRelated(principal.person, #domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=56&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/eric2323223/springlab/commit/6ea6160255c4dea916161741f5014610ba4c7050

[COMMIT MESSAGE]:add more files||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/543298f0e6510d2deb572b8cfd402f88ee0a7488

[COMMIT MESSAGE]:Feature: Backend support for exporting and importing ISA-Tab archives…||… added

IsaTabExporter class was added. It contains functions to export and import
 isa-tab archives. This is related to issue #34 and #29
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/cac529eb8f83730455a6e3b5aad4461ef7a5e3c6

[COMMIT MESSAGE]:Display phenotype, study and analysis list based on elasticsearch. Th…||…is allows for filtering and searching
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/fff3c20bc4cb67510884313cedf4f2c3e4e35f88

[COMMIT MESSAGE]:add support for publications||
=========================================================

+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/9f186fdbace60cecada0d35b805d9ae819785fcb

[COMMIT MESSAGE]:new simpler permission system||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+@PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','READ')")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#object,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/cxf-fediz/commit/31364847e3d5d35273dc5f6498ad9f98cc7dc164

[COMMIT MESSAGE]:[FEDIZ-77] RBAC Support for REST Interface||git-svn-id: https://svn.apache.org/repos/asf/cxf/fediz/trunk@1572730 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_CREATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_DELETE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_LIST')")
+ @PreAuthorize("hasRole('CLAIM_READ')")
+ @PreAuthorize("hasRole('CLAIM_CREATE')")
+ @PreAuthorize("hasRole('CLAIM_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_DELETE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_LIST')")
+ @PreAuthorize("hasRole('ENTITLEMENT_READ')")
+ @PreAuthorize("hasRole('ENTITLEMENT_CREATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_UPDATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_DELETE')")
+ @PreAuthorize("hasRole('IDP_LIST')")
+ @PreAuthorize("hasRole('IDP_READ')")
+ @PreAuthorize("hasRole('IDP_CREATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_DELETE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_LIST')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_DELETE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_LIST')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_READ')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_CREATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/e4ds-desktop/commit/36163fa8f6a928bf65ed6784f7ddca95b45497d1

[COMMIT MESSAGE]:Update with DB access, usermanagement and many more.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CodeSolid/SpringSecurity/commit/91c34722553e34514609c8a8dca2b197a25f461b

[COMMIT MESSAGE]:Initial checkin password_jdbc; update project files||
=========================================================

+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=57&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/CodeSolid/SpringSecurity/commit/91c34722553e34514609c8a8dca2b197a25f461b

[COMMIT MESSAGE]:Initial checkin password_jdbc; update project files||
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ssherwood/symptom-mgmt-spring/commit/d4d0b02ceb0dd61b709a6487a0bdbd2085a2a058

[COMMIT MESSAGE]:Initial check-in||
=========================================================

+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JetBrains/idea-templates/commit/16697933a87adc360f2262b2696b02d5816d8dba

[COMMIT MESSAGE]:Spring Security template||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=58&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/MordechaiTamam/Spring-Security-based-on-AspectJ-and-addtional-ordered-aspects-/commit/3b1d720169879a49a9869393000998173b7e20ef

[COMMIT MESSAGE]:Adding a project that demonstrates the aspects ordering||This project is an example how to order the aspects invocation in case
that you have several Pointcuts on the same execution point.
This project demonstrates how to add an aspect before and after Spring's
security aspect .
The project is based on Spring-Boot and AspectJ
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/attic/commit/50e30b1173c0a22cea69f0dfe562461d3cd40d02

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/attic/commit/bbab707e1b03ae5a380eb902daedea453ab91617

[COMMIT MESSAGE]:Moved from playground to attic||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/attic/commit/a300b64edd9f73b374d102a865f8101afbff9e28

[COMMIT MESSAGE]:Add e4ds-template to the attic||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/indvamshi/DealsMessanger-Backend/commit/9aa325eff9b276c7b228d261efcfef160c9a7fe5

[COMMIT MESSAGE]:adding security feature||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_MERCHANT')")
+@PreAuthorize("hasRole('ROLE_MERCHANT')")
+@PreAuthorize("hasRole('ROLE_SUPERADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/977cbdaf3ae8d66caeb617883e4c8a80c93b8239

[COMMIT MESSAGE]:vuosiluokkakokonaisuuden revisiot ja updatedto||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OresytO/MyPrograms/commit/8d37f61bd85b8056a23e31b96adadeaf3073944a

[COMMIT MESSAGE]:Resolving some warnings issues||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/djboy71/sip07/commit/c09ba6cae5c39f6fb1a8df69412446c69f415911

[COMMIT MESSAGE]:Initial Commit and completed recipe 7.1||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3d5c50b933c2b24340bad81a91eb5ff7968c2e76

[COMMIT MESSAGE]:MIFOS-3577 Change to read-only batch tasks management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c537dadb0af0f615d89e295a4e4e2c6f7d4c60f5

[COMMIT MESSAGE]:MIFOS-3577 Added privileges for batch jobs management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/448226c92bf267453397d67fa49ae789635569db

[COMMIT MESSAGE]:MIFOS-3577 Added reading values from tasks into batch jobs management…||… page
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e326c524680e56d1a5ddd011e56d3f844a4a221d

[COMMIT MESSAGE]:Added new page for administrator for batch tasks management.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c607241b0d479387b8a233e48309845b9a5406fb

[COMMIT MESSAGE]:MIFOS-3327: Added security settings + cosmetics.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=59&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4954bcf9394e44e06a6902340dde085a1d9c193b

[COMMIT MESSAGE]:MIFOS-5992: Added permissions, Pentaho reports parameters and other m…||…inor fixes
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4dc99242672dceb464a63d2b0ce3ab4be7b810b5

[COMMIT MESSAGE]:MIFOS-5616: added possibility to attach admin documents to payments.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jenshadlich/spring-hibernate-hazelcast-webapp/commit/4c54b94d1a0df51e148fa70bb7b32b9e272abebc

[COMMIT MESSAGE]:update||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security-javaconfig/commit/a3e55050bf2e42b4535b15817d356ff7ef8c5459

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#oauth2.clientHasRole('ROLE_CLIENT')")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#object,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dimylik/my_money_flow/commit/92f30497790ee59f881decaf7035f0a2ffcaa908

[COMMIT MESSAGE]:Editing bank account;||
=========================================================

+//@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oshingc/QuipuPrueba/commit/5331dc04deecbff1aef881c22e98097fb4e8e5cb

[COMMIT MESSAGE]:second commit||
=========================================================

+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ // @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=60&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/ebe25c948378ccf244552b6df43371fd2d691c04

[COMMIT MESSAGE]:Merge commit '4c692b7d1f581759708417b2053a3ebe2949f333' into merge||Unificado, academicTerm funcionando con acls.
Creado algún metodo para ver los los grupos de un usuario (ya sea student o professor)

Cambiado el logo-header
=========================================================

- @PreAuthorize("hasPermission(#post, 'WRITE')")
- //@PreAuthorize("hasRole('ROLE_ADMIN')")
- //@PreAuthorize("hasPermission(#academicTerm, 'DELETE') or hasPermission(#academicTerm, 'ADMINISTRATION')" )
- @PreAuthorize("hasRole('ROLE_USER')")
-//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+// @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/6320e313f6f4f1eecd9e9a5250af3d397072bfa7

[COMMIT MESSAGE]:Protegidas las vistas desde la propias jsp.||Protegidos todos los métodos de servicios.
Arreglado user y customUserDetails
Se puede bloquear y desbloquear usuarios siendo administrador.
-- Finalizada la parte de scpring security básica. --
=========================================================

-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=61&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/smolnij/woowtest/commit/72ae22def199e1e805780dc580cdaad0ea9f5ab9

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/38629af3a0c2dcca0bfad00c8e89d80c92287701

[COMMIT MESSAGE]:FIX MIFOS-3478: Make Mifos Database Version a link to a page that dis…||…plays rows in applied_upgrades

Also removed number formatting in system info page for database version
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/3d5c50b933c2b24340bad81a91eb5ff7968c2e76

[COMMIT MESSAGE]:MIFOS-3577 Change to read-only batch tasks management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/c537dadb0af0f615d89e295a4e4e2c6f7d4c60f5

[COMMIT MESSAGE]:MIFOS-3577 Added privileges for batch jobs management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/448226c92bf267453397d67fa49ae789635569db

[COMMIT MESSAGE]:MIFOS-3577 Added reading values from tasks into batch jobs management…||… page
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/e326c524680e56d1a5ddd011e56d3f844a4a221d

[COMMIT MESSAGE]:Added new page for administrator for batch tasks management.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/6e45ab3e7995ff9fb91e48aa5c005a4c7563dc97

[COMMIT MESSAGE]:Added service facade for roles and permissions||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/c607241b0d479387b8a233e48309845b9a5406fb

[COMMIT MESSAGE]:MIFOS-3327: Added security settings + cosmetics.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/e42b388b90b224b23864d325b5d18495dbad2d74

[COMMIT MESSAGE]:[minor] Expert Access + some bugs||Change-Id: I6e3f9fb813cf6fb07e2909f94e839036eacf1c3f
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/8c8da3bbb933ac4726364714d366226a38ea23e9

[COMMIT MESSAGE]:[CRM-23] Task, Job filters added.||Change-Id: Iadb7f5114e38733bddf2382b4d3ac8ebf69731d0
=========================================================

+ @PreAuthorize("hasRole('ROLE_WORKER')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER') or hasPermission(#taskDTO, 'write')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER') or hasPermission(#taskDTO, 'write')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c7d573e65e4eb1a4d1c1643413a1c341e495b7a9

[COMMIT MESSAGE]:[CRM-23] Services server side authorization.||Change-Id: I79ebb863bb13fdf6de0de75a7880480f39409725
=========================================================

+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#projectDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/f198cded3c4e5ce62f1f28cbb4e2fb9497084f1a

[COMMIT MESSAGE]:[CRM-23] Preparation to annotation use.||Change-Id: I66b2b319e4291bb02d6c43aa050e81746c1df01b
=========================================================

+ @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cleverpig/jsfsecurity/commit/1d0e6d2d9e0f2befd816ee52b50af833d9d307e4

[COMMIT MESSAGE]:first import project||
=========================================================

+ // @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+ // @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")
+// @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+// @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=62&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/cleverpig/jsfsecurity/commit/1d0e6d2d9e0f2befd816ee52b50af833d9d307e4

[COMMIT MESSAGE]:first import project||
=========================================================

+ // @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+ // @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")
+// @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+// @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/60eab28a271bcb0536089cb3263f93d42b7be8d5

[COMMIT MESSAGE]:Fix floorPlan bug. Add change password and logout. Add fix on blog vi…||…ew date. Fix developer view. Add spring secu taglibs. Minor Cleanups.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/8bba916e9a1355192776f22f498809138c297f72

[COMMIT MESSAGE]:[Sprint 4] Checkpoint||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SalimR/roborace/commit/fc3a8dabb9bdfbb31938f89dcf53d43cc4f3bc75

[COMMIT MESSAGE]:- refactorings||- battlefield map repository implementation
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/8f3f50b0d05997510dbad58409c13591c257bce3

[COMMIT MESSAGE]:projektin lisääminen||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/1cc4d8b4b8a75d2380b44318ea1b8b0deb9bbd64

[COMMIT MESSAGE]:* välicommit||
=========================================================

- @PreAuthorize("hasRole('lecturer')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtonic/handson-springsecurity/commit/a98d0dda39a22b88cf4a4bd56b4e2d57845fb7f2

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0cab50e5e14292d83039d65eb756b6204a6a5741

[COMMIT MESSAGE]:MIFOS-4507: add spring security around services for group and client …||…creation
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/298103b363e278aeb3bf251a6ee1f40a64fad3d2

[COMMIT MESSAGE]:MIFOS-4507: add spring security around service||
=========================================================

-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3cd888f6d616cd43690ba079eb73da3dfba96284

[COMMIT MESSAGE]:MIFOS-4507: fix failing acceptance tests||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2c03ce24faba81a6113dd59cc11b185cf4f577e7

[COMMIT MESSAGE]:MIFOS-4507: allow for creation of groups with activation date in past.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0fde8efd847a66b00db0b9d3a4f2bdb78f03ea40

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/18d613b0b7a5620b4ed4577bf8d1229858094eab

[COMMIT MESSAGE]:Revert "MIFOS-4190: service facades for customer historical data."||This reverts commit 74b35c0.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/74b35c0f8ec53d2b1de40f62b1126e9f61c50279

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ed6234219bc7c43edc03d0318e55848279f431b6

[COMMIT MESSAGE]:MIFOS-4190: service facade for updating groups||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/830ce0c88c61389cbc1ff1995a48e4d9a37036e5

[COMMIT MESSAGE]:MIFOS-4190: service facade for retrieving group details||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2ff8b1df77e710da043602714b1d1bad666c4b2f

[COMMIT MESSAGE]:MIFOS-4190: service facade around group creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c3e0171cd1ec67fadf95bc2de09b5e5603b71351

[COMMIT MESSAGE]:MIFOS-4190: refactor dto and implementation for group service facade||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/81f921b0b355d83ce06d9d8274036f3dbb072ffd

[COMMIT MESSAGE]:Added sidebar import for featured and recent. Remove forrent on admin…||… page. Minor cleanups.
=========================================================

- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/60eab28a271bcb0536089cb3263f93d42b7be8d5

[COMMIT MESSAGE]:Fix floorPlan bug. Add change password and logout. Add fix on blog vi…||…ew date. Fix developer view. Add spring secu taglibs. Minor Cleanups.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/81f921b0b355d83ce06d9d8274036f3dbb072ffd

[COMMIT MESSAGE]:Added sidebar import for featured and recent. Remove forrent on admin…||… page. Minor cleanups.
=========================================================

- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/60eab28a271bcb0536089cb3263f93d42b7be8d5

[COMMIT MESSAGE]:Fix floorPlan bug. Add change password and logout. Add fix on blog vi…||…ew date. Fix developer view. Add spring secu taglibs. Minor Cleanups.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview-db/commit/5b60d877f59c4e82e45e7e97eb86d9533ecc723e

[COMMIT MESSAGE]:initial commit for interview-db||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=63&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/81f921b0b355d83ce06d9d8274036f3dbb072ffd

[COMMIT MESSAGE]:Added sidebar import for featured and recent. Remove forrent on admin…||… page. Minor cleanups.
=========================================================

- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/60eab28a271bcb0536089cb3263f93d42b7be8d5

[COMMIT MESSAGE]:Fix floorPlan bug. Add change password and logout. Add fix on blog vi…||…ew date. Fix developer view. Add spring secu taglibs. Minor Cleanups.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview-db/commit/5b60d877f59c4e82e45e7e97eb86d9533ecc723e

[COMMIT MESSAGE]:initial commit for interview-db||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/ad3dee213b000e8ca279ee11410c2c1b81ac2e29

[COMMIT MESSAGE]:move content settings to /settings/content||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vexdev/VexBookstore-BE/commit/8dfc9fe7d7beb7dfcdfb124befd03c09a48664a4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/carlodrs/Projetos/commit/982c28c6fe29f67acf6b6559302e1d2e14dad787

[COMMIT MESSAGE]:Added spring security project||
=========================================================

+ @PreAuthorize("hasRole('supervisor') or hasRole('teller') and (#account.balance + #amount >= -#account.overdraft)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=64&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danielajgrout/dashreports/commit/94d45d4f471d913361642b5ef3d6284404d08b4c

[COMMIT MESSAGE]:work on enhancement issue 76 - added the re-encrpytion utility needs …||…testing

also some design stuff for the website is included here.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/galasso/cas-pac4j-saml2-demo/commit/6355e19ad551546c4122db6e5e78b8290bca285b

[COMMIT MESSAGE]:test2||
=========================================================

+ @PreAuthorize("hasRole('S') ")
+@EnableAspectJAutoProxy //@PreAuthorize("hasRole('S') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/galasso/cas-pac4j-saml2-demo/commit/c08f82625277fcf2dfd73970eadf4c1f01b8e8f3

[COMMIT MESSAGE]:info||
=========================================================

+ @PreAuthorize("hasRole('S') ")
+@EnableAspectJAutoProxy //@PreAuthorize("hasRole('S') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/carlodrs/Projeto3/commit/982c28c6fe29f67acf6b6559302e1d2e14dad787

[COMMIT MESSAGE]:Added spring security project||
=========================================================

+ @PreAuthorize("hasRole('supervisor') or hasRole('teller') and (#account.balance + #amount >= -#account.overdraft)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=65&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Iteam-Bolivia/asfi_ws/commit/9f20a89a32bd96fdc52dad15d552825264c74481

[COMMIT MESSAGE]:primera semana||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/296ebe880482ebcd493dc091d04de5c9caa95a39

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ldapVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ldapVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain = principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #user.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DOMAIN_ADMIN') or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #user.domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username and #user.username == principal.username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain) ")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain and #user.account!=null")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ostacus/home_sync_arlm5/commit/cd2db8919bdabca4935c888e92bb1c9bad2faec4

[COMMIT MESSAGE]:Last fixing||
=========================================================

+ @PreAuthorize("hasRole('IS_CONTACT_ADD')")
+ @PreAuthorize("hasRole('IS_CONTACT_DELETE')")
+ //@PreAuthorize("IS_CONTACT_DELETE")
+ @PreAuthorize("loadAuthorities('CONTACT') and hasAuthority('CONTACT_VIEW')")
+ @PreAuthorize("hasAuthority('CONTACT_ADD')")
+ @PreAuthorize("hasAuthority('CONTACT_DELETE')")
+ @PreAuthorize("hasPermission(#secure,'test')")
+ @PreAuthorize("hasSystemAuthority('TEST_VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chapita/factoryTicketsGit/commit/33834269eae0eaf2ec7f7bd5a5d66dedf6ffab6c

[COMMIT MESSAGE]:first commit with gradle||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/oshingc/CodecomparatorServer/commit/2f950ce07f691d22fa912a6903c9d79c7647421d

[COMMIT MESSAGE]:Todos los archivos de codecomparator, proyecto inicial SpringSecurity||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/569dcf163b126df1eb226e37e488c3aa09445929

[COMMIT MESSAGE]:Revert "Revert "MIFOS-5429: Added ability to remove fees if fee is ne…||…ver used or loan product with attached fee is not applied to account""

This reverts commit 07ca7e8.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/07ca7e85742749d1edc7793e56e601602caa222e

[COMMIT MESSAGE]:Revert "MIFOS-5429: Added ability to remove fees if fee is never used…||… or loan product with attached fee is not applied to account"

This reverts commit 12dd49a.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/12dd49a927849d506f5499a7d2d3ec8d13145000

[COMMIT MESSAGE]:MIFOS-5429: Added ability to remove fees if fee is never used or loan…||… product with attached fee is not applied to account
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=66&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mleyvag/TutoriaFisi/commit/d77aec01a7c5eafcab98138457ab013790d4856a

[COMMIT MESSAGE]:...||1ercomit
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ouahabi/opencms/commit/5ff60cd8bd98eac01af83333099769c034d167c5

[COMMIT MESSAGE]:- First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/MattKing11/TeamProject/commit/a97156adde25c673ae51097ec228476c2b4071ff

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/giacomomarciani/umac/commit/fba94f4cb875d898f4b46626fc50df5509bd87ae

[COMMIT MESSAGE]:User creation||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartekRO/Invoices/commit/e034503fbf0f1a8aa34541cd22f5f4b14ccbe5c1

[COMMIT MESSAGE]:Modyfying invoice||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartekRO/Invoices/commit/1be2f1787e58ac1396ff726feedfb34326b60c3d

[COMMIT MESSAGE]:Security improvements.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=67&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/4fb80761a94c866b8083bcb7d5afaeea4daeed46

[COMMIT MESSAGE]:Authorization mostly on service layer||
=========================================================

+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/wiltro/security-demo/commit/0be299520e244d923f73647b799fd25c859945b6

[COMMIT MESSAGE]:preparation LorraineJug||
=========================================================

+ @PreAuthorize("hasPermission(#oneObject, 'READ') and hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")
+ @PreAuthorize("ROLE_MANAGER")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/enghen10/spring-mvc/commit/150e488f534b9b896ce54d37d4c9210d0b6fb89b

[COMMIT MESSAGE]:Updated||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wwpass/cas-server-support-wwpass/commit/fb3882bf64964c9e1d07802f45d9fbb22d60dd8d

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kremnef/ems/commit/33a5487f285ea111c6c7c74fcde57f34dca4c9a8

[COMMIT MESSAGE]:first commit||
=========================================================

+// @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=68&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liweinan0423/SpringSecurity-Showcase/commit/a18f606e62c2ba5e91d1b546f977ffa042a4e0ef

[COMMIT MESSAGE]:global method security||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AltroCoin/controllerPrototype/commit/213b6e2f047597b90167102c28f8b8434ee1bcf3

[COMMIT MESSAGE]:Initial construct of Java Controller||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/grupocibertec/GProfesor/commit/07f1a501573ee9a13754f8b9fe1effe02ec14279

[COMMIT MESSAGE]:Se Arreglo la parte de Auditoria brindada por Jonathan. Saludos||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irfani/e4ds-template/commit/622bb70b2f49af4a9b47de6d2e7ee1f0d8cc1f76

[COMMIT MESSAGE]:Revert "Update"||This reverts commit f37e979.
=========================================================

-@PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irfani/e4ds-template/commit/f37e979e550084f7fcff19dfc3abd4aad8803984

[COMMIT MESSAGE]:Update||
=========================================================

+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhihaoXian/pluggable/commit/3338eb725d559725d2f91cb789601684306d764c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/peengtao123/pt/commit/c73a815b3d628a569f36401839d7576c2b7f008b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/fa79066f68f2eacceb2bfc8cd4060b4c898c612b

[COMMIT MESSAGE]:Lisätty ensimmäinen versio OppiaineServicestä||
=========================================================

- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/1ae8e39c2cb27739603b052a59fb7ce9e375b114

[COMMIT MESSAGE]:Lisää vuosiluokkakokonaisuuden käsittely (kesken).||Vuosiluokkakokonaisuus API ja palvelu. Refaktorointia.
=========================================================

- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUONTI')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#ops.id, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'POISTO')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS') or hasPermission(#opsId, 'opetussuunnitelma', 'KORJAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=69&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/1358ec35b9ce4f71368d4042b48b4c1f47650eb3

[COMMIT MESSAGE]:Poistettu kaksi metodia OrganisaatioServicestä||
=========================================================

- @PreAuthorize("permitAll()")
- @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/f4de11eac3f4befdfafeeeb45f38753df93df663

[COMMIT MESSAGE]:Lisätty peruskoulujen haku oidin perusteella||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e09cb90557cb3745c0186d14241c2b14f159a3a7

[COMMIT MESSAGE]:Lisätty peruskoulutoimijoiden haku kuntien mukaan||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/46b112cbebde1db31dc6f6d14186d1799a8caa90

[COMMIT MESSAGE]:Hae kuntien ja koulujen nimet koodi-URIn ja oid:n perusteella||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/204fa85f54acec632d9f8d93078ee6d4ddc01456

[COMMIT MESSAGE]:Lisätty peruskoulujen haku organisaatiopalvelusta||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/3657b5210ed3a79d470d4266336e0a9a2a7a9939

[COMMIT MESSAGE]:Lisätty REST-controlleri ulkopuolisille palveluille||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/41ffaa1eece7fe6918e2e7b1d666433776d4a86e

[COMMIT MESSAGE]:MIFOS-4190: add service facades for client transfer and adding back g…||…roup membership for client
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/f1ed4a021489d98846335b73dca5b2504a7fbc80

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client MFI det…||…ails.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/5ee476ffdb61cc663f617c3171afa5658059d1c5

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client family …||…details.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/90d9f9fbf52d2a300471b257f4078c0a79468112

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client persona…||…l information.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/ca9c938ed0cb89884d13af8fe28eef9d9b0efe00

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/0bdb564bd341cb3ba947a6b28b20ee6abf5e6c93

[COMMIT MESSAGE]:reapply reverted commits with changes||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/c075efc210ef56753a7c21fc9c1e926a9fee3240

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/a0d2c24c8a0f52142c615f8d6c2fd0c69c10b34f

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client family details."||Attempting to fix the build by revert to last know working version

This reverts commit 8e62c60.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/37efb2e9e90bb7545526d2de0aa13ffa5752b82d

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client creation."||This reverts commit 54e3f1d.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/f682fdd106d57e7ee88507b41f1a229869e649fc

[COMMIT MESSAGE]:Revert "MIFOS-4190: fix failing acceptance tests"||This reverts commit 3f47848.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/3f478483e5e411c3fac9b692b1d6d5fd28ba5d97

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/54e3f1dddc08dee599594fb00968419915d76ae7

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/8e62c608f98f588eb94247f77dfcb865d52129e8

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tpindel/spectre/commit/ba494aeb092911fb37f676192d6fc3769ffc41e9

[COMMIT MESSAGE]:spectre acceptance test configuration: JBehave, Selenium||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/officiallysingh/homework/commit/430ea13309de2946a1e04e0050f37d074d0bf651

[COMMIT MESSAGE]:adding spring template projects||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/micros-uz/javamicros/commit/68b459dc72bc675bc0d72897f0db73ae11477763

[COMMIT MESSAGE]:Added: security samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/micros-uz/javamicros/commit/68b459dc72bc675bc0d72897f0db73ae11477763

[COMMIT MESSAGE]:Added: security samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/b2b2c95cce039c789219b07c810765b0297e2bcd

[COMMIT MESSAGE]:Reinstated brand read services needing specific perm||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/2f6755dd6c4bfa257e7151676ab6fb8326d36d41

[COMMIT MESSAGE]:Added brands search service for use in autocomplete widget||
=========================================================

+ @PreAuthorize("permitAll")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=70&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/b2b2c95cce039c789219b07c810765b0297e2bcd

[COMMIT MESSAGE]:Reinstated brand read services needing specific perm||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/2f6755dd6c4bfa257e7151676ab6fb8326d36d41

[COMMIT MESSAGE]:Added brands search service for use in autocomplete widget||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mononokehime/restaurantfinder/commit/1e42b13936ee17b4defa21f2d16b07e87b269c87

[COMMIT MESSAGE]:First commit of the code||
=========================================================

+// @PreAuthorize("#memberRelation.name == principal.id")
+// @PreAuthorize("#fromId == principal.id")
+// @PreAuthorize("#initiatorId == principal.id")
+// @PreAuthorize("#fromId == principal.id")
+// @PreAuthorize("#fromId == principal.id")
+// @PreAuthorize("#id == authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/cxf-fediz/commit/31364847e3d5d35273dc5f6498ad9f98cc7dc164

[COMMIT MESSAGE]:[FEDIZ-77] RBAC Support for REST Interface||git-svn-id: https://svn.apache.org/repos/asf/cxf/fediz/trunk@1572730 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_CREATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_DELETE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_LIST')")
+ @PreAuthorize("hasRole('CLAIM_READ')")
+ @PreAuthorize("hasRole('CLAIM_CREATE')")
+ @PreAuthorize("hasRole('CLAIM_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_DELETE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_LIST')")
+ @PreAuthorize("hasRole('ENTITLEMENT_READ')")
+ @PreAuthorize("hasRole('ENTITLEMENT_CREATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_UPDATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_DELETE')")
+ @PreAuthorize("hasRole('IDP_LIST')")
+ @PreAuthorize("hasRole('IDP_READ')")
+ @PreAuthorize("hasRole('IDP_CREATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_DELETE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_LIST')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_DELETE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_LIST')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_READ')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_CREATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/cxf-fediz/commit/31364847e3d5d35273dc5f6498ad9f98cc7dc164

[COMMIT MESSAGE]:[FEDIZ-77] RBAC Support for REST Interface||git-svn-id: https://svn.apache.org/repos/asf/cxf/fediz/trunk@1572730 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_CREATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_DELETE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_LIST')")
+ @PreAuthorize("hasRole('CLAIM_READ')")
+ @PreAuthorize("hasRole('CLAIM_CREATE')")
+ @PreAuthorize("hasRole('CLAIM_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_DELETE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_LIST')")
+ @PreAuthorize("hasRole('ENTITLEMENT_READ')")
+ @PreAuthorize("hasRole('ENTITLEMENT_CREATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_UPDATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_DELETE')")
+ @PreAuthorize("hasRole('IDP_LIST')")
+ @PreAuthorize("hasRole('IDP_READ')")
+ @PreAuthorize("hasRole('IDP_CREATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_DELETE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_LIST')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_DELETE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_LIST')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_READ')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_CREATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jeff83/xcore/commit/0cbeb1ed6c4fdf6316deef7a50804748c971950a

[COMMIT MESSAGE]:First commit||
=========================================================

+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/08c11f4daf695e9326eff53dd12d6b12978de8c8

[COMMIT MESSAGE]:added new method to update password and get app users||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/e020e0403b5241555029485b93ccd5297cba194e

[COMMIT MESSAGE]:Added GetAccountUsers template||
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/33bb2f28c45855bb2dde11cdbba6031918f35af4

[COMMIT MESSAGE]:Added security layer to Daas using oauth 2 spec||
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/morph3o/inspection-framework/commit/2fc50e1f13e45d167863df3b9b7fad451f9a20f6

[COMMIT MESSAGE]:Security implementation and *.insframe.server.account package was||removed.
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_INSPECTOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=71&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/b98eb07da4a19df3d2bbf321a200c9650d7cf959

[COMMIT MESSAGE]:enable secure urls||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ // @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lutics/spring/commit/1935b9357b5c6028d95229ba6bc5257c8561d9de

[COMMIT MESSAGE]:Spring Security 설정, Spring Batch 관련 예제 삭제||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ // @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/6527cba45b548bc90a93dffb55b2f2abbb9f200d

[COMMIT MESSAGE]:Added brand rest endpoint||
=========================================================

+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/7392c16d46f0b877085bc6d8ff68cb9932a3b282

[COMMIT MESSAGE]:Added file upload functionality to sampleObject||New log back configuration to log into separate files
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=72&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/7392c16d46f0b877085bc6d8ff68cb9932a3b282

[COMMIT MESSAGE]:Added file upload functionality to sampleObject||New log back configuration to log into separate files
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oyach/springsecuritydemo/commit/8ed2739fd4617e7cbc4da3e925a2d8d0dc2aea69

[COMMIT MESSAGE]:创建spring security 例子||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oyach/springsecuritydemo/commit/79be0bcc999d261af68c4af9a230b81de9226740

[COMMIT MESSAGE]:增加了jsr250的注解依赖||
=========================================================

- @PreAuthorize("#name=='faith'")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oyach/springsecuritydemo/commit/977feb19d9b801052462b121673af10a855bbb7a

[COMMIT MESSAGE]:增加第二个例子||
=========================================================

+ @PreAuthorize("#name=='faith'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nanfengbobo/eds-deftjs-extjs4-starter/commit/0a8ff5751c69db710a0517162c115fa255f7825d

[COMMIT MESSAGE]:add i18n surpport||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole(ADMIN)")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/4c692b7d1f581759708417b2053a3ebe2949f333

[COMMIT MESSAGE]:Todos los add y modify cambiados y funcionando excepto los de academi…||…cTerm.
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+// @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/67c9e2936fe4c2e4013ab5bf7ccec25d348a3b56

[COMMIT MESSAGE]:Merge commit 'ffe7685146bb5d14efc920c06088d619f90f2972' into spring_s…||…ecurity

Conflicts:
	src/main/java/com/example/tfg/repository/CourseDao.java
	src/main/java/com/example/tfg/service/implementation/AcademicTermServiceImp.java
	src/main/java/com/example/tfg/service/implementation/ActivityServiceImp.java
	src/main/java/com/example/tfg/service/implementation/CourseServiceImp.java
	src/main/java/com/example/tfg/service/implementation/DegreeServiceImp.java
	src/main/java/com/example/tfg/service/implementation/TopicServiceImp.java
	src/main/java/com/example/tfg/web/ActivityController.java
	src/main/webapp/WEB-INF/views/course/view.jsp
	src/main/webapp/WEB-INF/views/module/view.jsp
	target/classes/com/example/tfg/repository/implementation/DegreeDaoImp.class
	target/classes/com/example/tfg/service/implementation/AcademicTermServiceImp.class
	target/classes/com/example/tfg/service/implementation/ActivityServiceImp.class
	target/classes/com/example/tfg/service/implementation/CourseServiceImp.class
	target/classes/com/example/tfg/service/implementation/DegreeServiceImp.class
	target/classes/com/example/tfg/service/implementation/SubjectServiceImp.class
	target/classes/com/example/tfg/web/ActivityController.class
	target/m2e-wtp/web-resources/META-INF/maven/com.example/tfg/pom.properties
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#academicTerm, 'WRITE') or hasPermission(#academicTerm, 'ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasPermission(#academicTerm, 'WRITE') or hasPermission(#academicTerm, admin)" )
+ //@PreAuthorize("hasPermission(returnObject, 'DELETE') or hasPermission(returnObject, 'ADMINISTRATION')" )
+ @PreAuthorize("hasPermission(#academicTerm, 'DELETE') or hasPermission(#academicTerm, 'ADMINISTRATION')" )
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#academicTerm, 'DELETE') or hasPermission(#academicTerm, 'ADMINISTRATION')" )
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/6320e313f6f4f1eecd9e9a5250af3d397072bfa7

[COMMIT MESSAGE]:Protegidas las vistas desde la propias jsp.||Protegidos todos los métodos de servicios.
Arreglado user y customUserDetails
Se puede bloquear y desbloquear usuarios siendo administrador.
-- Finalizada la parte de scpring security básica. --
=========================================================

-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/1d123ed767d003178234e86fd56b09d2aabe43f4

[COMMIT MESSAGE]:Subjects funcionando.||
=========================================================

+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/68ce409736572a25438a0f66e8c55c934bf84fd9

[COMMIT MESSAGE]:can view task,can edit task||
=========================================================

- @PreAuthorize("isAnonymous()")
- @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/d891d17cfa248220c2a38f99b36758b9c91ffb03

[COMMIT MESSAGE]:RAVE-341 patch to add security features to WidgetComments||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1207613 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetComment, 'create_or_update')")
+ @PreAuthorize("hasPermission(#id, 'org.apache.rave.portal.model.WidgetComment', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scuola247/Desktop/commit/db0ca963700a5ee097e489b51f31b86bd3b14251

[COMMIT MESSAGE]:Initial release||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=73&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Scuola247/Desktop/commit/db0ca963700a5ee097e489b51f31b86bd3b14251

[COMMIT MESSAGE]:Initial release||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swaroopboddu/SecureBankingSystem/commit/6fbcedff8dee46f38ddd430a5cda8d93d6622e58

[COMMIT MESSAGE]:First time replication for all good||This is a project with Spring
=========================================================

+ @PreAuthorize("hasPermission(#user, '*;DEPT_SALES')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_SALES')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS:ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS:ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS:ROLE_OFFICIAL;*')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Auronmatrix/Survive/commit/0469e523e859df36ff20a6a2b006acf24f65e76a

[COMMIT MESSAGE]:Implemented service layer authentication||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+@PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Auronmatrix/Survive/commit/3899af6118d1894a008b5baba1d8281e5befa525

[COMMIT MESSAGE]:Added service layer authentication||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhihaoXian/Silverfox/commit/8822902401a3ebd5f3d40a417dc3e7411d443bee

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/81f921b0b355d83ce06d9d8274036f3dbb072ffd

[COMMIT MESSAGE]:Added sidebar import for featured and recent. Remove forrent on admin…||… page. Minor cleanups.
=========================================================

- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/32fb50f7c0e5f0a5f394d2836734a34be5d1ceac

[COMMIT MESSAGE]:Added feature image sorting for amenity and gallery. Fix bugs and cle…||…anups.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/8bba916e9a1355192776f22f498809138c297f72

[COMMIT MESSAGE]:[Sprint 4] Checkpoint||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/b66dd62920b186556792f0de6a3027556ffe9ba6

[COMMIT MESSAGE]:Added base GWT Hibernate showcase||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') AND ( (#user.id == 0 AND hasRole('ROLE_USER_CREATE')) OR (#user.id != 0 AND hasRole('ROLE_USER_EDIT')) )")
+ @PreAuthorize("hasRole('ROLE_USER') AND ( (#user.id == 0 AND hasRole('ROLE_USER_CREATE')) OR (#user.id != 0 AND hasRole('ROLE_USER_EDIT')) )")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=74&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sangeeth/springworks/commit/d906fb76c1c19e499884dbe518b1324b63605e20

[COMMIT MESSAGE]:Spring Security Samples using Maven & Eclipse instead of Gradle||https://github.com/SpringSource/spring-security/tree/master/samples/
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/eds-starter/commit/cbd3685c37df9913e9285ced9122708bc61381d1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/68ce409736572a25438a0f66e8c55c934bf84fd9

[COMMIT MESSAGE]:can view task,can edit task||
=========================================================

- @PreAuthorize("isAnonymous()")
- @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/e92a1f13b44959cc9a9bb9fe1ab1cce49e040f0c

[COMMIT MESSAGE]:Set Permission (Teacher)||Remove Menu (Admin)
Catch Exception at Controller
=========================================================

-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/dbfd7bad3aa302524bda889acedac5673005a9f7

[COMMIT MESSAGE]:Cleaning||
=========================================================

-// @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=75&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/41c0ce0d07cb8322d2e3be61aa46fa83991e7737

[COMMIT MESSAGE]:cong thanh fix||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/brendel/edufarm-soowoowon/commit/855866faa4c61bcedb71992effc479c8f592c4d4

[COMMIT MESSAGE]:Add SanitizeService, SanitazeServiceImpl.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #article.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #article.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")

=========================================================
[CODE-CHANGE-URL]:https://github.com/brendel/edufarm-soowoowon/commit/e4b71a72978490e46c845122eed2c9ab793b7db0

[COMMIT MESSAGE]:Add ajax photo upload feature.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sip1code/commit/0c107d74c510f4dc9c3ace38d2e14e7cf318867b

[COMMIT MESSAGE]:首次更新||同步源代码到一个库下
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=76&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/41c0ce0d07cb8322d2e3be61aa46fa83991e7737

[COMMIT MESSAGE]:cong thanh fix||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/brendel/edufarm-soowoowon/commit/855866faa4c61bcedb71992effc479c8f592c4d4

[COMMIT MESSAGE]:Add SanitizeService, SanitazeServiceImpl.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #article.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #article.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")

=========================================================
[CODE-CHANGE-URL]:https://github.com/brendel/edufarm-soowoowon/commit/e4b71a72978490e46c845122eed2c9ab793b7db0

[COMMIT MESSAGE]:Add ajax photo upload feature.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sip1code/commit/0c107d74c510f4dc9c3ace38d2e14e7cf318867b

[COMMIT MESSAGE]:首次更新||同步源代码到一个库下
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=77&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/3b4309444375b66ecb52b3ad171760ff9017806e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account and #ruleVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ruleVO.domain == principal.domain and #account = principal.account and #id==#ruleVO.id)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/d3b2677966dd5ddacc9fee3c917bb71075e662c2

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/3e766437ab4474111f7a4c8a980f5f2e9574094e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ruleVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ruleVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain and #user.account!=null")
+ @PreAuthorize("(hasRole('ROLE_ADMIN') and #domain == user.domain) or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain and #user.account!=null)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain")
+ @PreAuthorize("(hasRole('ROLE_ADMIN') and #domain == #user.domain) or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/d98f7b1c351d3d9382c5e68f4585b9ef5eb72c1b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview/commit/b780685fee3de1dab67138359b53b41033816bb4

[COMMIT MESSAGE]:big commit !!!11||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview/commit/edb98836ac638d2727ab88e95c572c03d43b9a18

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/e42b388b90b224b23864d325b5d18495dbad2d74

[COMMIT MESSAGE]:[minor] Expert Access + some bugs||Change-Id: I6e3f9fb813cf6fb07e2909f94e839036eacf1c3f
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c7d573e65e4eb1a4d1c1643413a1c341e495b7a9

[COMMIT MESSAGE]:[CRM-23] Services server side authorization.||Change-Id: I79ebb863bb13fdf6de0de75a7880480f39409725
=========================================================

+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#projectDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/f198cded3c4e5ce62f1f28cbb4e2fb9497084f1a

[COMMIT MESSAGE]:[CRM-23] Preparation to annotation use.||Change-Id: I66b2b319e4291bb02d6c43aa050e81746c1df01b
=========================================================

+ @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dedocibula/hotel-booking-manager/commit/f8d6b688b8d05d03dea442a6e252ff3ba558c6ea

[COMMIT MESSAGE]:Added method security on service layer, update RegUser fix||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/85858a502a299d6d14c066efbede1b49021558bf

[COMMIT MESSAGE]:fixed SampleObjectService||
=========================================================

- @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/7392c16d46f0b877085bc6d8ff68cb9932a3b282

[COMMIT MESSAGE]:Added file upload functionality to sampleObject||New log back configuration to log into separate files
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/GregCarter/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/enlightendev/resourceadmin-spring/commit/f984ff814db18bd75bd60a9c1bdacc90121f724c

[COMMIT MESSAGE]:initial entities and their respective rest repository abstractions.||
=========================================================

+ @PreAuthorize("hasRole('search-employee')")
+ //@PreAuthorize("hasRole('search-employee')")
+ @PreAuthorize("hasRole('save-application')")
+ @PreAuthorize("hasRole('save-employee')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/60eab28a271bcb0536089cb3263f93d42b7be8d5

[COMMIT MESSAGE]:Fix floorPlan bug. Add change password and logout. Add fix on blog vi…||…ew date. Fix developer view. Add spring secu taglibs. Minor Cleanups.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/8bba916e9a1355192776f22f498809138c297f72

[COMMIT MESSAGE]:[Sprint 4] Checkpoint||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=78&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/60eab28a271bcb0536089cb3263f93d42b7be8d5

[COMMIT MESSAGE]:Fix floorPlan bug. Add change password and logout. Add fix on blog vi…||…ew date. Fix developer view. Add spring secu taglibs. Minor Cleanups.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodelcua03/metro-residences/commit/8bba916e9a1355192776f22f498809138c297f72

[COMMIT MESSAGE]:[Sprint 4] Checkpoint||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oradev/sping-in-action-code-examples/commit/8507798cd70b1b8f254aa801cb29062747a2cb8f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_USER_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_PUBLIC_MESSAGE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sikm31/yuri3/commit/e0766118f5a802446221d89bbaf4f81a58a24d9d

[COMMIT MESSAGE]:spring1||springproject
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/ebe25c948378ccf244552b6df43371fd2d691c04

[COMMIT MESSAGE]:Merge commit '4c692b7d1f581759708417b2053a3ebe2949f333' into merge||Unificado, academicTerm funcionando con acls.
Creado algún metodo para ver los los grupos de un usuario (ya sea student o professor)

Cambiado el logo-header
=========================================================

- @PreAuthorize("hasPermission(#post, 'WRITE')")
- //@PreAuthorize("hasRole('ROLE_ADMIN')")
- //@PreAuthorize("hasPermission(#academicTerm, 'DELETE') or hasPermission(#academicTerm, 'ADMINISTRATION')" )
- @PreAuthorize("hasRole('ROLE_USER')")
-//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+// @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/4c692b7d1f581759708417b2053a3ebe2949f333

[COMMIT MESSAGE]:Todos los add y modify cambiados y funcionando excepto los de academi…||…cTerm.
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+// @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/6320e313f6f4f1eecd9e9a5250af3d397072bfa7

[COMMIT MESSAGE]:Protegidas las vistas desde la propias jsp.||Protegidos todos los métodos de servicios.
Arreglado user y customUserDetails
Se puede bloquear y desbloquear usuarios siendo administrador.
-- Finalizada la parte de scpring security básica. --
=========================================================

-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/4c692b7d1f581759708417b2053a3ebe2949f333

[COMMIT MESSAGE]:Todos los add y modify cambiados y funcionando excepto los de academi…||…cTerm.
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+// @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/67c9e2936fe4c2e4013ab5bf7ccec25d348a3b56

[COMMIT MESSAGE]:Merge commit 'ffe7685146bb5d14efc920c06088d619f90f2972' into spring_s…||…ecurity

Conflicts:
	src/main/java/com/example/tfg/repository/CourseDao.java
	src/main/java/com/example/tfg/service/implementation/AcademicTermServiceImp.java
	src/main/java/com/example/tfg/service/implementation/ActivityServiceImp.java
	src/main/java/com/example/tfg/service/implementation/CourseServiceImp.java
	src/main/java/com/example/tfg/service/implementation/DegreeServiceImp.java
	src/main/java/com/example/tfg/service/implementation/TopicServiceImp.java
	src/main/java/com/example/tfg/web/ActivityController.java
	src/main/webapp/WEB-INF/views/course/view.jsp
	src/main/webapp/WEB-INF/views/module/view.jsp
	target/classes/com/example/tfg/repository/implementation/DegreeDaoImp.class
	target/classes/com/example/tfg/service/implementation/AcademicTermServiceImp.class
	target/classes/com/example/tfg/service/implementation/ActivityServiceImp.class
	target/classes/com/example/tfg/service/implementation/CourseServiceImp.class
	target/classes/com/example/tfg/service/implementation/DegreeServiceImp.class
	target/classes/com/example/tfg/service/implementation/SubjectServiceImp.class
	target/classes/com/example/tfg/web/ActivityController.class
	target/m2e-wtp/web-resources/META-INF/maven/com.example/tfg/pom.properties
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#academicTerm, 'WRITE') or hasPermission(#academicTerm, 'ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasPermission(#academicTerm, 'WRITE') or hasPermission(#academicTerm, admin)" )
+ //@PreAuthorize("hasPermission(returnObject, 'DELETE') or hasPermission(returnObject, 'ADMINISTRATION')" )
+ @PreAuthorize("hasPermission(#academicTerm, 'DELETE') or hasPermission(#academicTerm, 'ADMINISTRATION')" )
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#academicTerm, 'DELETE') or hasPermission(#academicTerm, 'ADMINISTRATION')" )
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/6320e313f6f4f1eecd9e9a5250af3d397072bfa7

[COMMIT MESSAGE]:Protegidas las vistas desde la propias jsp.||Protegidos todos los métodos de servicios.
Arreglado user y customUserDetails
Se puede bloquear y desbloquear usuarios siendo administrador.
-- Finalizada la parte de scpring security básica. --
=========================================================

-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/b15a7dcf0d819d3b220d309ac16a6fd319b797ff

[COMMIT MESSAGE]:TestController source added||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
+ //@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/afe959a4e13a7e4e9232b9cd2f61b071a58e7efd

[COMMIT MESSAGE]:Add delete log record, add the account lock off, clean source||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/2cb45d174bcb88a1648f44c027c84af84d60d56c

[COMMIT MESSAGE]:jqgrid, ui addedd||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/22eec7f73d61bc140d0658d84ed49d01b32e7b51

[COMMIT MESSAGE]:Add error handling, session timeout more||
=========================================================

- //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")// 유효한 인증된 사용자만이 접근
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
+ @PreAuthorize("#user.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#user.email == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/dc29ca9237086a6fc37ca2b8c6968b56c2ac17a0

[COMMIT MESSAGE]:querydsl added||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근
- //@PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/9c5694b911d8b61917357d2232789971f2580b7d

[COMMIT MESSAGE]:password update complete||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근
+ //@PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/a5141bfbbb2343be7f3b10d92c400eec3353aacd

[COMMIT MESSAGE]:method secutiry check added||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=79&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3392249404e5c0f6dbdfeb214e222f827652ea2a

[COMMIT MESSAGE]:Applying the patch from Venkat for Change security permission on Widg…||…etRating RAVE-350

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1199471 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetRating.entityId, 'org.apache.rave.portal.model.WidgetRating', 'update')")
- @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'create')")
+ @PreAuthorize("hasPermission(#rating, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/cbc32342d57d0afb1f260deed37d60f34d79d14d

[COMMIT MESSAGE]:RAVE-315: WidgetRating ModelPermissionEvaluator and Service Annotations||Applying patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1195508 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'read')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'create')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anis-moubarik/wad/commit/d9480d9c249b220e5d483deeb9c510fc2c0bf95e

[COMMIT MESSAGE]:teht 3 tehty||
=========================================================

+ @PreAuthorize("hasAnyRole('supo,admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nguyenha/intership/commit/a1405bdc5c107fe4ab69ec1dee8fcf33c472db7a

[COMMIT MESSAGE]:My first commit||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nguyenha/intership/commit/a5bd24ddfdc6f11ee33152c724952b570bbdc506

[COMMIT MESSAGE]:Just add new sample function||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ckenny/Spring/commit/6dcf6c563f841c2712b97d87d6a5bee81bbc586a

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mikewiesner/spring-security-3.1-sample/commit/101fe953afaedcec943689befc43628648860d70

[COMMIT MESSAGE]:Solution||
=========================================================

+ @PreAuthorize("hasRole('RIGHT_CREATE')")
+ @PreAuthorize("hasRole('RIGHT_CANCEL') and " +
+ @PreAuthorize("hasRole('RIGHT_UPDATE')")
+ @PreAuthorize("hasRole('RIGHT_CREATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JohnathanMarkSmith/SpringWithDojo/commit/275225c423e642c78fbf971b3ebeb520a4b08af9

[COMMIT MESSAGE]:reinitialized||
=========================================================

+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=80&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/iecanfly/MapCreator/commit/ef101af80002a517a9f2c698a315bba48c5b61d7

[COMMIT MESSAGE]:building creation mode added||
=========================================================

+ @PreAuthorize("@mapSecurity.hasPermission(#building.getCong())")
+ @PreAuthorize("@mapSecurity.hasPermission(#building.getCong())")
+ @PreAuthorize("@mapSecurity.hasPermission(#building.getCong())")

=========================================================
[CODE-CHANGE-URL]:https://github.com/iecanfly/MapCreator/commit/a89d66035f6983fc4e9ae7bb98b86ad8714424e5

[COMMIT MESSAGE]:Source pulled and bulk function update||
=========================================================

+ @PreAuthorize("@mapSecurity.hasPermission(#block.getCong())")
+@PreAuthorize("@mapSecurity.hasPermission(#block.getCong())")
+@PreAuthorize("@mapSecurity.hasPermission(#block.getCong())")

=========================================================
[CODE-CHANGE-URL]:https://github.com/iecanfly/MapCreator/commit/ef101af80002a517a9f2c698a315bba48c5b61d7

[COMMIT MESSAGE]:building creation mode added||
=========================================================

+ @PreAuthorize("@mapSecurity.hasPermission(#building.getCong())")
+ @PreAuthorize("@mapSecurity.hasPermission(#building.getCong())")
+ @PreAuthorize("@mapSecurity.hasPermission(#building.getCong())")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chrysimo/twitter-like-example/commit/f6ff2c7777b65f206beb1c576041ef51d351d3c1

[COMMIT MESSAGE]:Initial Version||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')or #message.author.login == authentication.name")
+ @PreAuthorize("hasRole('ROLE_ADMIN')or #message.author.login == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swcho/ex_spring/commit/b6752ee9029baf3e8f9c794c11ab3f609ac15dde

[COMMIT MESSAGE]:Spring in Action example||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chapita/factoryTicketsGit/commit/33834269eae0eaf2ec7f7bd5a5d66dedf6ffab6c

[COMMIT MESSAGE]:first commit with gradle||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=81&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/springinpractice/sip07/commit/d656ea1a0dfb8f919aa7a42d084a41d8e15f5b8b

[COMMIT MESSAGE]:Moving classes from SVN to git.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/salutmonde/spitter-web/commit/6bb22d68e76b73c41dfad74bc0494677b90f17fd

[COMMIT MESSAGE]:first commit of all file||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/422f74874cf0a5033f0065dad85fb2c77efe7876

[COMMIT MESSAGE]:Refactor (Move) Stats DTO's into stats package||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lintubongarit/sulka/commit/50774edf1d976ca48dfffef66feebd2a5f7d4d18

[COMMIT MESSAGE]:fix frontend tests and add PreAuthorize to actions||
=========================================================

+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasAnyRole('USER,ADMIN')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/1b9c84415807e744b5865da44cd28a01f18af033

[COMMIT MESSAGE]:First commit of criteria example||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/9834f234fc884660288b2edfbd7bb1dfef611060

[COMMIT MESSAGE]:Fixed the el expression||
=========================================================

- @PreAuthorize("hasPermission('Todo', 'search'")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/aa01e218ad918d97aea2f2a225cff55a2a65c7fc

[COMMIT MESSAGE]:Added search() method to TodoService interface||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'search'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dedocibula/hotel-booking-manager/commit/f8d6b688b8d05d03dea442a6e252ff3ba558c6ea

[COMMIT MESSAGE]:Added method security on service layer, update RegUser fix||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/joanluk/spring-data-rest/commit/aa64f7a09f7f7de8d7bf32080579c5eb2d7c14b6

[COMMIT MESSAGE]:include code project||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=82&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/joanluk/spring-data-rest/commit/aa64f7a09f7f7de8d7bf32080579c5eb2d7c14b6

[COMMIT MESSAGE]:include code project||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thepresbyterian/topchef/commit/2ef860afaf9d4a218818400ef057a8b4f3b5f0ea

[COMMIT MESSAGE]:Publishing to GitHub||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/f8fb5a87a1a3e90648edadb73191bb9d5334ba43

[COMMIT MESSAGE]:adding exercise sets, part 1||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/5329e560b97d8b2c1765184d1564440356de6c40

[COMMIT MESSAGE]:sets can now be removed||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/a76b5eb3130a184b57c16022ee1f0cf41a6ae677

[COMMIT MESSAGE]:exercisesetrepository/service/controller||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/f8fb5a87a1a3e90648edadb73191bb9d5334ba43

[COMMIT MESSAGE]:adding exercise sets, part 1||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/6bf584a59d2247c1ac8272ae8b28e2165a24296e

[COMMIT MESSAGE]:moved @PreAuthorize to controller level, added findByUser to WorkoutS…||…ervice
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/860e68551c3c71cf8d74ac2d90ca2993bf07a43b

[COMMIT MESSAGE]:add inactive players||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/3e328172fb62fa46bbeef8d1bd10f33dd0a0b291

[COMMIT MESSAGE]:split scoreBoard to ranked and not ranked||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/b98eb07da4a19df3d2bbf321a200c9650d7cf959

[COMMIT MESSAGE]:enable secure urls||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ // @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8a29cc5bce5afc545e487f5d51929e2cdbede7df

[COMMIT MESSAGE]:Moved prev/next commands to RevisionController and unified them to 'a…||…djacent' request. Moved json-export to RevisionController and made it into an ajax call similar to DDI-export. Moved DDI export and import to StudyController. Removed GeneralService since all methods were either removed or moved elsewhere.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_IMPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_IMPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1063e940ce682f9820163c9f9b2f37dc91d891ab

[COMMIT MESSAGE]:Added studies with errors query. Provided straight access to Referenc…||…ePath parsing so that UI can provide custom references to be parsed. This basically supersedes the normal options request since building of both is very similar and both can address the basic request but path request provides additional functionality.
=========================================================

+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=83&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93

