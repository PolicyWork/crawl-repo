
=========================================================
[CODE-CHANGE-URL]:https://github.com/shashir87/payslip-gen-app/commit/59cb518bfcd39624f927183070bcec33642975d5

[COMMIT MESSAGE]:Initial Commit.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=86&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/maxcom/lorsource/commit/62ab0e633b20e3a55ba8dc34d4c576b76068cba5

[COMMIT MESSAGE]:SS: для post запросов к search-reindex||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maxcom/lorsource/commit/9ed833c4f20d0147b31dc8ce3c90cc835829bad8

[COMMIT MESSAGE]:SS:заработали анатации||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/c53d6bd143b7774c67a449e358165145acf8ecc7

[COMMIT MESSAGE]:After many days I finally have the authorization done.||Seriously, it was all because I had my business services in the
servlet XML file instead of the application context files. ****.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/709c5118f64eb05e89af5e26df295928d7bf739b

[COMMIT MESSAGE]:Still hard at work. Adding in access controls.||Right now the whole salted password is throwing me for a loop. Will
look at it when I come back to this.
=========================================================

+ @PreAuthorize("hasPermission(#lab, admin)")
+ @PreAuthorize("hasPermission(#lab, admin)")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasPermission(#labId, 'jpl.simle.domain.Lab', admin)")
+ @PreAuthorize("hasPermission(#lab, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/279acdba1adbd5c940bbb83a95e425ff0449f695

[COMMIT MESSAGE]:Added user editor and associated unit tests.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/c53d6bd143b7774c67a449e358165145acf8ecc7

[COMMIT MESSAGE]:After many days I finally have the authorization done.||Seriously, it was all because I had my business services in the
servlet XML file instead of the application context files. ****.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/709c5118f64eb05e89af5e26df295928d7bf739b

[COMMIT MESSAGE]:Still hard at work. Adding in access controls.||Right now the whole salted password is throwing me for a loop. Will
look at it when I come back to this.
=========================================================

+ @PreAuthorize("hasPermission(#lab, admin)")
+ @PreAuthorize("hasPermission(#lab, admin)")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasPermission(#labId, 'jpl.simle.domain.Lab', admin)")
+ @PreAuthorize("hasPermission(#lab, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/279acdba1adbd5c940bbb83a95e425ff0449f695

[COMMIT MESSAGE]:Added user editor and associated unit tests.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/62e106d4d732cdfc3593e82168b9ffdbd69995dc

[COMMIT MESSAGE]:Added in group authentication.||Switched to spring security 3.0 because of its awesome PreAuthorize annotation.

Renamed DAO classes to Service classes, because that's what they were. Pushed
domain specific logic into the domain classes and extracted the service
interfaces.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/95e310d5ef45a83612bd045a27620e67dc5180b4

[COMMIT MESSAGE]:Removing dependency on old hibernate based spring validation. Using o…||…val's validation. Changing every controller to use the new validation and added some tests
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/0ab1ab8d986c541eba19290084b211f885e044d4

[COMMIT MESSAGE]:fixing more issues in REST layer regarding institutes||
=========================================================

+ //@PreAuthorize("hasIpAddress('127.0.0.1/24')")
+ //@PreAuthorize("hasIpAddress('127.0.0.1/24')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/5d2991db36145abc64e8f14ec3e972b2b604e26f

[COMMIT MESSAGE]:Adding institute REST APIs. Still, the REST app is broken. Working on…||… it...
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/0ab1ab8d986c541eba19290084b211f885e044d4

[COMMIT MESSAGE]:fixing more issues in REST layer regarding institutes||
=========================================================

+ //@PreAuthorize("hasIpAddress('127.0.0.1/24')")
+ //@PreAuthorize("hasIpAddress('127.0.0.1/24')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/95d2d5c54739a65751151d4aef48c71036ecff27

[COMMIT MESSAGE]:Feature #11: Adding user service layer, controller layer, controller …||…tests
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/95d2d5c54739a65751151d4aef48c71036ecff27

[COMMIT MESSAGE]:Feature #11: Adding user service layer, controller layer, controller …||…tests
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/effc4a82792a10cbd37f507b48cc7001b4f2b7af

[COMMIT MESSAGE]:Feature #9: Adding some REST APIs for Departments. Creating proper se…||…tup for the other APIs too.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/7bac412daf1b3f0e5220acf9d4918a014116d489

[COMMIT MESSAGE]:Adding course controller and setup for scala tests||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sigabort/venus/commit/583f5cd9026afe91d9e8b7d15198c968d2f04480

[COMMIT MESSAGE]:feature #11: adding service/controller layer for user roles||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=2&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/e11114ce770be5cd0242cf15b30833b3b692282e

[COMMIT MESSAGE]:SEC-1023: Add hasPermission() support to SecurityExpressionRoot||http://jira.springframework.org/browse/SEC-1023.

hasPermission() now delegates to a PermissionEvaluator interface, with a default implementation provided by the Acl module. The contacts sample now uses expressions on the ContactManager interface. The permission-evaluator element on global-method-security can be used to set the instance to an AclPermissionEvaluator. If not set, all hasPermission() expressions will evaluate to 'false'.
=========================================================

+@PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bjerkek/Spring-MVC-3.0-Sandbox/commit/cdada2f6b58dea26105c90ff2643a7af3a5fb652

[COMMIT MESSAGE]:initial push||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/32a1bd7fe28f4787278b6a37cc3666c69796e1ef

[COMMIT MESSAGE]:adding sources||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#meeting.owner.email == principal.Username) or (#meeting.study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("(#korTerm.member.email == principal.Username) or hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=3&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/99f235145886f11dff4beafea37d55148f5f8ec5

[COMMIT MESSAGE]:낙서장 서버||
=========================================================

- @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/32a1bd7fe28f4787278b6a37cc3666c69796e1ef

[COMMIT MESSAGE]:adding sources||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#meeting.owner.email == principal.Username) or (#meeting.study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("(#korTerm.member.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/cd7f7c0923ca83921c187041851b99a8bd1d7ed8

[COMMIT MESSAGE]:- 모임뷰 공개||
=========================================================

- @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/32a1bd7fe28f4787278b6a37cc3666c69796e1ef

[COMMIT MESSAGE]:adding sources||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#meeting.owner.email == principal.Username) or (#meeting.study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("(#korTerm.member.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/32a1bd7fe28f4787278b6a37cc3666c69796e1ef

[COMMIT MESSAGE]:adding sources||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#meeting.owner.email == principal.Username) or (#meeting.study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("(#korTerm.member.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/40c78132a43b6e699cd47660c9ec7402136a96f1

[COMMIT MESSAGE]:- 스터디 가입하지 않은 상태에서 모임 신청시 스터디 자동 가입||
=========================================================

- @PreAuthorize("(#meeting.owner.email == principal.Username) or (#meeting.study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#meeting.owner.email == principal.Username) or (#meeting.study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/32a1bd7fe28f4787278b6a37cc3666c69796e1ef

[COMMIT MESSAGE]:adding sources||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#member.email == principal.Username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#meeting.owner.email == principal.Username) or (#meeting.study.manager.email == principal.Username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("hasRole('ROLE_MEMBER')")
+ @PreAuthorize("(#korTerm.member.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jpj/yourcarslife-webapp/commit/f37bdaa4e9bcde77e0a3b066c1243419ab10b2a4

[COMMIT MESSAGE]:Use spring sec @PreAuth to secure request body||
=========================================================

+ @PreAuthorize("@decider.canAccessVehicle(#vehicleId, principal)")
+ @PreAuthorize("@decider.canAccessLog(#logId, principal)")
+ @PreAuthorize("@decider.canAccessVehicle(#inFuelLog.vehicle.vehicleId, principal)")
+ @PreAuthorize("@decider.canAccessVehicle(#inFuelLog.vehicle.vehicleId, principal)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jpj/yourcarslife-webapp/commit/e2caea5879fa2deaaf746d9d355262f6e3106708

[COMMIT MESSAGE]:Ability to delete vehicles||
=========================================================

+ @PreAuthorize("@decider.canAccessVehicle(#vehicleId, principal)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jpj/yourcarslife-webapp/commit/e2fc74b4311f7f853fc9e6a5d6dd488f22ac5e9a

[COMMIT MESSAGE]:No need to secure with @decider since there is no vehicleId present||
=========================================================

- @PreAuthorize("@decider.canAccessVehicle(#inVehicle.vehicleId, principal)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jpj/yourcarslife-webapp/commit/e2fc74b4311f7f853fc9e6a5d6dd488f22ac5e9a

[COMMIT MESSAGE]:No need to secure with @decider since there is no vehicleId present||
=========================================================

- @PreAuthorize("@decider.canAccessVehicle(#inVehicle.vehicleId, principal)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jpj/yourcarslife-webapp/commit/5f466624146ee94e1f05b253466979e3b96ba6b1

[COMMIT MESSAGE]:Ability to update vehicle info.||
=========================================================

+ @PreAuthorize("@decider.canAccessVehicle(#vehicleId, principal)")
+ @PreAuthorize("@decider.canAccessVehicle(#inVehicle.vehicleId, principal)")
+ @PreAuthorize("@decider.canAccessVehicle(#vehicleId, principal)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cleverpig/jsfsecurity/commit/1d0e6d2d9e0f2befd816ee52b50af833d9d307e4

[COMMIT MESSAGE]:first import project||
=========================================================

+ // @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+ // @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")
+// @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+// @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cleverpig/jsfsecurity/commit/1d0e6d2d9e0f2befd816ee52b50af833d9d307e4

[COMMIT MESSAGE]:first import project||
=========================================================

+ // @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+ // @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")
+// @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+// @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=4&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/feafe6b0679f7429864c42b3ce0ad84a579ba8a2

[COMMIT MESSAGE]:ROLE_ADMIN can no longer modify/create UserAccount; changed student q…||…uery to list CatalogRequirement degree code prefixes in its list instead of an enum
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/7eef3be9d45010c4238644cf360fd339b1e9f724

[COMMIT MESSAGE]:still working on upload file||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/2ad7512369d3c30bde48f041428dce8e45f79b52

[COMMIT MESSAGE]:DO NOT pull because there are errors; i am in the process of changing…||… some things around
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/c86b14639b73e7556947793e92c2ed69feeae777

[COMMIT MESSAGE]:transferTo functionality works (file gets stored at /src right now, s…||…o I will probably change that later...)
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN,'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN,'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/71f0dd13e653a98d73f6d7981e883f270b1208e9

[COMMIT MESSAGE]:please do not pull from this, as i do not know if it works. this push…||… is just a way for me to save the code i have written so far for uploading files
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,'ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/a145fbb420bc7623a3df11b450eadc4fa9dac055

[COMMIT MESSAGE]:very basic file upload added; currently does not use a form backing o…||…bject; simply outputs the contents of the file; could be used as a base for the file processing
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/ffdda53406966dd072a9d2e304c27b50e3d5d8fa

[COMMIT MESSAGE]:views.xml changes; security changes; view work effort voter added||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")
- @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/71c34d51e8952d0e3145ff8efb6b8fa0a82e0c36

[COMMIT MESSAGE]:allowed method security on controllers; the beginnings of use case 2 …||…(student view: list jobs) added
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/0caff4acd49575fadec114e71d71e2152af39d11

[COMMIT MESSAGE]:merged with doccz||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/c5d04630801c5486fcbdb6b5ac15ab77e0aae3c0

[COMMIT MESSAGE]:session experiments; when a ROLE_USER UserAccount logs in (students),…||… a Student is kept in the session
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/ffdda53406966dd072a9d2e304c27b50e3d5d8fa

[COMMIT MESSAGE]:views.xml changes; security changes; view work effort voter added||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")
- @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/ffdda53406966dd072a9d2e304c27b50e3d5d8fa

[COMMIT MESSAGE]:views.xml changes; security changes; view work effort voter added||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERUSER'")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")
- @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/feafe6b0679f7429864c42b3ce0ad84a579ba8a2

[COMMIT MESSAGE]:ROLE_ADMIN can no longer modify/create UserAccount; changed student q…||…uery to list CatalogRequirement degree code prefixes in its list instead of an enum
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/8ca5b9990b1c3efdd939f63a514b182c000612ff

[COMMIT MESSAGE]:merge with Suzanna||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a5450d42d1c032bb495ee6fe990e5583a24f32dd

[COMMIT MESSAGE]:MIFOS-6100: While disbursing the loan, if the charges are debited thr…||…ough the savings account, the entry is not getting generated in the Savings Account. But the loan contract is credited with the charges
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e3720c12c7dd2b9def817bb152a5da677793d101

[COMMIT MESSAGE]:Merge branch 'j-maint'||Conflicts:
	appdomain/src/main/java/org/mifos/accounts/loan/util/helpers/LoanConstants.java
	appdomain/src/main/java/org/mifos/accounts/loan/util/helpers/LoanExceptionConstants.java
	appdomain/src/main/resources/org/mifos/config/resources/applicationConfiguration.default.properties
	serviceInterfaces/src/main/java/org/mifos/dto/screen/GroupSearchResultDto.java
	userInterface/src/main/java/org/mifos/clientportfolio/loan/ui/LoanAccountController.java
	userInterface/src/main/java/org/mifos/ui/pentaho/controller/PentahoReportingController.java
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5bc9c2919b2cbc36e2691fd553298266e34e3b42

[COMMIT MESSAGE]:MIFOS-5807: reimplemented adjustment functionality for new Group Loans.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d2dc1ae4050b0d2cea25eb152a5841b7c9cc93e4

[COMMIT MESSAGE]:MIFOS-5628: Added apply charges. WIP||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f9ede4f2ebee1cef684783e27577621178993553

[COMMIT MESSAGE]:MIFOS-5456: Adjusting transfer payments||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0c50fc44721a18b391d477b9406407e0a390bdba

[COMMIT MESSAGE]:MIFOS-5456: Adjusting payments made from savings||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5cb9952261a4b173ec4a7fb24ea02dbf40c05c38

[COMMIT MESSAGE]:MIFOS-5586: Historical adjustments in savings accounts||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/13f1d61ffe60bd9fabdf15a6c8df807d3b45a598

[COMMIT MESSAGE]:MIFOS-5456: Ability to make payments from a savings account||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/994bf5effd69002e5223ca46c860ab8046012527

[COMMIT MESSAGE]:MIFOS-5182: Added interface for pre-payments||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8ec86bfc0028d48ae4ea49f343ae6c885d44f61a

[COMMIT MESSAGE]:MIFOS-5373 Historical Data: option to adjust date, amount, payment type||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3f159c63ae2f1e6c08eae729dbb789039c63640a

[COMMIT MESSAGE]:MIFOS-5373: Reverting a past payment||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9cfd59785fa9372adc439683074396b613dea76f

[COMMIT MESSAGE]:FIXED MIFOS-5451: Add option to apply automatic penalties via Apply C…||…harges dropdown
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=5&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4954bcf9394e44e06a6902340dde085a1d9c193b

[COMMIT MESSAGE]:MIFOS-5992: Added permissions, Pentaho reports parameters and other m…||…inor fixes
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e3720c12c7dd2b9def817bb152a5da677793d101

[COMMIT MESSAGE]:Merge branch 'j-maint'||Conflicts:
	appdomain/src/main/java/org/mifos/accounts/loan/util/helpers/LoanConstants.java
	appdomain/src/main/java/org/mifos/accounts/loan/util/helpers/LoanExceptionConstants.java
	appdomain/src/main/resources/org/mifos/config/resources/applicationConfiguration.default.properties
	serviceInterfaces/src/main/java/org/mifos/dto/screen/GroupSearchResultDto.java
	userInterface/src/main/java/org/mifos/clientportfolio/loan/ui/LoanAccountController.java
	userInterface/src/main/java/org/mifos/ui/pentaho/controller/PentahoReportingController.java
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c99bdd4ee2b4fb747b620d30ac235ebfc59948e1

[COMMIT MESSAGE]:MIFOS-5828: Added date when warehouse database successfully updated||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2e80e5d8b0eb03947c5f0dc27dc759d5f87b4ae6

[COMMIT MESSAGE]:MIFOS-5616: added possibility to upload Pentaho Admin Documents.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bda9889808e3836b1b555c3709b3454333b47ebb

[COMMIT MESSAGE]:MIFOS-5562: Added permissions checking in Pentaho reports||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/867b23b8dead08287175973aa454c950a152d566

[COMMIT MESSAGE]:MIFOS-5562: Fixed report names||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/afe7e498ce23d1eea3488250dd8799744cad94d8

[COMMIT MESSAGE]:MIFOS-5562: Automatic UI generation for parameters||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5ed8c610326400534bc778be53ba48db616d60e4

[COMMIT MESSAGE]:MIFOS-5562: Embedded Pentaho reports, ability to upload and run repor…||…ts(parameters not supported yet)
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/68e45e4bc2988093bb8752e94b6d662c3aab27f4

[COMMIT MESSAGE]:Revert "MIFOS-5562: Embedded Pentaho reports, ability to upload and r…||…un a report without parameters"

This reverts commit 8fca1fc.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8fca1fca671d87f011613be693c2d74c2dc7a301

[COMMIT MESSAGE]:MIFOS-5562: Embedded Pentaho reports, ability to upload and run a rep…||…ort without parameters
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/17f2126a39438d1ac3f5555e26808fbdda574cce

[COMMIT MESSAGE]:MIFOS-5318 : Sort Approved/Rejected list by Created date by default||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e4bde84e2f80b50c0ca8bfda82b05ba5d8ebe2c8

[COMMIT MESSAGE]:MIFOS-5167 : MIFOS-5164 : UI to show REST API operations list||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/62381e630d759ccc3c41e1df64653d7dfc20564b

[COMMIT MESSAGE]:MIFOS-5172 : MIFOS-5164 : Permission for approval step (upgrade and a…||…ctivity)
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0d22867e6550dc18d29b5aebd05f2e7b5c96520f

[COMMIT MESSAGE]:MIFOS-5712: Chart of Accounts UI||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/95078913e7bd697bc91be03da8d20eb314377673

[COMMIT MESSAGE]:Fixed MIFOS-4270 - Groups mandatory savings account wasnt recalculate…||…d after removing client from group with mandatory savings per individual

MIFOS-5844 - Enabled and fixed automated test veryfing group savings TotalAmountDue calculation, while removing client from group

MIFOS-5844 - Fixed intendations
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f9ede4f2ebee1cef684783e27577621178993553

[COMMIT MESSAGE]:MIFOS-5456: Adjusting transfer payments||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/
=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4954bcf9394e44e06a6902340dde085a1d9c193b

[COMMIT MESSAGE]:MIFOS-5992: Added permissions, Pentaho reports parameters and other m…||…inor fixes
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e3720c12c7dd2b9def817bb152a5da677793d101

[COMMIT MESSAGE]:Merge branch 'j-maint'||Conflicts:
	appdomain/src/main/java/org/mifos/accounts/loan/util/helpers/LoanConstants.java
	appdomain/src/main/java/org/mifos/accounts/loan/util/helpers/LoanExceptionConstants.java
	appdomain/src/main/resources/org/mifos/config/resources/applicationConfiguration.default.properties
	serviceInterfaces/src/main/java/org/mifos/dto/screen/GroupSearchResultDto.java
	userInterface/src/main/java/org/mifos/clientportfolio/loan/ui/LoanAccountController.java
	userInterface/src/main/java/org/mifos/ui/pentaho/controller/PentahoReportingController.java
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c99bdd4ee2b4fb747b620d30ac235ebfc59948e1

[COMMIT MESSAGE]:MIFOS-5828: Added date when warehouse database successfully updated||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2e80e5d8b0eb03947c5f0dc27dc759d5f87b4ae6

[COMMIT MESSAGE]:MIFOS-5616: added possibility to upload Pentaho Admin Documents.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bda9889808e3836b1b555c3709b3454333b47ebb

[COMMIT MESSAGE]:MIFOS-5562: Added permissions checking in Pentaho reports||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/867b23b8dead08287175973aa454c950a152d566

[COMMIT MESSAGE]:MIFOS-5562: Fixed report names||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/afe7e498ce23d1eea3488250dd8799744cad94d8

[COMMIT MESSAGE]:MIFOS-5562: Automatic UI generation for parameters||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5ed8c610326400534bc778be53ba48db616d60e4

[COMMIT MESSAGE]:MIFOS-5562: Embedded Pentaho reports, ability to upload and run repor…||…ts(parameters not supported yet)
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/68e45e4bc2988093bb8752e94b6d662c3aab27f4

[COMMIT MESSAGE]:Revert "MIFOS-5562: Embedded Pentaho reports, ability to upload and r…||…un a report without parameters"

This reverts commit 8fca1fc.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8fca1fca671d87f011613be693c2d74c2dc7a301

[COMMIT MESSAGE]:MIFOS-5562: Embedded Pentaho reports, ability to upload and run a rep…||…ort without parameters
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/17f2126a39438d1ac3f5555e26808fbdda574cce

[COMMIT MESSAGE]:MIFOS-5318 : Sort Approved/Rejected list by Created date by default||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e4bde84e2f80b50c0ca8bfda82b05ba5d8ebe2c8

[COMMIT MESSAGE]:MIFOS-5167 : MIFOS-5164 : UI to show REST API operations list||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/62381e630d759ccc3c41e1df64653d7dfc20564b

[COMMIT MESSAGE]:MIFOS-5172 : MIFOS-5164 : Permission for approval step (upgrade and a…||…ctivity)
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('CAN_APPROVE_REST_API')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0d22867e6550dc18d29b5aebd05f2e7b5c96520f

[COMMIT MESSAGE]:MIFOS-5712: Chart of Accounts UI||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/95078913e7bd697bc91be03da8d20eb314377673

[COMMIT MESSAGE]:Fixed MIFOS-4270 - Groups mandatory savings account wasnt recalculate…||…d after removing client from group with mandatory savings per individual

MIFOS-5844 - Enabled and fixed automated test veryfing group savings TotalAmountDue calculation, while removing client from group

MIFOS-5844 - Fixed intendations
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f9ede4f2ebee1cef684783e27577621178993553

[COMMIT MESSAGE]:MIFOS-5456: Adjusting transfer payments||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0c50fc44721a18b391d477b9406407e0a390bdba

[COMMIT MESSAGE]:MIFOS-5456: Adjusting payments made from savings||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5cb9952261a4b173ec4a7fb24ea02dbf40c05c38

[COMMIT MESSAGE]:MIFOS-5586: Historical adjustments in savings accounts||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d622c5fdafe9e75891c6df5ef22180f25e84efa6

[COMMIT MESSAGE]:MIFOS-5456: Permissions for fund transfer||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6dd57b84994937c0fc595e58ed1648776e621b7b

[COMMIT MESSAGE]:MIFOS-5456: Savings-savings fund transfer||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e2f2cd73cd1d8d4b482f6a37e264ce502e8b3906

[COMMIT MESSAGE]:MIFOS-5361: mobile version of savings account details page.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b8a2800ef78b27dc8b88bf73df81aca5573934c8

[COMMIT MESSAGE]:MIFOS-5079: add permissions to create loan, redo loan and create savi…||…ngs account services.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e858cf8fa0734e56d9839f77761e630b269c50a8

[COMMIT MESSAGE]:MIFOS-4573: integration savings of question groups or flexible data w…||…ith savings account creation
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/897495e7486fd26e1ec204ea752ea27073b4840a

[COMMIT MESSAGE]:MIFOS-4669: retrieve customer details for savings account flow||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f3a4e98f62d2a4f69f3df034e341859e0df2ef0c

[COMMIT MESSAGE]:MIFOS-4595: hook in customer search for savings creation flow.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/7d6c551f73d6c0ce8978623847d85d5898c86cf6

[COMMIT MESSAGE]:fix merge conflicts||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3b3788d256b824944b01da66b9b2d288ad3e6b9b

[COMMIT MESSAGE]:MIFOS-4472: remove questionnaire migration code||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e5f5b8a94ac47b9d451ff123aaa995cb54f3820e

[COMMIT MESSAGE]:MIFOS-4531: add support for migrating opening balances for savings ac…||…counts
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/1eec5bb3035235059e6a938fb79964734189148f

[COMMIT MESSAGE]:MIFOS-2514: integrate interest calculation with historical interest d…||…etails for savings product and account.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0312121c378aa017621472427c63cab4acd10fb9

[COMMIT MESSAGE]:MIFOS-4322: service facade for updating loan account status.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e50586ea2f8895f1a6e3d6b3ef927032b2485396

[COMMIT MESSAGE]:MIFOS-4137: remove locale from services signature.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9b66ade00d22703bb2b31d360a44e9675bca6874

[COMMIT MESSAGE]:MIFOS-4137: add service facades for adding and view all notes.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/48716ac5887a548763c3f69ae1e457f469bc72b6

[COMMIT MESSAGE]:MIFOS-4137: add service facade for waive of overdue deposits.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/300bea64662c09544eb24a81e317e6c0cfa0a919

[COMMIT MESSAGE]:MIFOS-4137: fix integration tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a3dd51962248d60a61dca6012dbc4745e95419f5

[COMMIT MESSAGE]:MIFOS-4137: add service facades for edit, update and retrieval of acc…||…ount status and transaction history.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/28d1b11c084745876a7b85d929fa162a01b83b9d

[COMMIT MESSAGE]:fix merge conflicts||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e0e9af2544ff5c295f5f09264915297193bdc261

[COMMIT MESSAGE]:MIFOS-4137: add service facade to handle changing status for savings …||…account.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f8cad7a7defc4f9b5a432fc0ac5187890a0e5bed

[COMMIT MESSAGE]:MIFOS-4137: add service facade for savings account creation. Use fact…||…ory methods for creating savings account.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/308845c3adda51a41e2dd576b63daec26d724f3d

[COMMIT MESSAGE]:MIFOS-4137: add service facades for savings account creation steps.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b257ed7d67d600b801ffa6bfef2a091daf9ba5f6

[COMMIT MESSAGE]:MIFOS-4137: add service facades for adjusting savings account.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d777ea5bfd9aceba6282954e02f1ed08f358c10b

[COMMIT MESSAGE]:MIFOS-4137: add service facades for deposit and withdrawals.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/44115020ec55ae5d3727e4b3728f1c643813971d

[COMMIT MESSAGE]:MIFOS-3868: add service facades around savings account closure.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/71d537d04b8e31546557f1da3f752cfa9d971e5f

[COMMIT MESSAGE]:MIFOS-5801: Changed updating dropdowns in reports||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0b8f7ecdc243ceaff6fec3653100efc5fff16530

[COMMIT MESSAGE]:MIFOS-5652: fixed problem with refresh dropdowns||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/77f8f016689a1e3feed5878a5eba91f43169c0ab

[COMMIT MESSAGE]:FIXED MIFOS-5231: Added methods to retrieve charges for Groups and Ce…||…nters.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/70ad6cef0a72877555c358b227238e33ebaf14b9

[COMMIT MESSAGE]:MIFOS-4385: service facade for adding note to personnel||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ddde14e5a10f245a2b283ae9142d47996c6a177a

[COMMIT MESSAGE]:MIFOS-4190: add services facades around customer search action||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/050e14cea6a62061358382bd41d0297cff93a450

[COMMIT MESSAGE]:MIFOS-4190: add service facades for retrieving change logs for center||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/14b3a182ee4555dea803bbe2e699130d95cfbeb5

[COMMIT MESSAGE]:MIFOS-4190: add service facades around reverting last payment of char…||…ges.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/697ff2717bd2841d871614699eed46ad0de92a4c

[COMMIT MESSAGE]:MIFOS-4190: add service facades around viewing waiving overdue charge…||…s and removing fees for customer accounts. remove unused imports warnings using eclipse quick fix
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/132c873e39966ababe1a445040ebe7005d184036

[COMMIT MESSAGE]:MIFOS-4190: add service facades around viewing transaction history, r…||…ecent activity and waiving charges on customer accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/cb86405a493a22a8a1b7109395439958c8839b72

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer notes action.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/40b8c6aebb22e1a80fe4934780edf0748a1dcc37

[COMMIT MESSAGE]:MIFOS-4190: add service facade around viewing recent activity for cus…||…tomer accounts
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/51af4d6978ca61a72e668050399e4a700fb893ca

[COMMIT MESSAGE]:MIFOS-4190: service facade for edit customer status||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ebbe0390c110fc0f3cc9e33204652d929f41c9cb

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests. refactor dto belonging to c…||…enter get details.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6fb66c1f7fe16264083e535d705c842a2aaeb068

[COMMIT MESSAGE]:MIFOS-4190: refactor dtos to serviceInterfaces package and add spring…||… security for centerServiceFacade
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f49ba0d826caa42c909a9c2bdf8317de9334b217

[COMMIT MESSAGE]:MIFOS-5729: Added new method to resolve permission issue||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e12ac51c6b027a192f098acf976a01222bf7da80

[COMMIT MESSAGE]:MIFOS-5588: Fixed, added methods which no need role||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e29e6039e97de8e9bddfa69dd661123b86986a4f

[COMMIT MESSAGE]:FIXED MIFOS-5335: Added getAcceptedPaymentTypes method.||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ea85373cb0e521297842689c17a2bfc745f4dcd5

[COMMIT MESSAGE]:WIP on MIFOS-4633. Getting the new message customization mechanism to…||… play nicely with legacy labels and menus.

Also includes some code cleanup.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/011a5a3516f6cc968e24cd7a51dd4fa1f1c5efc9

[COMMIT MESSAGE]:MIFOS-3334: add ftl and controllers for view, define and edit report …||…categories
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9a284a96e8db3ae21f6ff61e5ffba8d2f8cff7e5

[COMMIT MESSAGE]:MIFOS-3330: support viewing change logs for loan products||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f3fc1857464554ebf10b0e3d7d8c4834dabc7852

[COMMIT MESSAGE]:MIFOS-3330: tidy up edit-preview-update of loan products||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ccb96088c02cd006a362d7312b792722bd15e9ce

[COMMIT MESSAGE]:MIFOS-3330: support view-edit-preview-update loan product flow.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8d9e2bd6d32628adb6654f1df362e1baae5ef896

[COMMIT MESSAGE]:MIFOS-3331: tidy up spring security and add security around savings p…||…roduct service facades
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8dde5cca30e7a7b43ba1efe3ee6812eabb4526ea

[COMMIT MESSAGE]:MIFOS-3331: ensure business rules validation for edit and create savi…||…ng product flows
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f5e3ad4f212580670451f5f59e7c0523cac67750

[COMMIT MESSAGE]:MIFOS-3331: support display, edit, preview and update saving product …||…details
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b4bd26ac5c31aaca84c56c32a6a37e72c45f43f1

[COMMIT MESSAGE]:MIFOS-3331: define new savings products flow||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/1245e4afa151a2a5794c69028306ce5dc613ed2a

[COMMIT MESSAGE]:MIFOS-3331: load reference data and bind to saving product creation f…||…orm.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d2900ff30ed993516423689ea4353a6ec2ecbd93

[COMMIT MESSAGE]:MIFOS-3328: switch to ftl spring implementation for product categorie…||…s links
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/26b21a9a3367e06e07680283362f0ad495dc46d0

[COMMIT MESSAGE]:MIFOS-3330: support minimal loan product creation||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/67433b5e4edaf1f9b18b0f173ae0eebf9639305a

[COMMIT MESSAGE]:MIFOS-3329: add security and remove old implementation of product mix||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/eea77c004253a839a8299e1b4b412d96edfcc35e

[COMMIT MESSAGE]:MIFOS-3324: remove jsp/struts implementation||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/cc0d126bb359733c045f6e66a7859fb731bfedd1

[COMMIT MESSAGE]:MIFOS-3321: get form binding working for multiselect and hook up cont…||…roller with service facade. Chnage admin.jsp to point to new .ftl url
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e1b91afbcfe622bd73cadfdf316626126a1c8903

[COMMIT MESSAGE]:[MIFOS-3328], Added service facade for load/create/update product cat…||…egories
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/60154c83b0fefde42361954358a385b11b325b7c

[COMMIT MESSAGE]:[MIFOS-3328], partially. Added service facade for viewing product cat…||…egories
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/225737db70f9301662725decc4a75353d6e0c38a

[COMMIT MESSAGE]:MIFOS-3329: allow display of product mix||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/81f43d09d8371d3b0b383ea4ad42f6b60ed32fd9

[COMMIT MESSAGE]:[MIFOS-3321] added service facade mathod for define accepted payment …||…types

Added the basic retrieve and update method for define accepted payment types,
more modification to follow for proper structure.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d5717a8b89d1f034c771d600bc5192deba6fa481

[COMMIT MESSAGE]:Resolved conflicts.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/91a02e1fd28e0b71350aa0df4414a91781b89252

[COMMIT MESSAGE]:MIFOS-3323: fix acceptance test and support same level of security fo…||…r viewing and updating labels
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4a216fc3a3816cf25d8a931b53aa0a9d55a9e4d4

[COMMIT MESSAGE]:Resolved conflicts||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/08da41a0078acbe1ffa0d1bb1dd730e8ec67c29c

[COMMIT MESSAGE]:[MIFOS-3321] Partial commit for the load method services||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/cd5922c5df612d6288fd9fcff09976baf2db8bb1

[COMMIT MESSAGE]:[MIFOS-3324] Added service facade methods for define mandatory/hidden…||… fields
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a5450d42d1c032bb495ee6fe990e5583a24f32dd

[COMMIT MESSAGE]:MIFOS-6100: While disbursing the loan, if the charges are debited thr…||…ough the savings account, the entry is not getting generated in the Savings Account. But the loan contract is credited with the charges
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6cb006d0fe21e49e64fb2a740c1c93526184c215

[COMMIT MESSAGE]:MIFOSAC-72: Check guarantors||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/85039d5c8d37c0104e2bc214b41171c67156ac90

[COMMIT MESSAGE]:MIFOS-5627: Ability to remove guaranty||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/186a9abadf60e3cf326f80fd9a0c7a580dba4981

[COMMIT MESSAGE]:MIFOS-5627: Link Guarantor to Clients||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a8bfc3f08a3e72eae7ef9952cae8119c8eac32d8

[COMMIT MESSAGE]:MIFOS-5961: Fixed interest amount not equal for clients with fee and …||…without fee
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/497cfca531457afdef1b439a7e42c81171b4fddf

[COMMIT MESSAGE]:MIFOS-5917: Added possibility to attach files during Loan creation||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b47f05bb265cc399fd082da8b3fffd1c3e8c5ae0

[COMMIT MESSAGE]:MIFOS-5807: Added group loan repayment ability.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4dc99242672dceb464a63d2b0ce3ab4be7b810b5

[COMMIT MESSAGE]:MIFOS-5616: added possibility to attach admin documents to payments.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/71f7363aee6a27169c81aa65ee402e5205564368

[COMMIT MESSAGE]:MIFOS-5408: configured spring security 'hasPermission' expression eva…||…luator. Custom PermissionEvaluator and Permission implementation.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e12ac51c6b027a192f098acf976a01222bf7da80

[COMMIT MESSAGE]:MIFOS-5588: Fixed, added methods which no need role||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d0d4ed460ff7bc7578e391ecb926f63b42d7376b

[COMMIT MESSAGE]:MIFOS-5456: Support for savings payments in 'Repay loan' screen||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/becf76db367a4c42cfef9f27c144728ee2986033

[COMMIT MESSAGE]:MIFOS-5432: added GLIM details and 'original repayment schedule' mobi…||…le view.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/994bf5effd69002e5223ca46c860ab8046012527

[COMMIT MESSAGE]:MIFOS-5182: Added interface for pre-payments||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9cfd59785fa9372adc439683074396b613dea76f

[COMMIT MESSAGE]:FIXED MIFOS-5451: Add option to apply automatic penalties via Apply C…||…harges dropdown
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3142fa715d7a51a6d4c6a6f73e138a134921c1bf

[COMMIT MESSAGE]:MIFOS-5387: Added possibility to remove penalties from loan account||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/af00cac18309425d2bba177b38261df25d50ddb1

[COMMIT MESSAGE]:MIFOS-3305: Added the possibility to clear overpayments.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/356bdb9827088420a09cf33e06d189ed67463a44

[COMMIT MESSAGE]:Merge branch 'g-maint'||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4802eaadaac7ed3f0262e09b30c577d28d8c6a10

[COMMIT MESSAGE]:MIFOS-5223 Implement REST Api method for repaying the whole Loan amount||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/7da43862a460c443cd970abb6e35edd4fcf41c42

[COMMIT MESSAGE]:Merge branch 'g-maint'||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3eb9b7eb5bf96d19662c865098b9f9fe1bf3a3d4

[COMMIT MESSAGE]:FIXED MIFOS-5148: Added getLoanRepaymentScheduleByNumber method.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ecdfd14f3804f77a8da2f37139f2fa3dba1e9899

[COMMIT MESSAGE]:support overpayment for demo. no interest recalculation at present.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/846686cf8aa9829f7389266b30ce95dac88b7aa0

[COMMIT MESSAGE]:Merge branch 'g-maint'||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b8a2800ef78b27dc8b88bf73df81aca5573934c8

[COMMIT MESSAGE]:MIFOS-5079: add permissions to create loan, redo loan and create savi…||…ngs account services.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/cd7bdd6d75f63687d3aa5606668bb36febdbcf3f

[COMMIT MESSAGE]:MIFOS-5067: remove legacy service methods for loan creation and redo.…||… remove cashflow struts adaptor and commented out code in loan account action.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/51731ef2e233b354b7d0a43d2e19227f46179e08

[COMMIT MESSAGE]:MIFOS-5632: Added ability to permission based editing Question Group.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/fe50b1749353a6bf8dbc9bed1e49005c3a242dbb

[COMMIT MESSAGE]:MIFOS-5408: UI input for mifos role activity restriction.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bda9889808e3836b1b555c3709b3454333b47ebb

[COMMIT MESSAGE]:MIFOS-5562: Added permissions checking in Pentaho reports||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6e45ab3e7995ff9fb91e48aa5c005a4c7563dc97

[COMMIT MESSAGE]:Added service facade for roles and permissions||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/68a33628497114c3144ea80a64ce115bddf81c49

[COMMIT MESSAGE]:FIXED MIFOS-5450: Added permissions to create and edit penalties||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8dd34594407d63a4e910039b413ae1739d00cd4a

[COMMIT MESSAGE]:FIXED MIFOS-5382: added necessary classes and views, created tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/801248301e59ea06c9e7204c43a00a9bbef3aa95

[COMMIT MESSAGE]:MIFOS-5915: Added possibility to attach files to Loan details page||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4e4de8be546845ffcef3312eef544b413146baa0

[COMMIT MESSAGE]:MIFOS-5739: Added file storage logic||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/1a9818c834e07a8a072b2149f7244763ec34a4f2

[COMMIT MESSAGE]:MIFOS-5447 Some properties from config file are not displayed on 'Vie…||…w Organization Settings' page
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/805207a2ca46b04c943cc49a131211cb1a1e1c14

[COMMIT MESSAGE]:Search and replace tabs with 4 spaces in java file||
=========================================================

-@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c96338152c247213573e85120bec795efac8b585

[COMMIT MESSAGE]:Displaying plugin's private settings on admin page.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/770e3d54e1ec2214224336a9ff043bd4d8667d3e

[COMMIT MESSAGE]:FIXED MIFOS-3368: remove permission around view ogranisation settings||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bcc0e5d46f77ae920a8bd0c3c84ad3057c5f222d

[COMMIT MESSAGE]:MIFOS-3046: remove struts configuration for system information and la…||…teness and dormancy
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
- @PreAuthorize("hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
- @PreAuthorize("hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c3368da02db18eff5178687867044ec61928cf16

[COMMIT MESSAGE]:MIFOS-3046: support authorization of viewing system info and organiza…||…tional settings using spring securities expression-based access control.
=========================================================

+ @PreAuthorize("hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=6&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ad12075f8d22cc478eb913a74951427b7c14afe1

[COMMIT MESSAGE]:MIFOS-5663 add new permission to import loans and savings, work on ac…||…ceptance test
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b0604ba304febc4ed1ee5251e47bdf99d708fbb0

[COMMIT MESSAGE]:MIFOS-5663 create a prototype of imports savings||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/47c011be0c607ec651cf8267586e665a815c0f3d

[COMMIT MESSAGE]:MIFOS-5662: Add the possibility to import new Loans data.||Prototype for importing loan accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a5450d42d1c032bb495ee6fe990e5583a24f32dd

[COMMIT MESSAGE]:MIFOS-6100: While disbursing the loan, if the charges are debited thr…||…ough the savings account, the entry is not getting generated in the Savings Account. But the loan contract is credited with the charges
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5bc9c2919b2cbc36e2691fd553298266e34e3b42

[COMMIT MESSAGE]:MIFOS-5807: reimplemented adjustment functionality for new Group Loans.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d2dc1ae4050b0d2cea25eb152a5841b7c9cc93e4

[COMMIT MESSAGE]:MIFOS-5628: Added apply charges. WIP||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/83d9e8f8c648f1fc69f18787db7ad4c184c2babb

[COMMIT MESSAGE]:MIFOS-5671: Improved permissions for the ability to transfer funds from||one account to another
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/13f1d61ffe60bd9fabdf15a6c8df807d3b45a598

[COMMIT MESSAGE]:MIFOS-5456: Ability to make payments from a savings account||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/994bf5effd69002e5223ca46c860ab8046012527

[COMMIT MESSAGE]:MIFOS-5182: Added interface for pre-payments||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8ec86bfc0028d48ae4ea49f343ae6c885d44f61a

[COMMIT MESSAGE]:MIFOS-5373 Historical Data: option to adjust date, amount, payment type||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3f159c63ae2f1e6c08eae729dbb789039c63640a

[COMMIT MESSAGE]:MIFOS-5373: Reverting a past payment||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9cfd59785fa9372adc439683074396b613dea76f

[COMMIT MESSAGE]:FIXED MIFOS-5451: Add option to apply automatic penalties via Apply C…||…harges dropdown
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8dd34594407d63a4e910039b413ae1739d00cd4a

[COMMIT MESSAGE]:FIXED MIFOS-5382: added necessary classes and views, created tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/644d2cfb6298b8b36318217ff16ea46d0c359bcc

[COMMIT MESSAGE]:[MIFOS-4431] Refactored adjust payment to move the operation behind s…||…ervice facade
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/050e14cea6a62061358382bd41d0297cff93a450

[COMMIT MESSAGE]:MIFOS-4190: add service facades for retrieving change logs for center||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6015c4e0cdbde9b043281bb0844596d41e3ba516

[COMMIT MESSAGE]:MIFOS-4190: add service facades around applying charges and reverting…||… charges on customer accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0de19f7bb81ee072796a20b6c7cad3d6cb70a86f

[COMMIT MESSAGE]:Fixed MIFOS-6060: Stack trace appears during apply payment from savin…||…gs account
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/af8acae56cc1b99e2093be2568689f7c9474f1ad

[COMMIT MESSAGE]:MIFOS-5753: Added advanced options to Search functionality||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3f893c7e1cdeeff615e92dda560c8348cd6a9ea5

[COMMIT MESSAGE]:MIFOS-5626: Add possibility to Unblacklist a Client||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/88404cb71e1463ca5abe9bfe2236b4b95d334f2d

[COMMIT MESSAGE]:MIFOS-5916: Added possibility to attach files during Client creation||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/410affc78c4f9ce4bdbe2c6f4dca17f3dba69c3b

[COMMIT MESSAGE]:MIFOS-3534: add permissions to update client details||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c5312e0b461ce787ab0467aee13897c47bdf8cdd

[COMMIT MESSAGE]:MIFOS-3534 adding the possibility to edit clients created by the user||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b45c4ba7160901b48c40b9ae251635a48cabd762

[COMMIT MESSAGE]:MIFOS-3534 Add permission for "Edit client" in "pending approval" state||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ccd27d874a4b000f5c25f8035f19cd386690d135

[COMMIT MESSAGE]:Revert "Merge pull request #29 from lwyszomi/MIFOS-3534-branch"||This reverts commit 25011ff, reversing
changes made to b5f73e4.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ccd27d874a4b000f5c25f8035f19cd386690d135

[COMMIT MESSAGE]:Revert "Merge pull request #29 from lwyszomi/MIFOS-3534-branch"||This reverts commit 25011ff, reversing
changes made to b5f73e4.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4cb15cf50f52d71e8d4b318be59bb7fc8a5df259

[COMMIT MESSAGE]:MIFOS-3534: add permissions to update client details||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/035b6b7ea8eb839416925ec7bb5f109c44226994

[COMMIT MESSAGE]:MIFOS-3534 adding the possibility to edit clients created by the user||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b10800fb7321a5e12e7c90038fd255a7cb88c50d

[COMMIT MESSAGE]:MIFOS-3534 Add permission for "Edit client" in "pending approval" state||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/13f1d61ffe60bd9fabdf15a6c8df807d3b45a598

[COMMIT MESSAGE]:MIFOS-5456: Ability to make payments from a savings account||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/77f8f016689a1e3feed5878a5eba91f43169c0ab

[COMMIT MESSAGE]:FIXED MIFOS-5231: Added methods to retrieve charges for Groups and Ce…||…nters.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c200f0869f0f01a5b16839cf2bec8d716a500750

[COMMIT MESSAGE]:FIXED MIFOS-5151: Added getClientChargesByNumber method.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ed7e0e9502be346a3fe4317a51bd3927ebdb4730

[COMMIT MESSAGE]:MIFOS-5111 : Ability to add/view and edit client photo||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0cab50e5e14292d83039d65eb756b6204a6a5741

[COMMIT MESSAGE]:MIFOS-4507: add spring security around services for group and client …||…creation
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/41ffaa1eece7fe6918e2e7b1d666433776d4a86e

[COMMIT MESSAGE]:MIFOS-4190: add service facades for client transfer and adding back g…||…roup membership for client
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f1ed4a021489d98846335b73dca5b2504a7fbc80

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client MFI det…||…ails.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5ee476ffdb61cc663f617c3171afa5658059d1c5

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client family …||…details.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/90d9f9fbf52d2a300471b257f4078c0a79468112

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client persona…||…l information.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ca9c938ed0cb89884d13af8fe28eef9d9b0efe00

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0bdb564bd341cb3ba947a6b28b20ee6abf5e6c93

[COMMIT MESSAGE]:reapply reverted commits with changes||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c075efc210ef56753a7c21fc9c1e926a9fee3240

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a0d2c24c8a0f52142c615f8d6c2fd0c69c10b34f

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client family details."||Attempting to fix the build by revert to last know working version

This reverts commit 8e62c60.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/37efb2e9e90bb7545526d2de0aa13ffa5752b82d

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client creation."||This reverts commit 54e3f1d.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f682fdd106d57e7ee88507b41f1a229869e649fc

[COMMIT MESSAGE]:Revert "MIFOS-4190: fix failing acceptance tests"||This reverts commit 3f47848.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3f478483e5e411c3fac9b692b1d6d5fd28ba5d97

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/54e3f1dddc08dee599594fb00968419915d76ae7

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8e62c608f98f588eb94247f77dfcb865d52129e8

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/70d49f0c3c13a723f5f7602020d3eebe9d873689

[COMMIT MESSAGE]:MIFOS-5439: added mobile version of the clients and accounts page||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/84e3ed016c27928a87218f6d466069d9d6edc2cd

[COMMIT MESSAGE]:Merge remote-tracking branch 'origin/g-maint'||Conflicts:
	appdomain/src/main/java/org/mifos/application/servicefacade/PersonnelServiceFacadeWebTier.java
	serviceInterfaces/src/main/java/org/mifos/application/admin/servicefacade/PersonnelServiceFacade.java
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5b487cba3d639f18734178e0ae336e6ac0b26d45

[COMMIT MESSAGE]:MIFOS-5177 REST method with refactorization.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5ea99ef072a480f17526510733e98993ed00ce94

[COMMIT MESSAGE]:converting jsp to ftl for change locale dialog||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/fd9d8b00456f9e1d05ac85cd0c31931a6231b9fa

[COMMIT MESSAGE]:fix conflicts from 5d92ffc||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5d92ffc5b2452dfa67948f4c5b1b87599a97dc11

[COMMIT MESSAGE]:MIFOS-4385: remove persistence usage from personnel, initialize langu…||…age supported entity when fetching personnel details
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/fc5b51a7cc817d18e801fd789bccdd909ce988de

[COMMIT MESSAGE]:MIFOS-4385: refactoring of PersonAction||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/65f74d19d649ec29d538b1c1f7f3aa0733de5a27

[COMMIT MESSAGE]:MIFOS-4385: service facade for updating user settings.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bc333d9c84e062a53d374c4cf9b4e8ad7534e141

[COMMIT MESSAGE]:Revert "MIFOS-4385: service facade for updating user settings."||This reverts commit 650162d.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/875297d9193642203f068da635880012cb2de068

[COMMIT MESSAGE]:Revert "MIFOS-4385: refactoring of PersonAction"||This reverts commit 2c68589.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/537a1244304c48dffa8897d2a0bfe9225e86b1a4

[COMMIT MESSAGE]:Revert "MIFOS-4385: remove persistence usage from personnel, initiali…||…ze language supported entity when fetching personnel details"

This reverts commit 5d92ffc.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5d92ffc5b2452dfa67948f4c5b1b87599a97dc11

[COMMIT MESSAGE]:MIFOS-4385: remove persistence usage from personnel, initialize langu…||…age supported entity when fetching personnel details
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2c685891d959bd75726b2836a56a5d118415b9cc

[COMMIT MESSAGE]:MIFOS-4385: refactoring of PersonAction||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/650162d0bf0d2514d18316d5d58243f01e4fd51a

[COMMIT MESSAGE]:MIFOS-4385: service facade for updating user settings.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/38d6834cd44dcd313b491763be10047822ad9419

[COMMIT MESSAGE]:MIFOS-3316: add service facade for update and make struts action use it.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/48cdaf0cb62c4bba6924fcac7f9f39460ca1df22

[COMMIT MESSAGE]:MIFOS-3316: view system users search and paging||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6ed44333041d28b91733bed20c30b9fb8c1e5b56

[COMMIT MESSAGE]:Added service facade for view/define system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/21b321e68980c624b98068a16380acfa1ee9bcca

[COMMIT MESSAGE]:Added files to commit of adding service facade for view system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8beccd3b26bf1f10b74e7640a416027a7d5e3cde

[COMMIT MESSAGE]:MIFOS-3040: fix failing acceptance tests for funds and add spring sec…||…urity for view and create fund service facade methods
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/de12522d301fd52e3f42af29d1bc9417983f803d

[COMMIT MESSAGE]:MIFOS-3040: hook in viewFunds.ftl in place of old implementation||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3189da64f3ee3d31364b55366d948f7809596573

[COMMIT MESSAGE]:[MIFOS-4220] Displaying unapplied contraction scripts in system prope…||…rties
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/38629af3a0c2dcca0bfad00c8e89d80c92287701

[COMMIT MESSAGE]:FIX MIFOS-3478: Make Mifos Database Version a link to a page that dis…||…plays rows in applied_upgrades

Also removed number formatting in system info page for database version
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/126a747bca7428bdaf514e73c4c28d5dfa41fab6

[COMMIT MESSAGE]:MIFOS-4552: fix checklist functionality for edit and create||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8aecdd343972e376090d12612f4091e90d00d03b

[COMMIT MESSAGE]:MIFOS-4385: service facades around update of checklist||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9a4afe3fcd8920b1225cd3c2645554fe52c31188

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for creation of check lists||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3016add2b18c4ff27fedd83f6a0fc978df21e0b8

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3fd114346c44167fca5e8691fb38614e954a2339

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3d5c50b933c2b24340bad81a91eb5ff7968c2e76

[COMMIT MESSAGE]:MIFOS-3577 Change to read-only batch tasks management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c537dadb0af0f615d89e295a4e4e2c6f7d4c60f5

[COMMIT MESSAGE]:MIFOS-3577 Added privileges for batch jobs management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/448226c92bf267453397d67fa49ae789635569db

[COMMIT MESSAGE]:MIFOS-3577 Added reading values from tasks into batch jobs management…||… page
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e326c524680e56d1a5ddd011e56d3f844a4a221d

[COMMIT MESSAGE]:Added new page for administrator for batch tasks management.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c607241b0d479387b8a233e48309845b9a5406fb

[COMMIT MESSAGE]:MIFOS-3327: Added security settings + cosmetics.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4954bcf9394e44e06a6902340dde085a1d9c193b

[COMMIT MESSAGE]:MIFOS-5992: Added permissions, Pentaho reports parameters and other m…||…inor fixes
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=7&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0cab50e5e14292d83039d65eb756b6204a6a5741

[COMMIT MESSAGE]:MIFOS-4507: add spring security around services for group and client …||…creation
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/298103b363e278aeb3bf251a6ee1f40a64fad3d2

[COMMIT MESSAGE]:MIFOS-4507: add spring security around service||
=========================================================

-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3cd888f6d616cd43690ba079eb73da3dfba96284

[COMMIT MESSAGE]:MIFOS-4507: fix failing acceptance tests||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2c03ce24faba81a6113dd59cc11b185cf4f577e7

[COMMIT MESSAGE]:MIFOS-4507: allow for creation of groups with activation date in past.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0fde8efd847a66b00db0b9d3a4f2bdb78f03ea40

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/18d613b0b7a5620b4ed4577bf8d1229858094eab

[COMMIT MESSAGE]:Revert "MIFOS-4190: service facades for customer historical data."||This reverts commit 74b35c0.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/74b35c0f8ec53d2b1de40f62b1126e9f61c50279

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ed6234219bc7c43edc03d0318e55848279f431b6

[COMMIT MESSAGE]:MIFOS-4190: service facade for updating groups||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/830ce0c88c61389cbc1ff1995a48e4d9a37036e5

[COMMIT MESSAGE]:MIFOS-4190: service facade for retrieving group details||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2ff8b1df77e710da043602714b1d1bad666c4b2f

[COMMIT MESSAGE]:MIFOS-4190: service facade around group creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c3e0171cd1ec67fadf95bc2de09b5e5603b71351

[COMMIT MESSAGE]:MIFOS-4190: refactor dto and implementation for group service facade||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/569dcf163b126df1eb226e37e488c3aa09445929

[COMMIT MESSAGE]:Revert "Revert "MIFOS-5429: Added ability to remove fees if fee is ne…||…ver used or loan product with attached fee is not applied to account""

This reverts commit 07ca7e8.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/07ca7e85742749d1edc7793e56e601602caa222e

[COMMIT MESSAGE]:Revert "MIFOS-5429: Added ability to remove fees if fee is never used…||… or loan product with attached fee is not applied to account"

This reverts commit 12dd49a.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/12dd49a927849d506f5499a7d2d3ec8d13145000

[COMMIT MESSAGE]:MIFOS-5429: Added ability to remove fees if fee is never used or loan…||… product with attached fee is not applied to account
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/963c13ac88cd2acc8a574401a3d75554a01d082e

[COMMIT MESSAGE]:WIP on MIFOS-4831 and MIFOS-4633. Added tests, removed unused code an…||…d reduced UI spacing for errors.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8fe4e340411442947eab8342b826109647b5b565

[COMMIT MESSAGE]:WIP on MIFOS-4831 and MIFOS-4633. Cleanup of legacy code and some UI …||…improvements following latest mockups.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3128cfa206b1f7ad96737a02643d5bc6ebb771a7

[COMMIT MESSAGE]:MIFOS-5394 Import client data||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b2489d6a899736eb69296d87c53beb7795cc7ed3

[COMMIT MESSAGE]:MIFOS-4190: update meeting service facade||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5b25e3017f72f0bae5fdf972221737533a8e5528

[COMMIT MESSAGE]:MIFOS-4322: service facade for creating multiple loan accounts for cl…||…ients
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e97afa15e9fd98e3d703f8e68f4f3fa46b03159d

[COMMIT MESSAGE]:MIFOS-3320: add security and put back in old link for view holidays||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9733e730cf2a9155476a9308d2c8477834e7e68b

[COMMIT MESSAGE]:MIFOS-5370: Added permission for setting Month Closing date.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()") // TODO: add similar role as: and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')
+ @PreAuthorize("isFullyAuthenticated()and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/114022c76912a9fc2ad7a389412fb370ed773cc1

[COMMIT MESSAGE]:MIFOS-5370: Added initial version of the controller.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()") // TODO: add similar role as: and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bcc0e5d46f77ae920a8bd0c3c84ad3057c5f222d

[COMMIT MESSAGE]:MIFOS-3046: remove struts configuration for system information and la…||…teness and dormancy
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
- @PreAuthorize("hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
- @PreAuthorize("hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c3368da02db18eff5178687867044ec61928cf16

[COMMIT MESSAGE]:MIFOS-3046: support authorization of viewing system info and organiza…||…tional settings using spring securities expression-based access control.
=========================================================

+ @PreAuthorize("hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c99bdd4ee2b4fb747b620d30ac235ebfc59948e1

[COMMIT MESSAGE]:MIFOS-5828: Added date when warehouse database successfully updated||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2e80e5d8b0eb03947c5f0dc27dc759d5f87b4ae6

[COMMIT MESSAGE]:MIFOS-5616: added possibility to upload Pentaho Admin Documents.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bda9889808e3836b1b555c3709b3454333b47ebb

[COMMIT MESSAGE]:MIFOS-5562: Added permissions checking in Pentaho reports||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/867b23b8dead08287175973aa454c950a152d566

[COMMIT MESSAGE]:MIFOS-5562: Fixed report names||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/afe7e498ce23d1eea3488250dd8799744cad94d8

[COMMIT MESSAGE]:MIFOS-5562: Automatic UI generation for parameters||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5ed8c610326400534bc778be53ba48db616d60e4

[COMMIT MESSAGE]:MIFOS-5562: Embedded Pentaho reports, ability to upload and run repor…||…ts(parameters not supported yet)
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/68e45e4bc2988093bb8752e94b6d662c3aab27f4

[COMMIT MESSAGE]:Revert "MIFOS-5562: Embedded Pentaho reports, ability to upload and r…||…un a report without parameters"

This reverts commit 8fca1fc.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8fca1fca671d87f011613be693c2d74c2dc7a301

[COMMIT MESSAGE]:MIFOS-5562: Embedded Pentaho reports, ability to upload and run a rep…||…ort without parameters
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4dc99242672dceb464a63d2b0ce3ab4be7b810b5

[COMMIT MESSAGE]:MIFOS-5616: added possibility to attach admin documents to payments.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=8&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/07445490a698033e59df77f65a1f94bc4210df8b

[COMMIT MESSAGE]:Fixed MIFOS-6034: Problem with being able to edit question groups whi…||…le not having sufficient privileges
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('CAN_EDIT_QUESTION_GROUP_RESPONSES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/51731ef2e233b354b7d0a43d2e19227f46179e08

[COMMIT MESSAGE]:MIFOS-5632: Added ability to permission based editing Question Group.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/805207a2ca46b04c943cc49a131211cb1a1e1c14

[COMMIT MESSAGE]:Search and replace tabs with 4 spaces in java file||
=========================================================

-@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c970054dd12f250e9a1137694992bb4f6bd3b760

[COMMIT MESSAGE]:[FIXED MIFOS-4045]: Added new permission for activating QG's. Updated…||… data sets and tests.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ACTIVATE_QUESTION_GROUPS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/7703d92b9f34c95562c53be0e75ca2753de0e9aa

[COMMIT MESSAGE]:[MIFOS-3180] Security for question groups||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_CUSTOM_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MANAGE_QUESTION_GROUPS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/707338c8215f5f31474c02caef78efaa3d5b21d0

[COMMIT MESSAGE]:modified PersonnelDaoHibernate so that roles are mapped from assigned…||… activities
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_CUSTOM_FIELDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bf7e28ca768e3ad1fee49ab9bd715de3efaa7947

[COMMIT MESSAGE]:MIFOS-3347 Moved out entire questionnaire to a new maven module, reso…||…lved dependencies etc
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/qcadoo/qcadoo/commit/52edb93f54c11018524f93ca6a1b8358b79b6bde

[COMMIT MESSAGE]:SC# full AspectJ support||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#pluginIdentifier + '#' + #viewName, 'viewDefinition', 'isAuthorizedToSee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#pluginIdentifier + '#' + #viewName, 'viewDefinition', 'isAuthorizedToSee')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/qcadoo/qcadoo/commit/4861ef5fc81309fe40922032c1b973e59447c7ab

[COMMIT MESSAGE]:SC#QCADOO-964 update security mechanizm||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_SUPERVISOR') and ((#pluginIdentifier == 'dictionaries') or (#pluginIdentifier == 'orders')))"
+ @PreAuthorize("isAuthenticated() and hasPermission(#pluginIdentifier + '#' + #viewName, 'viewDefinition', 'isAuthorizedToSee')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/qcadoo/qcadoo/commit/7370168955e7a0fc75a49a819741b22b3273c797

[COMMIT MESSAGE]:RF# move sources for view component||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#pluginIdentifier == 'dictionaries') or (#pluginIdentifier == 'products' "
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#pluginIdentifier == 'dictionaries') or (#pluginIdentifier == 'products' "

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/156b4a6eef2be3b6517ebf67ed23c5eb2ebb7024

[COMMIT MESSAGE]:beta version working||
=========================================================

+ * allowed as if a @PreAuthorize("permitAll") were present.

=========================================================
[CODE-CHANGE-URL]:https://github.com/kyzrfranz/grails-gae-security/commit/95844c134202fdd5d726c3ab81f5a241dcf10dad

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasPermission(#user, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'com.aclgae.User', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/encuestame/encuestame/commit/7776fac0192db2ad2443b00c1d83f878c63283d5

[COMMIT MESSAGE]:Separated mvc in 4 modules||Poll creation bug fixes
achieved i18n integration
=========================================================

+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
- @PreAuthorize("hasRole('ENCUESTAME_USER')")
- @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_EDITOR')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_EDITOR')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=9&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/encuestame/encuestame/commit/7776fac0192db2ad2443b00c1d83f878c63283d5

[COMMIT MESSAGE]:Separated mvc in 4 modules||Poll creation bug fixes
achieved i18n integration
=========================================================

+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
- @PreAuthorize("hasRole('ENCUESTAME_USER')")
- @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_EDITOR')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_EDITOR')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/encuestame/encuestame/commit/7776fac0192db2ad2443b00c1d83f878c63283d5

[COMMIT MESSAGE]:Separated mvc in 4 modules||Poll creation bug fixes
achieved i18n integration
=========================================================

+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
- @PreAuthorize("hasRole('ENCUESTAME_USER')")
- @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_EDITOR')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_EDITOR')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+// @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_OWNER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")
+ @PreAuthorize("hasRole('ENCUESTAME_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/loicfrering/jersey-spring-security/commit/a5b604c8ae6ac82b3497289af91351fdaf9eb06e

[COMMIT MESSAGE]:Initial commit for my Jersey + Spring Security test app.||
=========================================================

+ @PreAuthorize("hasPermission(#name, 'hello')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=10&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pmularien/springsecuritybook/commit/9560f61ec15261db835fa8ab20970f2d41e81674

[COMMIT MESSAGE]:Add Maven-ized Chapters 3-12||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jormaral/SLdirect/commit/f04b5bb214bc0c50c9d0bffd6cc58ccf8f403807

[COMMIT MESSAGE]:Alejandro Sanchez Acosta <asanchez@neurowork.net>||Subida version 0.1
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryanbradley/TicketMonster/commit/8aaaf5b690c79920b0839aad66efa968493a1e58

[COMMIT MESSAGE]:Check security credentials against database content, rather than havi…||…ng user information and passwords defined in ticketmonster-security-context.xml. Introduced a transaction error when a group of reservations was submitted, to proceed to checkout.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryanbradley/TicketMonster/commit/e4486c7a6019049018b1a12865e6cc802750ba3e

[COMMIT MESSAGE]:Update to cross-cutting concerns as well as updating of populateCache…||…() method of AllocationDao.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryanbradley/TicketMonster/commit/e4486c7a6019049018b1a12865e6cc802750ba3e

[COMMIT MESSAGE]:Update to cross-cutting concerns as well as updating of populateCache…||…() method of AllocationDao.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryanbradley/TicketMonster/commit/e4486c7a6019049018b1a12865e6cc802750ba3e

[COMMIT MESSAGE]:Update to cross-cutting concerns as well as updating of populateCache…||…() method of AllocationDao.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryanbradley/TicketMonster/commit/f28081518468c948bb697fd92d8fb0477a29fac1

[COMMIT MESSAGE]:Added aspect support for cross-cutting concerns (logging), still need…||…s further debugging though.
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
-@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryanbradley/TicketMonster/commit/efed9e75cefd8f9466a82e37977193096f2820bb

[COMMIT MESSAGE]:Add a PreAuthorize notation to the SimpleReservationManager class so …||…that the methods of this class can only be executed by someone with User priveleges. This way, we do not allocate any seats to people without an ability to purchase them.
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shuffle-tech/shuffle-tech/commit/2d9bc8383c4fbb67a65d8f59569f3e7e52cad1c7

[COMMIT MESSAGE]:New Structure||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marcocaboni/Spring-Security-Authorization-Annotation/commit/d02dfe306e221a38b5b10753698bdff70f0305d3

[COMMIT MESSAGE]:project import||
=========================================================

+ @PreAuthorize("hasRole('USER') OR hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jenshadlich/spring-hibernate-hazelcast-webapp/commit/4c54b94d1a0df51e148fa70bb7b32b9e272abebc

[COMMIT MESSAGE]:update||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=11&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/SalimR/roborace/commit/fc3a8dabb9bdfbb31938f89dcf53d43cc4f3bc75

[COMMIT MESSAGE]:- refactorings||- battlefield map repository implementation
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/twerno/EduServer/commit/d191e6a11b407dc72364a322ffb0b7a9a0159f8e

[COMMIT MESSAGE]:Konta, UserServices, Pytania, PytaniaServices||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/twerno/EduServer/commit/cdf98b49df0719fd305c9088b6491bedb887b9c9

[COMMIT MESSAGE]:właczenie annotacji||UserService
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eaglestorm/Eldar-Works/commit/7a2180655228565d596d2152d372b5a3dada0848

[COMMIT MESSAGE]:changed to web api and client.||
=========================================================

+ // @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_RES_EDIT')")
+ @PreAuthorize("hasAuthority('ROLE_RES_ADD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eaglestorm/Eldar-Works/commit/7a2180655228565d596d2152d372b5a3dada0848

[COMMIT MESSAGE]:changed to web api and client.||
=========================================================

+ // @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_RES_EDIT')")
+ @PreAuthorize("hasAuthority('ROLE_RES_ADD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aro1976/Gerenciador-de-Arquivos/commit/0fc81547f0abe8c05bc3f7defe2a59d15b85c65c

[COMMIT MESSAGE]:inclusao do modulo documentos||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/st-kurilin/SpringLearning/commit/9e29ed599d7c0217dbf90ee24834392c316a2c04

[COMMIT MESSAGE]:Application roles implemented||
=========================================================

+ @PreAuthorize("hasPermission(#id, 'user-edit')")
+ @PreAuthorize("hasPermission(#id, 'user-edit')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=12&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/996603ea2a19f7087f326debfb214c44b517f214

[COMMIT MESSAGE]:#JC-1254. Updating SAPE configuration.||
=========================================================

+ @PreAuthorize("hasPermission(#componentId, 'COMPONENT', 'GeneralPermission.ADMIN')")
+ @PreAuthorize("hasPermission(#componentId, 'COMPONENT', 'GeneralPermission.ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/12ba8cda539a65d672b3a9699fee8040a5d11619

[COMMIT MESSAGE]:#JC-1282 Correct permission checking in banner service||
=========================================================

- @PreAuthorize("hasPermission(#componentId, 'COMPONENT', 'GeneralPermission.ADMIN')")
+ @PreAuthorize("hasPermission(#forumComponent.id, 'COMPONENT', 'GeneralPermission.ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/2a5ee2a73fa74438dae3fe83235afd9946d5a87c

[COMMIT MESSAGE]:#JC-1282 Permission checking to upload banners.||
=========================================================

+ @PreAuthorize("hasPermission(#componentId, 'COMPONENT', 'GeneralPermission.ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/6f59eb08a75036b946807a512ed8eff91cfa5b52

[COMMIT MESSAGE]:#JC-1381 - Fixed security and javascript problems||
=========================================================

+ @PreAuthorize("hasPermission(#componentId, 'COMPONENT', 'GeneralPermission.ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/7a364c474552f4b85f208b9d1d41f4f7c916e1fb

[COMMIT MESSAGE]:#JC-1379 Fixed permissions on setting administration information||
=========================================================

+ @PreAuthorize("hasPermission(#componentInformation.id, 'COMPONENT', 'GeneralPermission.ADMIN')")
- @PreAuthorize("hasPermission(#componentService.componentOfForum.id, 'COMPONENT', 'GeneralPermission.ADMIN')")
- @PreAuthorize("hasPermission(#componentService.componentOfForum.id, 'COMPONENT', 'GeneralPermission.ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/ec7a800ec64e63c33c734ba3aaee1861a4579efd

[COMMIT MESSAGE]:JC-1449 Forum Administration dialog - access rights fixed, logo added…||… to edit dialog
=========================================================

+ @PreAuthorize("hasPermission(#componentService.componentOfForum.id, 'COMPONENT', 'GeneralPermission.ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/2a5ee2a73fa74438dae3fe83235afd9946d5a87c

[COMMIT MESSAGE]:#JC-1282 Permission checking to upload banners.||
=========================================================

+ @PreAuthorize("hasPermission(#componentId, 'COMPONENT', 'GeneralPermission.ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/552ddbc6f5ece43023011bcea585d96cbb6d94ce

[COMMIT MESSAGE]:#JC-919. Removed @PreAuthorize annotations from prive methods.||
=========================================================

+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#pollId, 'POLL', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_POSTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/3c7f55cc536af9248db68b360115f2dfcfb733aa

[COMMIT MESSAGE]:#JC-789 Fixed poll voting||
=========================================================

- * \@PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic',
+ * \@PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")</code>
- @PreAuthorize("hasPermission(#branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#postId, 'POST', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_OWN_POSTS') or " +
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.DELETE_OWN_POSTS') or " +
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#id, 'org.jtalks.jcommune.model.entity.PrivateMessage', 'GeneralPermission.READ')")
+ @PreAuthorize("hasPermission(#id, 'PRIVATE_MESSAGE', 'GeneralPermission.READ')")
-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', " +
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_TOPICS')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_TOPICS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.DELETE_TOPICS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.MOVE_TOPICS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.MOVE_TOPICS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/35782f1d21e15409c33702d0d92ba2961ada6b5f

[COMMIT MESSAGE]:#JC-789 Fixed poll voting||
=========================================================

- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/489d5de79ebcf9a9231b0905a282051e78cb3238

[COMMIT MESSAGE]:Merge branch 'develop' of jtalks.org:jcommune into develop||Conflicts:
	jcommune-view/jcommune-web-view/src/main/webapp/resources/javascript/custom/datepicker.js
=========================================================

- * \@PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic',
+ * \@PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")</code>
- @PreAuthorize("hasPermission(#branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#postId, 'POST', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_OWN_POSTS') or " +
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.DELETE_OWN_POSTS') or " +
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#id, 'org.jtalks.jcommune.model.entity.PrivateMessage', 'GeneralPermission.READ')")
+ @PreAuthorize("hasPermission(#id, 'PRIVATE_MESSAGE', 'GeneralPermission.READ')")
-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', " +
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_TOPICS')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_TOPICS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.DELETE_TOPICS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.MOVE_TOPICS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.MOVE_TOPICS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/55809539998f869cd793b55bc6e7cb4625a6b318

[COMMIT MESSAGE]:#JC-677 Rename acl_class entities.||
=========================================================

- * \@PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic',
+ * \@PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")</code>
- @PreAuthorize("hasPermission(#branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'BRANCH', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#postId, 'POST', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_OWN_POSTS') or " +
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.DELETE_OWN_POSTS') or " +
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'USER', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#id, 'org.jtalks.jcommune.model.entity.PrivateMessage', 'GeneralPermission.READ')")
+ @PreAuthorize("hasPermission(#id, 'PRIVATE_MESSAGE', 'GeneralPermission.READ')")
-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', " +
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.CREATE_TOPICS')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#topicId, 'TOPIC', 'GeneralPermission.WRITE')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_TOPICS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.DELETE_TOPICS')")
- @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.MOVE_TOPICS')")
+ @PreAuthorize("hasPermission(#branchId, 'BRANCH', 'BranchPermission.MOVE_TOPICS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/05ed35181914c4bfa467c81dbade1943cbf96099

[COMMIT MESSAGE]:#JC-677 Add user to registered user group after registration.||
=========================================================

- @PreAuthorize("hasAnyRole(#branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
+ @PreAuthorize("hasPermission(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
+ @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/dd9bfa85356ecf1a1cfacde522bf2b9165b80296

[COMMIT MESSAGE]:#JC-677 Replace security ELs.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
+ @PreAuthorize("hasAnyRole(#branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
+ @PreAuthorize("hasAnyRole(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
+ @PreAuthorize("hasAnyRole(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
+ @PreAuthorize("hasAnyRole(#topic.branch.id, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.VIEW_TOPICS')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
+ @PreAuthorize("hasAnyRole(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_OWN_POSTS') or " +
- @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#id, 'org.jtalks.jcommune.model.entity.PrivateMessage', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#userFrom.id, 'org.jtalks.jcommune.model.entity.JCUser', 'ProfilePermission.SEND_PRIVATE_MESSAGES')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.CREATE_POSTS')")
- @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', 'GeneralPermission.WRITE')")
+ @PreAuthorize("hasPermission(#branchId, 'org.jtalks.jcommune.model.entity.Branch', 'BranchPermission.DELETE_TOPICS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/cbac05c17b8497ab56f32d18d75c2742064d9ed7

[COMMIT MESSAGE]:#JC-677 Updated hasAnyRole method.||
=========================================================

- @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
- @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
- @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
- @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
- @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
- @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")
- @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtalks-org/jcommune/commit/357576d1de0c8fe7eacf54a182de0af93f57ddd1

[COMMIT MESSAGE]:#JC-677 Added registered user group checking.||
=========================================================

+ @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasPermission('11', null)")
+ @PreAuthorize("hasPermission('11', null)")
- @PreAuthorize("hasAnyRole('"+SecurityConstants.ROLE_USER+"','"+SecurityConstants.ROLE_ADMIN+"')")
+ @PreAuthorize("hasPermission('11', null)")
- @PreAuthorize("hasAnyRole('"+SecurityConstants.ROLE_USER+"','"+SecurityConstants.ROLE_ADMIN+"')")
+ @PreAuthorize("hasPermission('11', null)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/metpetdb/metpetdb/commit/c1cd953f7ede89c270abbc6504ddb4fbb0c968d5

[COMMIT MESSAGE]:Added Sample Search service call||
=========================================================

+ @PreAuthorize("hasAnyRole('MEMBER', 'ANONYMOUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/metpetdb/metpetdb/commit/c870e18faef0286148bb5b2fdb51206eab81f8d9

[COMMIT MESSAGE]:Allow Anonymous user to access Chemical Analysis.||requires the following insert stmt in your database:

insert into users values(9999, 1, 'ANONYMOUS', 'ANONYMOUS@MAIL.COM', E'\\000'::bytea, 'N/A', 'N/A', 'N/A', 'N/A', null, 'N/A', 'N/A', null, 'N', null, null, 'N', 'N/A', 'N/A', 'N');
=========================================================

- @PreAuthorize("hasRole('MEMBER')")
+ @PreAuthorize("hasAnyRole('MEMBER', 'ANONYMOUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/metpetdb/metpetdb/commit/35c788a3d9d3e52d906097d572b101b6d9753154

[COMMIT MESSAGE]:Add functionality for mysamples data||
=========================================================

+ @PreAuthorize("hasRole('MEMBER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/metpetdb/metpetdb/commit/5b9316533529046f665fc4956e1fdcbf78ba1e08

[COMMIT MESSAGE]:Applying roles to the authentication process||Method security
Switched the Chemical Analysis Query to respect owner, project, public
Now using named parameters for better clarification
=========================================================

+ @PreAuthorize("hasRole('MEMBER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=13&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/c943e15bc8aac25088263cb07e148d78a69711f0

[COMMIT MESSAGE]:fully support activate/setcap actions||
=========================================================

+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/1abb9dbdc56e57766c7feebadca8ca73795d032d

[COMMIT MESSAGE]:add forgot password support||
=========================================================

+ @PreAuthorize("!isAuthenticated()")
+ @PreAuthorize("!isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/16e243b18f1550c8a167fb0c9804e87831169cbe

[COMMIT MESSAGE]:add edit functionality in management page||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
- @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")
- @PreAuthorize("hasRole('DOCTOR_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/8989161b896629307f3059bdd41a89b57de0e47b

[COMMIT MESSAGE]:add use case of deleting admin||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/18d50dd78717de933b6f603a84cb23e5bde3eb14

[COMMIT MESSAGE]:add use case of deleting doctor||
=========================================================

+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/7a537c581d2a6c0a2bd6dffd1e759bfec30ddced

[COMMIT MESSAGE]:add use cases of register/edit admins||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/a91b84bfb375fbf548599ebf80c03f6395034415

[COMMIT MESSAGE]:booking management page - phase II||
=========================================================

+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/be76eb97a1dd6c978aa815408c3b0d20535988cb

[COMMIT MESSAGE]:fully support save roster action||
=========================================================

+ @PreAuthorize("hasRole('BOOKING_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/ac3d0d8803cad74423fb351956522bfbd85df6ef

[COMMIT MESSAGE]:fully support deactivate action||
=========================================================

+ @PreAuthorize("hasRole('BOOKING_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/c943e15bc8aac25088263cb07e148d78a69711f0

[COMMIT MESSAGE]:fully support activate/setcap actions||
=========================================================

+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/df0c7cea8a979bc0c9480c7c8df6500faa52ee35

[COMMIT MESSAGE]:dynamically load doctor rosters||
=========================================================

+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/1abb9dbdc56e57766c7feebadca8ca73795d032d

[COMMIT MESSAGE]:add forgot password support||
=========================================================

+ @PreAuthorize("!isAuthenticated()")
+ @PreAuthorize("!isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/16e243b18f1550c8a167fb0c9804e87831169cbe

[COMMIT MESSAGE]:add edit functionality in management page||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
- @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")
- @PreAuthorize("hasRole('DOCTOR_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/8ff3feefb92ed31935b3d6fe729452863e59aad8

[COMMIT MESSAGE]:add change-password use case||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/7fdba1b7b6cbc938f025bca4b28b7b1cead622d2

[COMMIT MESSAGE]:add use cases of register/edit doctors||
=========================================================

+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")
+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/7a537c581d2a6c0a2bd6dffd1e759bfec30ddced

[COMMIT MESSAGE]:add use cases of register/edit admins||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/1abb9dbdc56e57766c7feebadca8ca73795d032d

[COMMIT MESSAGE]:add forgot password support||
=========================================================

+ @PreAuthorize("!isAuthenticated()")
+ @PreAuthorize("!isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/8ff3feefb92ed31935b3d6fe729452863e59aad8

[COMMIT MESSAGE]:add change-password use case||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/7a537c581d2a6c0a2bd6dffd1e759bfec30ddced

[COMMIT MESSAGE]:add use cases of register/edit admins||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/c943e15bc8aac25088263cb07e148d78a69711f0

[COMMIT MESSAGE]:fully support activate/setcap actions||
=========================================================

+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")
+ @PreAuthorize("hasRole('BOOKING_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/1abb9dbdc56e57766c7feebadca8ca73795d032d

[COMMIT MESSAGE]:add forgot password support||
=========================================================

+ @PreAuthorize("!isAuthenticated()")
+ @PreAuthorize("!isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/16e243b18f1550c8a167fb0c9804e87831169cbe

[COMMIT MESSAGE]:add edit functionality in management page||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
- @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")
- @PreAuthorize("hasRole('DOCTOR_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/8989161b896629307f3059bdd41a89b57de0e47b

[COMMIT MESSAGE]:add use case of deleting admin||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/18d50dd78717de933b6f603a84cb23e5bde3eb14

[COMMIT MESSAGE]:add use case of deleting doctor||
=========================================================

+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/7fdba1b7b6cbc938f025bca4b28b7b1cead622d2

[COMMIT MESSAGE]:add use cases of register/edit doctors||
=========================================================

+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")
+ @PreAuthorize("hasRole('DOCTOR_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zwhusst/seeeye/commit/7a537c581d2a6c0a2bd6dffd1e759bfec30ddced

[COMMIT MESSAGE]:add use cases of register/edit admins||
=========================================================

+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("hasRole('ADMIN_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fred4jupiter/sandbox/commit/17f845c15cd625857a29414a5b2cd204b78e5d53

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('RIGHT_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('RIGHT_EXTREM_SECURE') and (#account.balance + #amount >= -#account.overdraft)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fred4jupiter/sandbox/commit/17f845c15cd625857a29414a5b2cd204b78e5d53

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('RIGHT_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('RIGHT_EXTREM_SECURE') and (#account.balance + #amount >= -#account.overdraft)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/archetypes/commit/31c2ac16caf1bfa4d264230afb931f2b098f9523

[COMMIT MESSAGE]:Update libraries||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/archetypes/commit/2cd0acfe4e579e6713cb4c2e12a5352d2d01f1e3

[COMMIT MESSAGE]:updated||
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/archetypes/commit/63eab51f727c7241f9f93661a0f956b249324d1c

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=14&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/e3d0264934a6239689d66433e0c890da70a04d69

[COMMIT MESSAGE]:ajuste de permissões no snc e tratamento da opção para manter o filtro||trocando
apenas o produto após gravar o formulário no SUP
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_CADASTRO', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")
- @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_CADASTRO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=15&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/1f63e61e70780e6181919984a244b59e2e03babe

[COMMIT MESSAGE]:ajuste||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/agmguerra/rep-snic-sncsup/commit/ac61551433b702898391dabec2a1a10bb1958750

[COMMIT MESSAGE]:ajuste||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+ @PreAuthorize("hasRole('ROLE_ADMIN, ROLE_CADASTRO')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Elishtar/jcommune/commit/dcdc740702fe007bac9b6db9c0e2937f3a5c48ee

[COMMIT MESSAGE]:JC-198 Last post column||
=========================================================

+ @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Elishtar/jcommune/commit/5158e0795e4af283a93acf3cfdcad49aa26794c9

[COMMIT MESSAGE]:deletePost() moved to PostService and removed extra argument||
=========================================================

+ @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Elishtar/jcommune/commit/1dcd1db110af7fd2448536ac5080ef26353bb5fd

[COMMIT MESSAGE]:#JC-166 Fixed.||
=========================================================

+ @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Elishtar/jcommune/commit/3eb2e7f9d3ff34f5b9ed63e7199edeba110eb109

[COMMIT MESSAGE]:#JC-170 Topic status||
=========================================================

+ @PreAuthorize("hasPermission(#topicId, 'org.jtalks.jcommune.model.entity.Topic', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Elishtar/jcommune/commit/dcdc740702fe007bac9b6db9c0e2937f3a5c48ee

[COMMIT MESSAGE]:JC-198 Last post column||
=========================================================

+ @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Elishtar/jcommune/commit/5158e0795e4af283a93acf3cfdcad49aa26794c9

[COMMIT MESSAGE]:deletePost() moved to PostService and removed extra argument||
=========================================================

+ @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +
- @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin) or " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Elishtar/jcommune/commit/cf98b93a87a14d08f4a0b3d93d4907902e0af285

[COMMIT MESSAGE]:added authorization||
=========================================================

+ @PreAuthorize("hasPermission(#postId, 'org.jtalks.jcommune.model.entity.Post', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vicziani/jtechlog-spring-security/commit/7bcae436a8f41492ace5f52dcbe788357e93b788

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=16&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/alexbud/message-board/commit/cd32702355dc3b14e6c4d35def7b240c4c57b649

[COMMIT MESSAGE]:user accounts||
=========================================================

- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#user.username == principal.username)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/alexbud/message-board/commit/cd32702355dc3b14e6c4d35def7b240c4c57b649

[COMMIT MESSAGE]:user accounts||
=========================================================

- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#user.username == principal.username)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=17&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/wiltro/security-demo/commit/0be299520e244d923f73647b799fd25c859945b6

[COMMIT MESSAGE]:preparation LorraineJug||
=========================================================

+ @PreAuthorize("hasPermission(#oneObject, 'READ') and hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")
+ @PreAuthorize("ROLE_MANAGER")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wiltro/security-demo/commit/0be299520e244d923f73647b799fd25c859945b6

[COMMIT MESSAGE]:preparation LorraineJug||
=========================================================

+ @PreAuthorize("hasPermission(#oneObject, 'READ') and hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")
+ @PreAuthorize("ROLE_MANAGER")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wiltro/security-demo/commit/0be299520e244d923f73647b799fd25c859945b6

[COMMIT MESSAGE]:preparation LorraineJug||
=========================================================

+ @PreAuthorize("hasPermission(#oneObject, 'READ') and hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")
+ @PreAuthorize("ROLE_MANAGER")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wiltro/security-demo/commit/0be299520e244d923f73647b799fd25c859945b6

[COMMIT MESSAGE]:preparation LorraineJug||
=========================================================

+ @PreAuthorize("hasPermission(#oneObject, 'READ') and hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")
+ @PreAuthorize("ROLE_MANAGER")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/2198e08c80014f68c3c6a56471e62f75236d87bc

[COMMIT MESSAGE]:make projects open access after embargo period||run automatically via quartz job every 24 hours
or manual via embargo settings page
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/ad3dee213b000e8ca279ee11410c2c1b81ac2e29

[COMMIT MESSAGE]:move content settings to /settings/content||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/2198e08c80014f68c3c6a56471e62f75236d87bc

[COMMIT MESSAGE]:make projects open access after embargo period||run automatically via quartz job every 24 hours
or manual via embargo settings page
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/483a4a45e05b89beadab43259edff30027a3775e

[COMMIT MESSAGE]:trigger geoserver update manually||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/150a99ff925c9da9e7bddf4c4b6634c64ff0ec4e

[COMMIT MESSAGE]:srs settings, srs selector dialog||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/150a99ff925c9da9e7bddf4c4b6634c64ff0ec4e

[COMMIT MESSAGE]:srs settings, srs selector dialog||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=18&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e35103d4e7b4d63ffaa8496644e1e42ab83b8153

[COMMIT MESSAGE]:split up about page||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e35103d4e7b4d63ffaa8496644e1e42ab83b8153

[COMMIT MESSAGE]:split up about page||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/61b6c18b649a8f2b9c1e2bfe155bcf1b6a4ad661

[COMMIT MESSAGE]:merge project.global with project read permission||
=========================================================

- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b7f99d2b779b98e1e7642f829849537ca694be96

[COMMIT MESSAGE]:reader/writer/manager roles for users||
=========================================================

- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'manage')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/1b69a60bfccea3a4f0675176f78d2cd7dc347148

[COMMIT MESSAGE]:support delete of data files and animals||
=========================================================

+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e1779a08b30a21537aeb41a58060d0722eb70cce

[COMMIT MESSAGE]:merge projectdetails.jsp and projectdescr.jsp; allow analysis/search/…||…view-animals for published projects; css refactoring
=========================================================

+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("(#searchQuery.mapQueryType == T(org.oztrack.data.model.types.MapQueryType).ALL_PROJECTS) or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/3f2856dc474282743fe0be22519553fae9e6417c

[COMMIT MESSAGE]:admin can update/delete institutions||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/446c4a56a71da75334bfbca31a1fb5851804eefd

[COMMIT MESSAGE]:add institutions list settings page||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/f69f2e2d5911dc15a0db04bbee5e43704c4cc27f

[COMMIT MESSAGE]:restrict deletion of projects/data (fixes #36)||
=========================================================

- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'delete')")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("hasPermission(#project, 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/f69f2e2d5911dc15a0db04bbee5e43704c4cc27f

[COMMIT MESSAGE]:restrict deletion of projects/data (fixes #36)||
=========================================================

- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'delete')")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("hasPermission(#project, 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/5793fa6557ae4d5ab10b2b84efeaaa56e5439044

[COMMIT MESSAGE]:poll data file and update status automatically||
=========================================================

+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/61b6c18b649a8f2b9c1e2bfe155bcf1b6a4ad661

[COMMIT MESSAGE]:merge project.global with project read permission||
=========================================================

- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/1b69a60bfccea3a4f0675176f78d2cd7dc347148

[COMMIT MESSAGE]:support delete of data files and animals||
=========================================================

+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/0c0f8de4534720df4ca8919ad0ebdbd8b3ec0342

[COMMIT MESSAGE]:permitAll access to images/thumbnails||
=========================================================

- @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/3b5409efaad4f9b34f54144e63f22f4c579f0750

[COMMIT MESSAGE]:project image upload/display/delete||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/61b6c18b649a8f2b9c1e2bfe155bcf1b6a4ad661

[COMMIT MESSAGE]:merge project.global with project read permission||
=========================================================

- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/432c3759f82044b90cc279f08336b20be1a55a28

[COMMIT MESSAGE]:split map layers and analyses; split up SearchQuery||
=========================================================

+ @PreAuthorize("#analysis.project.global or hasPermission(#analysis.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("permitAll")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/769b42a77d695cf69d544affcb85eba53be1848a

[COMMIT MESSAGE]:generate png map layers on sever||
=========================================================

+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/ef036121e068cd9c306b845252900bf845a560ca

[COMMIT MESSAGE]:edit institutions on separate page||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/cbb4c65680c313cd58de0fe997b77b653279d2b6

[COMMIT MESSAGE]:replace one institution with another||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/3f2856dc474282743fe0be22519553fae9e6417c

[COMMIT MESSAGE]:admin can update/delete institutions||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=19&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/a91ebe84000c92ec71bacc057314e23df8e17a78

[COMMIT MESSAGE]:tidy up wfs routes||
=========================================================

+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/6853ea0713d004a8b7897bbea7994069a8633dbd

[COMMIT MESSAGE]:split wfs controllers||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/404910a95ae3c21d743c42d54b22e9770cd6eb25

[COMMIT MESSAGE]:add usage summary page||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/61b6c18b649a8f2b9c1e2bfe155bcf1b6a4ad661

[COMMIT MESSAGE]:merge project.global with project read permission||
=========================================================

- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/a91ebe84000c92ec71bacc057314e23df8e17a78

[COMMIT MESSAGE]:tidy up wfs routes||
=========================================================

+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/6853ea0713d004a8b7897bbea7994069a8633dbd

[COMMIT MESSAGE]:split wfs controllers||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/476db25ee2c6cd35212720c12bdb1cff632d577e

[COMMIT MESSAGE]:disable closed access for new projects||based on closedAccessDisableDate config property
=========================================================

+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/1b1e4888287335f89a1d7e2b4358d815ddad85cd

[COMMIT MESSAGE]:show metadata for all projects incl unpublished||all projects shown as markers on home map
links to page showing projects details
data in unpublished projects not included in project page
=========================================================

- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7714e43f8c0cb95cefa6148c3368b887853b4b7a

[COMMIT MESSAGE]:only show published projects on front page; show private and/or publi…||…shed projects on /projects for anonymous and authenticated users
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

===========================
=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/a91ebe84000c92ec71bacc057314e23df8e17a78

[COMMIT MESSAGE]:tidy up wfs routes||
=========================================================

+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/6853ea0713d004a8b7897bbea7994069a8633dbd

[COMMIT MESSAGE]:split wfs controllers||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/404910a95ae3c21d743c42d54b22e9770cd6eb25

[COMMIT MESSAGE]:add usage summary page||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/61b6c18b649a8f2b9c1e2bfe155bcf1b6a4ad661

[COMMIT MESSAGE]:merge project.global with project read permission||
=========================================================

- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/a91ebe84000c92ec71bacc057314e23df8e17a78

[COMMIT MESSAGE]:tidy up wfs routes||
=========================================================

+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/6853ea0713d004a8b7897bbea7994069a8633dbd

[COMMIT MESSAGE]:split wfs controllers||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/476db25ee2c6cd35212720c12bdb1cff632d577e

[COMMIT MESSAGE]:disable closed access for new projects||based on closedAccessDisableDate config property
=========================================================

+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/1b1e4888287335f89a1d7e2b4358d815ddad85cd

[COMMIT MESSAGE]:show metadata for all projects incl unpublished||all projects shown as markers on home map
links to page showing projects details
data in unpublished projects not included in project page
=========================================================

- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7714e43f8c0cb95cefa6148c3368b887853b4b7a

[COMMIT MESSAGE]:only show published projects on front page; show private and/or publi…||…shed projects on /projects for anonymous and authenticated users
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/9d629d09d30258392c3f8a7e5318826e17bd29bb

[COMMIT MESSAGE]:project user management w/ ajax||
=========================================================

+ @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/b49fe7e9a3060d8788c31b916d5b954bef0326d0

[COMMIT MESSAGE]:use nice urls with path variables etc||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/3b5409efaad4f9b34f54144e63f22f4c579f0750

[COMMIT MESSAGE]:project image upload/display/delete||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e429e1ccfc36dafa8e9afae7e6355ba73fdcaed7

[COMMIT MESSAGE]:initial version of full kalman filter||
=========================================================

+ @PreAuthorize("hasPermission(#analysis.project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/2ed6eb4b74c2d64ac75b5892d6b44daa714e119b

[COMMIT MESSAGE]:use format param instead of file extensions||
=========================================================

- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/3bc3b69b289b20731cbc668d4b0e7fce2588cd68

[COMMIT MESSAGE]:shapefile export for analyses||Generalise handling of result files: instead of one KML result link,
send array of (title, format, URL) values that are displayed in the
browser (e.g. KML, KML (outline), SHP). This change moves logic for
outline-only links from the client to the server.
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/2a5713183896833006a4d7d48bd6e4a4ab9b7a65

[COMMIT MESSAGE]:added descriptions to saved analyses||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/31905d0010aaad58eddba95bc7e508cd9da47ae6

[COMMIT MESSAGE]:add simple analysis save feature||users with write access to project can save analyses;
these appear is 'saved analysis' list above 'previous analyses';
saved analyses can be removed, and go back to previous analyses list;
currently no feature to add title/descrption for saved analyses;
currently relatively hidden, under the Previous Analyses' tab in UI.
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/f69f2e2d5911dc15a0db04bbee5e43704c4cc27f

[COMMIT MESSAGE]:restrict deletion of projects/data (fixes #36)||
=========================================================

- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'delete')")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("hasPermission(#project, 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/f69f2e2d5911dc15a0db04bbee5e43704c4cc27f

[COMMIT MESSAGE]:restrict deletion of projects/data (fixes #36)||
=========================================================

- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile, 'delete')")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("hasPermission(#project, 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/4bffb7398e9b098ca9f156c8ef50ba6ea3a06bb3

[COMMIT MESSAGE]:remove all dataspace code||
=========================================================

- @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("hasPermission(#project, 'manage')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e429e1ccfc36dafa8e9afae7e6355ba73fdcaed7

[COMMIT MESSAGE]:initial version of full kalman filter||
=========================================================

+ @PreAuthorize("hasPermission(#analysis.project, 'write')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=20&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e429e1ccfc36dafa8e9afae7e6355ba73fdcaed7

[COMMIT MESSAGE]:initial version of full kalman filter||
=========================================================

+ @PreAuthorize("hasPermission(#analysis.project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/2589826ed3e7c995f1ef6575d9b095c3f7d55d87

[COMMIT MESSAGE]:get date-filtered trajectory distance via ajax||
=========================================================

+ @PreAuthorize("hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/61b6c18b649a8f2b9c1e2bfe155bcf1b6a4ad661

[COMMIT MESSAGE]:merge project.global with project read permission||
=========================================================

- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/31905d0010aaad58eddba95bc7e508cd9da47ae6

[COMMIT MESSAGE]:add simple analysis save feature||users with write access to project can save analyses;
these appear is 'saved analysis' list above 'previous analyses';
saved analyses can be removed, and go back to previous analyses list;
currently no feature to add title/descrption for saved analyses;
currently relatively hidden, under the Previous Analyses' tab in UI.
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/db58240ea0134ea996968bcb2b1f4a96050861a4

[COMMIT MESSAGE]:improvements to storage of run analyses|| * separate creation of analyses and retrieval of results
 * save analyses even for anonymous users (keyed by session)
 * show list of previous transactions, restricted to: current user, if user logged in; or by session id for anonymous users (stops analyses run by users being visible to others)
 * replaying a saved analysis does not save a duplicate record - plays old one by ID
=========================================================

- @PreAuthorize("#analysis.project.global or hasPermission(#analysis.project, 'read')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#analysis.project.global or hasPermission(#analysis.project, 'read')")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/432c3759f82044b90cc279f08336b20be1a55a28

[COMMIT MESSAGE]:split map layers and analyses; split up SearchQuery||
=========================================================

+ @PreAuthorize("#analysis.project.global or hasPermission(#analysis.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("permitAll")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/769b42a77d695cf69d544affcb85eba53be1848a

[COMMIT MESSAGE]:generate png map layers on sever||
=========================================================

+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/c1694dae9309fe0c1862601ecfb7fe5d6bc7d3de

[COMMIT MESSAGE]:allow login via aaf||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/11b21599ae05d165460c57f24585bfa60e55dce0

[COMMIT MESSAGE]:support multiple animals in tracks kml export||
=========================================================

- @PreAuthorize("hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/9be015019537443cab76cefff1ed76bd7fb0a264

[COMMIT MESSAGE]:/search: use GET not POST; ditch session attrs||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/61b6c18b649a8f2b9c1e2bfe155bcf1b6a4ad661

[COMMIT MESSAGE]:merge project.global with project read permission||
=========================================================

- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/fd70691165db6bd88359a647d95250591f108ab5

[COMMIT MESSAGE]:improved search and export||always allow export (no need for prev query in session)
download with file extension (export.xls)
format dates and numbers in spreadsheet
freeze first row in spreadsheet
=========================================================

+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e429e1ccfc36dafa8e9afae7e6355ba73fdcaed7

[COMMIT MESSAGE]:initial version of full kalman filter||
=========================================================

+ @PreAuthorize("hasPermission(#analysis.project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/db58240ea0134ea996968bcb2b1f4a96050861a4

[COMMIT MESSAGE]:improvements to storage of run analyses|| * separate creation of analyses and retrieval of results
 * save analyses even for anonymous users (keyed by session)
 * show list of previous transactions, restricted to: current user, if user logged in; or by session id for anonymous users (stops analyses run by users being visible to others)
 * replaying a saved analysis does not save a duplicate record - plays old one by ID
=========================================================

- @PreAuthorize("#analysis.project.global or hasPermission(#analysis.project, 'read')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#analysis.project.global or hasPermission(#analysis.project, 'read')")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/e429e1ccfc36dafa8e9afae7e6355ba73fdcaed7

[COMMIT MESSAGE]:initial version of full kalman filter||
=========================================================

+ @PreAuthorize("hasPermission(#analysis.project, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/3b5409efaad4f9b34f54144e63f22f4c579f0750

[COMMIT MESSAGE]:project image upload/display/delete||
=========================================================

- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'read')")
+ @PreAuthorize("hasPermission(#projectImage.project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ed1f3748ccf40e51f97becef097294d4911c6976

[COMMIT MESSAGE]:Added last update column to ApnsDevice model||Updated AppleApnsService to set last update time
Added AppleIosController to handle iOS related web service calls
Added get/set methods to ConfigService for default namespace
Updated EmailService to use new ConfigService getter for default
namespace
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPLE_IOS_USER')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ffb770e64e0bba24f2b8c25c0e2596945fc507e0

[COMMIT MESSAGE]:userUpdate method added to Location controller||Added UserLocationRepository custom methods
Added AuthenticationEventListeners
Converted controller authorization to annotations on the controller
classes
Added additional fields to user model
Added APNs device token model
Renamed HttpProxy controller to ProxyController and changed mapping
path
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DEVICE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DRIVER_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_INTERFACE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_LOCATION_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROXY_USER','ROLE_WEBCAM_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WEBCAM_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ffb770e64e0bba24f2b8c25c0e2596945fc507e0

[COMMIT MESSAGE]:userUpdate method added to Location controller||Added UserLocationRepository custom methods
Added AuthenticationEventListeners
Converted controller authorization to annotations on the controller
classes
Added additional fields to user model
Added APNs device token model
Renamed HttpProxy controller to ProxyController and changed mapping
path
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DEVICE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DRIVER_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_INTERFACE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_LOCATION_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROXY_USER','ROLE_WEBCAM_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WEBCAM_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/213f0b21eb795c178a119c2f278e16726f266d63

[COMMIT MESSAGE]:Added SecurityPanelController for controlling the security panel||Updated DeviceService so that getting devices by class returns a
DriverDevice instead of Device
Cleaned up some XML files
Added log4j.properties monitoring to web.xml
Deleted unused CSS files
Other stuff
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SECURITYPANEL_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/77860a98c744cfdf36af73f1f6d644f86267d351

[COMMIT MESSAGE]:Fixed transaction issue in AppleApnsServiceImpl||Added APNs test method in AppleIosController
=========================================================

- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ed1f3748ccf40e51f97becef097294d4911c6976

[COMMIT MESSAGE]:Added last update column to ApnsDevice model||Updated AppleApnsService to set last update time
Added AppleIosController to handle iOS related web service calls
Added get/set methods to ConfigService for default namespace
Updated EmailService to use new ConfigService getter for default
namespace
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPLE_IOS_USER')")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=21&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ffb770e64e0bba24f2b8c25c0e2596945fc507e0

[COMMIT MESSAGE]:userUpdate method added to Location controller||Added UserLocationRepository custom methods
Added AuthenticationEventListeners
Converted controller authorization to annotations on the controller
classes
Added additional fields to user model
Added APNs device token model
Renamed HttpProxy controller to ProxyController and changed mapping
path
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DEVICE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DRIVER_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_INTERFACE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_LOCATION_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROXY_USER','ROLE_WEBCAM_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WEBCAM_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ed1f3748ccf40e51f97becef097294d4911c6976

[COMMIT MESSAGE]:Added last update column to ApnsDevice model||Updated AppleApnsService to set last update time
Added AppleIosController to handle iOS related web service calls
Added get/set methods to ConfigService for default namespace
Updated EmailService to use new ConfigService getter for default
namespace
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPLE_IOS_USER')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ffb770e64e0bba24f2b8c25c0e2596945fc507e0

[COMMIT MESSAGE]:userUpdate method added to Location controller||Added UserLocationRepository custom methods
Added AuthenticationEventListeners
Converted controller authorization to annotations on the controller
classes
Added additional fields to user model
Added APNs device token model
Renamed HttpProxy controller to ProxyController and changed mapping
path
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DEVICE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DRIVER_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_INTERFACE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_LOCATION_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROXY_USER','ROLE_WEBCAM_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WEBCAM_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ffb770e64e0bba24f2b8c25c0e2596945fc507e0

[COMMIT MESSAGE]:userUpdate method added to Location controller||Added UserLocationRepository custom methods
Added AuthenticationEventListeners
Converted controller authorization to annotations on the controller
classes
Added additional fields to user model
Added APNs device token model
Renamed HttpProxy controller to ProxyController and changed mapping
path
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DEVICE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DRIVER_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_INTERFACE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_LOCATION_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROXY_USER','ROLE_WEBCAM_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WEBCAM_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/213f0b21eb795c178a119c2f278e16726f266d63

[COMMIT MESSAGE]:Added SecurityPanelController for controlling the security panel||Updated DeviceService so that getting devices by class returns a
DriverDevice instead of Device
Cleaned up some XML files
Added log4j.properties monitoring to web.xml
Deleted unused CSS files
Other stuff
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SECURITYPANEL_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ffb770e64e0bba24f2b8c25c0e2596945fc507e0

[COMMIT MESSAGE]:userUpdate method added to Location controller||Added UserLocationRepository custom methods
Added AuthenticationEventListeners
Converted controller authorization to annotations on the controller
classes
Added additional fields to user model
Added APNs device token model
Renamed HttpProxy controller to ProxyController and changed mapping
path
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DEVICE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DRIVER_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_INTERFACE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_LOCATION_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROXY_USER','ROLE_WEBCAM_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WEBCAM_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/213f0b21eb795c178a119c2f278e16726f266d63

[COMMIT MESSAGE]:Added SecurityPanelController for controlling the security panel||Updated DeviceService so that getting devices by class returns a
DriverDevice instead of Device
Cleaned up some XML files
Added log4j.properties monitoring to web.xml
Deleted unused CSS files
Other stuff
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_SECURITYPANEL_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ed1f3748ccf40e51f97becef097294d4911c6976

[COMMIT MESSAGE]:Added last update column to ApnsDevice model||Updated AppleApnsService to set last update time
Added AppleIosController to handle iOS related web service calls
Added get/set methods to ConfigService for default namespace
Updated EmailService to use new ConfigService getter for default
namespace
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPLE_IOS_USER')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdrapp/jHouse/commit/ffb770e64e0bba24f2b8c25c0e2596945fc507e0

[COMMIT MESSAGE]:userUpdate method added to Location controller||Added UserLocationRepository custom methods
Added AuthenticationEventListeners
Converted controller authorization to annotations on the controller
classes
Added additional fields to user model
Added APNs device token model
Renamed HttpProxy controller to ProxyController and changed mapping
path
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DEVICE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DRIVER_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_INTERFACE_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_LOCATION_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROXY_USER','ROLE_WEBCAM_USER')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WEBCAM_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/55de2cfcb1d7f5399149b4f46818648114d4ec05

[COMMIT MESSAGE]:SEC-1262: Added new (replacement) AspectJ interceptor which wraps the…||… JoinPoint in a MethodInvocation adapter to provide compatibility with classes which only support MethodInvocation instances.

Also deprecated the existing AspectJ interceptors. This will also allow future simplification of the AbstractMethodSecurityMetadataSource, as it no longer needs to support JoinPoints.
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=22&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/6c35c33abe4fff4624d10104ff02060d4821e90f

[COMMIT MESSAGE]:SEC-2447: Fix AuthenticationManagerBuilder ordering issues||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/be8aad8306ef02d57c361892c389839e7426d675

[COMMIT MESSAGE]:SEC-2196: Demonstrate Method Security works on Generic methods||
=========================================================

+ @PreAuthorize("hasAuthority('saveUsers')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/74daa68691beeda4c3c6330e8124923a421671ab

[COMMIT MESSAGE]:SEC-1796: Check for annotated annotations at class/interface level. P…||…reviously only the specific security annotation was checked for. By delegating to Spring's AnnotationUtils, custom annotations carrying the security annotation are also detected.
=========================================================

+ @PreAuthorize("customAnnotationExpression")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/0521d100691a15912fddc2c24a5de4eb2e09e8f2

[COMMIT MESSAGE]:SEC-1294: Enable access to beans from ApplicationContext in EL expres…||…sions.

ExpressionHandlers are now ApplicationContextAware and set the app context on the SecurityExpressionRoot. A custom PropertyAccessor resolves the properties against the root by looking them up in the app context.
=========================================================

+ @PreAuthorize("#x == 'x' and number.intValue() == 1294 ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/020e0aa49a6f0734934eff8932c21636ecc5c700

[COMMIT MESSAGE]:SEC-1448: Fixed failure to resolve generic method argument names in M…||…ethodSecurityEvaluationContext.

Changed to use AopUtils.getMostSpecificMethod() when obtaining the method on which the parameter resolution should be performed. Also added better error handling and log warning when parameter names cannot be resolved. The exception will then be a SpEL one, rather than a NPE.
=========================================================

+ @PreAuthorize("#action.attribute == 'A'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/74daa68691beeda4c3c6330e8124923a421671ab

[COMMIT MESSAGE]:SEC-1796: Check for annotated annotations at class/interface level. P…||…reviously only the specific security annotation was checked for. By delegating to Spring's AnnotationUtils, custom annotations carrying the security annotation are also detected.
=========================================================

+ @PreAuthorize("customAnnotationExpression")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/614d8c03217bd2eab217778da92b426f57199cd0

[COMMIT MESSAGE]:SEC-1723: Use standard SpEL syntax for accessing beans in the app con…||…text by name.
=========================================================

- @PreAuthorize("#x == 'x' and number.intValue() == 1294 ")
+ @PreAuthorize("#x == 'x' and @number.intValue() == 1294 ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/0521d100691a15912fddc2c24a5de4eb2e09e8f2

[COMMIT MESSAGE]:SEC-1294: Enable access to beans from ApplicationContext in EL expres…||…sions.

ExpressionHandlers are now ApplicationContextAware and set the app context on the SecurityExpressionRoot. A custom PropertyAccessor resolves the properties against the root by looking them up in the app context.
=========================================================

+ @PreAuthorize("#x == 'x' and number.intValue() == 1294 ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=23&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JeanVEGA/MI-MPR-DIP-Admission/commit/607e99a713d97ea9ebb1124165800735952bc045

[COMMIT MESSAGE]:password reset and update||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANONYMOUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/6c35c33abe4fff4624d10104ff02060d4821e90f

[COMMIT MESSAGE]:SEC-2447: Fix AuthenticationManagerBuilder ordering issues||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=24&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/be8aad8306ef02d57c361892c389839e7426d675

[COMMIT MESSAGE]:SEC-2196: Demonstrate Method Security works on Generic methods||
=========================================================

+ @PreAuthorize("hasAuthority('saveUsers')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/74daa68691beeda4c3c6330e8124923a421671ab

[COMMIT MESSAGE]:SEC-1796: Check for annotated annotations at class/interface level. P…||…reviously only the specific security annotation was checked for. By delegating to Spring's AnnotationUtils, custom annotations carrying the security annotation are also detected.
=========================================================

+ @PreAuthorize("customAnnotationExpression")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/0521d100691a15912fddc2c24a5de4eb2e09e8f2

[COMMIT MESSAGE]:SEC-1294: Enable access to beans from ApplicationContext in EL expres…||…sions.

ExpressionHandlers are now ApplicationContextAware and set the app context on the SecurityExpressionRoot. A custom PropertyAccessor resolves the properties against the root by looking them up in the app context.
=========================================================

+ @PreAuthorize("#x == 'x' and number.intValue() == 1294 ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/020e0aa49a6f0734934eff8932c21636ecc5c700

[COMMIT MESSAGE]:SEC-1448: Fixed failure to resolve generic method argument names in M…||…ethodSecurityEvaluationContext.

Changed to use AopUtils.getMostSpecificMethod() when obtaining the method on which the parameter resolution should be performed. Also added better error handling and log warning when parameter names cannot be resolved. The exception will then be a SpEL one, rather than a NPE.
=========================================================

+ @PreAuthorize("#action.attribute == 'A'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=25&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/6d45957eecc1bef7c257a2fdea4c197c6ce652d8

[COMMIT MESSAGE]:SEC-2572: Add spring-security-test method showcase||This will allow for using the showcase in the documentation.
=========================================================

+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mikewiesner/spring-security-3.1-sample/commit/101fe953afaedcec943689befc43628648860d70

[COMMIT MESSAGE]:Solution||
=========================================================

+ @PreAuthorize("hasRole('RIGHT_CREATE')")
+ @PreAuthorize("hasRole('RIGHT_CANCEL') and " +
+ @PreAuthorize("hasRole('RIGHT_UPDATE')")
+ @PreAuthorize("hasRole('RIGHT_CREATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ekesken/springacltutorial/commit/270a09b466a88ffcd28c1895f9b6097d0216df1a

[COMMIT MESSAGE]:added @PreAuthorize and @PostFilter samples||
=========================================================

+ @PreAuthorize("#report.user.login == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jdmr/mateo/commit/2be037bafb55339a636f23a818e71fa1a64971fe

[COMMIT MESSAGE]:[Delivers #54879094] Se creo rutina para traspasar los documentos de …||…colportaje
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jdmr/mateo/commit/ee0ce2702900f301a935cb4071de8804329b1b84

[COMMIT MESSAGE]:[#54879094 #50658791] Se traspasaron los datos de los colportores y s…||…us temporadas. Falta traspasar los documentos. Se creo la utileria de importacion de datos desde excel.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/prospring3/springblog/commit/eec74084d62bc5465b4c81aadcd28312ee300e15

[COMMIT MESSAGE]:add more files||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/4d452dc5941eaf06c10de3e5a0a1ff62fc9bebcb

[COMMIT MESSAGE]:CLOUDIFY-2202 Added validation for the processors parameter. Added so…||…me error messages where needed.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/0c9f88643275f5d898c41a4e7acd9b689937b3fa

[COMMIT MESSAGE]:CLOUDIFY-2202 added new APIs for getPUDumpFiles, getMachineDumpFiles,…||… getMachinesDumpFiles
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CLOUDADMINS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/74a72aa010872cc5063cbfa5ef2e50d1a897b0b9

[COMMIT MESSAGE]:CLOUDIFY-2183 The new management controller.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=26&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/19cc52d4beb53e91a766f2b8d6987f6cf262097f

[COMMIT MESSAGE]:CLOUDIFY-1900 added templates operation to the new rest client.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")
- // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/4682af2eff0e20db5ed943f55ec7f7da091f8b37

[COMMIT MESSAGE]:CLOUDIFY-1812 massive DeploymentController refactor||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasPermission(#authGroups, 'deploy')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#authGroups, 'deploy')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/14618621241fb69a6936905e57f5d7e1216f1404

[COMMIT MESSAGE]:CLOUDIFY-1659 Added UploadController, UploadRepo for uploading files …||…to be used in install service or install application. Added unit tests as well.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#authGroups, 'deploy')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/b06b1b823bc626cf85e1beaf7fde31019b87be92

[COMMIT MESSAGE]:CLOUDIFY-1324, Removed the unnecessary code that accesses the AdminAp…||…iController when un-installing an application in verbose mode and reverted change that allows appmanagers to access the AdminApiController. The adminApiController should only be seen by a CloudAdmin
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/0cdfe70add9288bad74893a7e06e53fdb7da8b0b

[COMMIT MESSAGE]:CLOUDIFY-1324, Added an appmanager role to the allowed roles that hav…||…e permission to access the adminApiController.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CLOUDADMINS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/5520e0032ff408398145c74d8f2538e596e31100

[COMMIT MESSAGE]:CLOUDIFY-1124 REST Security roles Limited the access to /admin to clo…||…ud admins only.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/19cc52d4beb53e91a766f2b8d6987f6cf262097f

[COMMIT MESSAGE]:CLOUDIFY-1900 added templates operation to the new rest client.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")
- // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/4682af2eff0e20db5ed943f55ec7f7da091f8b37

[COMMIT MESSAGE]:CLOUDIFY-1812 massive DeploymentController refactor||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasPermission(#authGroups, 'deploy')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#authGroups, 'deploy')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/d0e53e38afc4a737fde4f5d50ed7c2c65c098158

[COMMIT MESSAGE]:Removed comment.||
=========================================================

- // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/19cc52d4beb53e91a766f2b8d6987f6cf262097f

[COMMIT MESSAGE]:CLOUDIFY-1900 added templates operation to the new rest client.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS', 'ROLE_APPMANAGERS')")
- // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/1a2f2816f77f3b3264c18b75f94816e03c1a4b13

[COMMIT MESSAGE]:CLOUDIFY-1900 Added TemplatesController.java.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")
+ // @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CLOUDADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CloudifySource/cloudify/commit/6ba3c6d3e7e931be000fa6f2d3c0ab6591cb4cfd

[COMMIT MESSAGE]:CLOUDIFY-2110 - Invoke custom command via new Rest API.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=27&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=28&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/niths/niths/commit/a8588d2b81b45dd8adc68f613c107810c0f8816e

[COMMIT MESSAGE]:Formatted StudentController.||
=========================================================

- * @PreAuthorize("hasRole('ROLE_ADMIN')")
- * @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_TEST')")
-// @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_TEST')")
+ * @PreAuthorize("hasRole('ROLE_ADMIN')")
+ * @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_TEST')")
+// @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_TEST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mathieubolla/spring-security-checks/commit/77e907051227ecd404d3c2bf17a901505a9720e0

[COMMIT MESSAGE]:Proto extended security||
=========================================================

+ @PreAuthorize("hasPermission(#o, 'READ')")
+ @PreAuthorize("hasPermission(#o, 'MODERATE')")
+ @PreAuthorize("hasPermission(#o, 'SUB_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=29&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/fosei/TCtest/commit/d856be7e518a15372b3abff37c9ea16262b718b8

[COMMIT MESSAGE]:Create a new permission of ROLE_SUPER_ADMIN for only IT personnel to||have access to the admin password change and admin username change
features.
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_SUPER_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_SUPER_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_SUPER_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_SUPER_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_SUPER_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_SUPER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fosei/TCtest/commit/136982da88b266f04577e540c0553b7dd92f5d05

[COMMIT MESSAGE]:Updated the Admin Account to allow administrators to change users'||passwords and email addresses.
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kajmund/lAwfull-Server/commit/c5ecad64d31768217241d259bec53e27c0a8b625

[COMMIT MESSAGE]:To much news to mention. Added initial support for dropbox in a test…||…case. Going for the more general document approach.
=========================================================

+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kajmund/lAwfull-Server/commit/227d47ee47ff8ad968aab84fb6e1995ba03fb9a0

[COMMIT MESSAGE]:Added functions for bookmarks, springsecurity, users, userroles, lega…||…lresearch functionality
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kajmund/lAwfull-Server/commit/c5ecad64d31768217241d259bec53e27c0a8b625

[COMMIT MESSAGE]:To much news to mention. Added initial support for dropbox in a test…||…case. Going for the more general document approach.
=========================================================

+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kajmund/lAwfull-Server/commit/227d47ee47ff8ad968aab84fb6e1995ba03fb9a0

[COMMIT MESSAGE]:Added functions for bookmarks, springsecurity, users, userroles, lega…||…lresearch functionality
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=30&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/kajmund/lAwfull-Server/commit/c5ecad64d31768217241d259bec53e27c0a8b625

[COMMIT MESSAGE]:To much news to mention. Added initial support for dropbox in a test…||…case. Going for the more general document approach.
=========================================================

+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kajmund/lAwfull-Server/commit/227d47ee47ff8ad968aab84fb6e1995ba03fb9a0

[COMMIT MESSAGE]:Added functions for bookmarks, springsecurity, users, userroles, lega…||…lresearch functionality
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/Human-Resource-System/commit/9caf0ac09d867327afd4e0beccfa11767eb05b19

[COMMIT MESSAGE]:initial commit||
=========================================================

+@PreAuthorize("hasRole('" + CustomRole.ADMIN + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/Human-Resource-System/commit/9caf0ac09d867327afd4e0beccfa11767eb05b19

[COMMIT MESSAGE]:initial commit||
=========================================================

+@PreAuthorize("hasRole('" + CustomRole.ADMIN + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/Human-Resource-System/commit/9caf0ac09d867327afd4e0beccfa11767eb05b19

[COMMIT MESSAGE]:initial commit||
=========================================================

+@PreAuthorize("hasRole('" + CustomRole.ADMIN + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/Human-Resource-System/commit/9caf0ac09d867327afd4e0beccfa11767eb05b19

[COMMIT MESSAGE]:initial commit||
=========================================================

+@PreAuthorize("hasRole('" + CustomRole.ADMIN + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/cb6e62a2d011f3abb522a3d1a7a855394f48f7ee

[COMMIT MESSAGE]:New Document Creation logic. Screw parsing uploaded files! #8||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/ee0ba066f8881a216930f720afc9bb6cdd2d3df1

[COMMIT MESSAGE]:Made it so that uploads persist to the database, and changed the cont…||…roller mappings to get there. Added authentication requirement to access. Still need to restrict filetypes, though it's going to be hard, because we're accepting the file as a byte[]. #8
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/15a08ac9a74af3cce925328682a6c3c839b27d31

[COMMIT MESSAGE]:Registration web flow #closes 7||
=========================================================

- @PreAuthorize("!isAuthenticated()")
- @PreAuthorize("!isAuthenticated()")
- @PreAuthorize("!isAuthenticated()")
- @PreAuthorize("!isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/6f8c29714901210a961982d608a2e81adacc7fb7

[COMMIT MESSAGE]:added security check out spring-security.xml for username and passwor…||…ds. you will need to put "ProxyPassReverseCookiePath /bardwalk /" in your vconf to get cookies to work.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_TECH_SUPPORT')")
+ @PreAuthorize("hasAnyRole('ROLE_AUTHOR', 'ROLE_TECH_SUPPORT','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/3e621a161cd4bd2c1382b3d5efad84bba73d8666

[COMMIT MESSAGE]:Set up book edit dialog to successfully accept drag and drop and save…||… the changes. Still need to have clear put the deleted chapters in the table if they don't exist.
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/0d97f3aa397fd1827908fcda3517801fa6f375a3

[COMMIT MESSAGE]:Added partial logic for returning edit_form for book||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/cd22be526508475144d239dfe863416b030c4e1a

[COMMIT MESSAGE]:Added validation to the new book logic and the old document logic||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/9a273d0f33e3214a8bd4b61a1201abcb571812bc

[COMMIT MESSAGE]:Began Book logic||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/0d97f3aa397fd1827908fcda3517801fa6f375a3

[COMMIT MESSAGE]:Added partial logic for returning edit_form for book||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/cd22be526508475144d239dfe863416b030c4e1a

[COMMIT MESSAGE]:Added validation to the new book logic and the old document logic||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/richterk/Bardwalk/commit/cb6e62a2d011f3abb522a3d1a7a855394f48f7ee

[COMMIT MESSAGE]:New Document Creation logic. Screw parsing uploaded files! #8||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/E-commerce-in-cloud/commit/2507b7762a0d275eab9ff730be6689fdf68eaa47

[COMMIT MESSAGE]:order administration created||
=========================================================

+@PreAuthorize("hasRole('" + UserRoles.ROLE_ADMIN + "')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=31&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/E-commerce-in-cloud/commit/b56dae5b2577108158dc6cbd9985c9bb089035e7

[COMMIT MESSAGE]:order details created||
=========================================================

+@PreAuthorize("hasRole('" + UserRoles.ROLE_LOGGED + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/E-commerce-in-cloud/commit/71b2242393a8e1e280e322b3c6d9376c7b20462c

[COMMIT MESSAGE]:styles added||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/E-commerce-in-cloud/commit/d1f6ab271a7a885a7b1c9d388c9f733a2d1e9e1c

[COMMIT MESSAGE]:delivery type views created||
=========================================================

+@PreAuthorize("hasRole('" + UserRoles.ROLE_ADMIN + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/E-commerce-in-cloud/commit/2d4a1a6f91395703e2d842a2098af43b6e9de93d

[COMMIT MESSAGE]:payment type views created||
=========================================================

+@PreAuthorize("hasRole('" + UserRoles.ROLE_ADMIN + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/E-commerce-in-cloud/commit/71b2242393a8e1e280e322b3c6d9376c7b20462c

[COMMIT MESSAGE]:styles added||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/oma-kirjautuminen/commit/74cb96f669ea53efa3071057b916373f059b2fe7

[COMMIT MESSAGE]:huahue||
=========================================================

+ @PreAuthorize("hasRole('lecturer')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/222ff4f9a9a318f55f5cd9cea84596e43421fc6e

[COMMIT MESSAGE]:projektin infosivu||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/70992c95c074841fcad11c28fcf09d7fa00a3b59

[COMMIT MESSAGE]:projektista tykkääminen||
=========================================================

+ @PreAuthorize("hasRole('student')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/d510468d6bb5d1821b346f8c3aaa9751af5837e8

[COMMIT MESSAGE]:projektin muokkaus||
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('customer')")
+ @PreAuthorize("hasRole('customer')")
+ @PreAuthorize("hasRole('customer')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/8f3f50b0d05997510dbad58409c13591c257bce3

[COMMIT MESSAGE]:projektin lisääminen||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/8f3f50b0d05997510dbad58409c13591c257bce3

[COMMIT MESSAGE]:projektin lisääminen||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/1cc4d8b4b8a75d2380b44318ea1b8b0deb9bbd64

[COMMIT MESSAGE]:* välicommit||
=========================================================

- @PreAuthorize("hasRole('lecturer')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/b7f28c7862a292b01032372883c7406f98b95634

[COMMIT MESSAGE]:sss||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/0281a94811fb4bf931d2f8dfc83793f5b22dd16b

[COMMIT MESSAGE]:groovy||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/7cd366e0c2f6ad914e1ad68f486b829700059201

[COMMIT MESSAGE]:home||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/d891d17cfa248220c2a38f99b36758b9c91ffb03

[COMMIT MESSAGE]:RAVE-341 patch to add security features to WidgetComments||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1207613 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetComment, 'create_or_update')")
+ @PreAuthorize("hasPermission(#id, 'org.apache.rave.portal.model.WidgetComment', 'delete')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=32&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3392249404e5c0f6dbdfeb214e222f827652ea2a

[COMMIT MESSAGE]:Applying the patch from Venkat for Change security permission on Widg…||…etRating RAVE-350

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1199471 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetRating.entityId, 'org.apache.rave.portal.model.WidgetRating', 'update')")
- @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'create')")
+ @PreAuthorize("hasPermission(#rating, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/cbc32342d57d0afb1f260deed37d60f34d79d14d

[COMMIT MESSAGE]:RAVE-315: WidgetRating ModelPermissionEvaluator and Service Annotations||Applying patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1195508 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'read')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'create')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update') and " +
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#widget.owner.entityId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Widget', 'create')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#widget.owner.entityId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Widget', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/8b9a95124b2df54930f25b74d15511467dbd6143

[COMMIT MESSAGE]:RAVE-303: refactor usage of PageService.addNewDefaultPage for securit…||…y reasons. New Behavior - when a new user is registered a default page is no longer created at registration time. Now, anytime the PageController is hit and the user has zero existing pages, a new default page will be created for the user. I also moved the service tests into the impl package since they were incorrectly located.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189460 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3d6d1fa456e1d04f9d7f57805cd5e0ad149a7b94

[COMMIT MESSAGE]:RAVE-306: Region ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189329 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update') and " +
- @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update') and " +
+ @PreAuthorize("hasPermission(#region.regionId, 'org.apache.rave.portal.model.Region', 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update') and " +
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'delete')")
+ @PreAuthorize("hasPermission(#regionWidget.regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/ef31170d554b8d7b25e0af2f2f8cefc9f0dcf188

[COMMIT MESSAGE]:Changes in support of RAVE-298:||- created common AbstractRestApi class
- updated the DefaultPagePermissionEvaluator to handle permission checks when the object to be checked differs from the returned Object
- secured remaining PageService methods that deal with Page objects, except addNewDefaultPage (see RAVE-303)


git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1185340 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'read')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/b05098d2d61d03638f30d63ea992433cc3d25a77

[COMMIT MESSAGE]:RAVE-307: applying second patch from Venkat to fix invalid security a…||…nnotation

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190025 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#regionWidget.regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidget.entityId, 'org.apache.rave.portal.model.RegionWidget', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update') and " +
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'delete')")
+ @PreAuthorize("hasPermission(#regionWidget.regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/5f022f709adcced8e2e3011cf773079bbf7c09a2

[COMMIT MESSAGE]:RAVE-70: Users can tag Widgets in the Widget Repository||Committing patch supplied by Jennifer Lin

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1230175 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetTag, 'create_or_update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/a2c2e40675f0da21239a3e65cc74e8f04c5a7531

[COMMIT MESSAGE]:RAVE-433: refactored "WidgetCategory" model to "Category" in anticipa…||…tion of a future "WidgetCategory" join table to be needed by Rave-434. This matches our current naming conventions for many to many tables (Widget - WidgetTag - Tag for example)

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1235367 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#widgetCategoryId, 'org.apache.rave.portal.model.WidgetCategory', 'update')")
+ @PreAuthorize("hasPermission(#categoryId, 'org.apache.rave.portal.model.Category', 'update')")
- @PreAuthorize("hasPermission(#widgetCategory.entityId, 'org.apache.rave.portal.model.WidgetCategory', 'delete')")
+ @PreAuthorize("hasPermission(#category.entityId, 'org.apache.rave.portal.model.Category', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2ae5ed9bc628f921fa52f006779d8b4123fa7e93

[COMMIT MESSAGE]:RAVE-306: applying second patch from Venkat to fix invalid security a…||…nnotation

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190024 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#region.regionId, 'org.apache.rave.portal.model.Region', 'create')")
+ @PreAuthorize("hasPermission(#region.entityId, 'org.apache.rave.portal.model.Region', 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3d6d1fa456e1d04f9d7f57805cd5e0ad149a7b94

[COMMIT MESSAGE]:RAVE-306: Region ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189329 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update')")
+ @PreAuthorize("hasPermission(#regionWidgetId, 'org.apache.rave.portal.model.RegionWidget', 'update') and " +
- @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update') and " +
+ @PreAuthorize("hasPermission(#region.regionId, 'org.apache.rave.portal.model.Region', 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/adf2a6c521a0a873a07be5c849b4cac7d8798df7

[COMMIT MESSAGE]:In case Widget object was coming null for new URL @PostAuthorize was …||…throwing Access is denied.RAVE-400

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1230851 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#widget.entityId, 'org.apache.rave.portal.model.Widget', 'update')")
+ @PreAuthorize("hasPermission(#widget.entityId, 'org.apache.rave.portal.model.Widget', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dbe0052b0f45741f4e5db56d9dbb2ebd2dc540f

[COMMIT MESSAGE]:RAVE-319: Widget persistence not working||Added @Transaction annotation to the registerNewWidget and updateWidget methods to ensure JPA commits

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190457 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#widget.owner.entityId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Widget', 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2bc596199b198853e08c6abc174e64f27b5240c6

[COMMIT MESSAGE]:RAVE-310: fixed incorrect security annotation on updateWidget (admins…||… can now update non-owned widgets)

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190386 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#widget.owner.entityId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Widget', 'update')")
+ @PreAuthorize("hasPermission(#widget.entityId, 'org.apache.rave.portal.model.Widget', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update')")
+ @PreAuthorize("hasPermission(#pageId, 'org.apache.rave.portal.model.Page', 'update') and " +
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#widget.owner.entityId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Widget', 'create')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#widget.owner.entityId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Widget', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/placecruncher/placecruncher-java/commit/ecfbe7709eee8f57d8156187f7f408526d3062e8

[COMMIT MESSAGE]:Added the concept of a place list which associates lists of places wi…||…th a member

Removed the concept of a SourceRef and replaced it with a SourcePlaceList (a list of places from a source)
Got functional test working for member adding an existing source and having places added
Got functional test working for member removing a source (and thus removing places)
Cleaned up unused variables and imports
=========================================================

- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/placecruncher/placecruncher-java/commit/2e29643a530b008bff0eada5219e0951ffa21df8

[COMMIT MESSAGE]:- Added Spring Security annotations to some of the web services and …||…got those working

 - Begin switching over web REST calls to use the response payload JSON format
 - Played with a template class ResponseWrapper that creates the JSON payload wrapper on the fly
 - Added REST calls for members to add/remove sources and an integration test in MemberSourceIT
 - Lots of other hacking that I can't remember over the past two weeks
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/placecruncher/placecruncher-java/commit/1a8fe1fecdf1b40861b2a15ba4855333e2f7df5b

[COMMIT MESSAGE]:Added a web client API key and use it in the edit source JSP page||
=========================================================

+ @PreAuthorize("isAuthenticated")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=33&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/placecruncher/placecruncher-java/commit/10eb6470be686b6d03df1f8e25c19f7eb3d40a6a

[COMMIT MESSAGE]:Added Json message types to push notifications||
=========================================================

+// @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/placecruncher/placecruncher-java/commit/ed01b6551a653f6d8955c0ee68366f759581a5f0

[COMMIT MESSAGE]:Added NOTIFICATION table to contain a log of all notifications sent|| Added members/self/notifications endpoint to retrieve notifications
 Ressizzled the Factories used in create objects for test cases to use some varg lists
 Got rid of the UrbanAirship service (we don't use it anymore right?)
 Added hamcrest assertion library for testing
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/placecruncher/placecruncher-java/commit/ecfbe7709eee8f57d8156187f7f408526d3062e8

[COMMIT MESSAGE]:Added the concept of a place list which associates lists of places wi…||…th a member

Removed the concept of a SourceRef and replaced it with a SourcePlaceList (a list of places from a source)
Got functional test working for member adding an existing source and having places added
Got functional test working for member removing a source (and thus removing places)
Cleaned up unused variables and imports
=========================================================

- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/placecruncher/placecruncher-java/commit/2e29643a530b008bff0eada5219e0951ffa21df8

[COMMIT MESSAGE]:- Added Spring Security annotations to some of the web services and …||…got those working

 - Begin switching over web REST calls to use the response payload JSON format
 - Played with a template class ResponseWrapper that creates the JSON payload wrapper on the fly
 - Added REST calls for members to add/remove sources and an integration test in MemberSourceIT
 - Lots of other hacking that I can't remember over the past two weeks
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jpj/days-since-webapp/commit/ddc8fc97a7ef5dc9876829a996ee801084a6bc5b

[COMMIT MESSAGE]:Secure user id passed when saving new incident||
=========================================================

+ @PreAuthorize("principal == 'anonymousUser' and #incident.userId == null or principal.user.id == #incident.userId")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bluefoot/springsecurity/commit/fedf6bcfa4be71a1fec448b0bc860879fb76f2cc

[COMMIT MESSAGE]:importing projects||
=========================================================

+ @PreAuthorize("((hasRole('ROLE_POSTER') and #text.length() <= 140) or hasRole('ROLE_SUPERUSER')) and authentication.name == #username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tpindel/spectre/commit/ba494aeb092911fb37f676192d6fc3769ffc41e9

[COMMIT MESSAGE]:spectre acceptance test configuration: JBehave, Selenium||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/9d0f88943b8e22055c7b1042c6b3fa680cc276a0

[COMMIT MESSAGE]:getGroup calls in groupservice, paging||
=========================================================

+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/986af4fa0770f9e78fda840dbf4f0f205ac190de

[COMMIT MESSAGE]:re enabled restrictions on group service and person service calls||
=========================================================

+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
- //@PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/986af4fa0770f9e78fda840dbf4f0f205ac190de

[COMMIT MESSAGE]:re enabled restrictions on group service and person service calls||
=========================================================

+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
- //@PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
+ @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/7f2b4d61730b1cdcb586cb7519c919dd0396febb

[COMMIT MESSAGE]:Added sortBy, startIndex, count support on the External Group Provide…||…r to be used in SURFteams
=========================================================

- @PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")
+ //@PreAuthorize("#onBehalfOf == null or #userId.equals(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/091b4277bc567484ba1b667b0269116b9b75383d

[COMMIT MESSAGE]:Bugfixes, make integration/selenium tests succeed.||
=========================================================

- @PreAuthorize("#onBehalfOf.equals(#userId) or #onBehalfOf == null")
+ @PreAuthorize("#onBehalfOf== null or #userId.equals(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/0a7472e20d0f21c90257471ec44afc5873e2013c

[COMMIT MESSAGE]:BACKLOG-387: implementation of person api: access control; mock ldap …||…service; mock eb service;
=========================================================

+ @PreAuthorize("#onBehalfOf.equals(#userId) or #onBehalfOf == null")

=========================================================
[CODE-CHANGE-URL]:https://github.com/donkeystalk/floor41/commit/7eaf50a6f826ec5937fa6da51c58a69833021b48

[COMMIT MESSAGE]:Updated spring security to work with preauthorize||
=========================================================

+ @PreAuthorize("hasRole('ROLE_Admin2')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=34&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=35&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=36&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/ebe86ee960b2f0d11370236de6d688fcbe6545ff

[COMMIT MESSAGE]:Loads of fixes||
=========================================================

- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")
- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/e7f8b3bc074bcd997e68d52295ea712590304ca4

[COMMIT MESSAGE]:Possible to find by borrower||
=========================================================

- @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/ebe86ee960b2f0d11370236de6d688fcbe6545ff

[COMMIT MESSAGE]:Loads of fixes||
=========================================================

- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")
- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Kviiri/TSOHA/commit/fb73958c82424aaea49e52c64357b3cdf5ecdae2

[COMMIT MESSAGE]:Sisäänkirjautuminen toimii||
=========================================================

- @PreAuthorize("hasRole('lecturer')")
+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=37&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jphire/shoo/commit/b1a3ff999f6fc30acbe80f735ed0a6fa14d1b7f6

[COMMIT MESSAGE]:initial unit tests done||
=========================================================

- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('admin')")
+// @PreAuthorize("hasRole('admin')")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jphire/shoo/commit/7836bd06a356ef50af5c1e6993c9e9ecd0be34a2

[COMMIT MESSAGE]:twitter connected, home prettified||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jphire/shoo/commit/a19a46d2450b3f774ce50a826e39da6b0e690451

[COMMIT MESSAGE]:lot of changes, login and signup works||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stade/WAD/commit/834f5cc883f177ec033a1675ff4eba8f826e5ff3

[COMMIT MESSAGE]:commit all course assigment sourcecode||
=========================================================

+ @PreAuthorize("hasRole('lecturer')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stade/WAD/commit/834f5cc883f177ec033a1675ff4eba8f826e5ff3

[COMMIT MESSAGE]:commit all course assigment sourcecode||
=========================================================

+ @PreAuthorize("hasRole('lecturer')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stressfree/buildulator/commit/9360646bc1cad251be0158522d6d536ad1853922

[COMMIT MESSAGE]:Lots of changes all around the place.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stressfree/buildulator/commit/7dbdf16d897f4da6d1fcbd15f997c66ada6799cc

[COMMIT MESSAGE]:Revised page layout. Added empty projects controller.||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stressfree/buildulator/commit/0da6faf882fc019a359c6b5f2d558d4fa47bc7c0

[COMMIT MESSAGE]:Added the UI for the preferences. Added a rich text editor.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stressfree/buildulator/commit/9360646bc1cad251be0158522d6d536ad1853922

[COMMIT MESSAGE]:Lots of changes all around the place.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stressfree/buildulator/commit/175836c2b3cad5d966121a7fee737416daf7dd6d

[COMMIT MESSAGE]:Added the EnergySource class and related classes. Initial work on new…||… project dataentry.
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stressfree/buildulator/commit/7dbdf16d897f4da6d1fcbd15f997c66ada6799cc

[COMMIT MESSAGE]:Revised page layout. Added empty projects controller.||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stressfree/buildulator/commit/0da6faf882fc019a359c6b5f2d558d4fa47bc7c0

[COMMIT MESSAGE]:Added the UI for the preferences. Added a rich text editor.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_EDITOR','ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=38&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mtnauha/Wadharkka/commit/034cfbb4f6f5d0eccb295a074cafc77f725562ae

[COMMIT MESSAGE]:update1||
=========================================================

- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('admin')")
+ //@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mtnauha/Wadharkka/commit/1f1aec0adcc107f97b1693293f0705ec76d0fd44

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mtnauha/Wadharkka/commit/034cfbb4f6f5d0eccb295a074cafc77f725562ae

[COMMIT MESSAGE]:update1||
=========================================================

- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('admin')")
+ //@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mtnauha/Wadharkka/commit/1f1aec0adcc107f97b1693293f0705ec76d0fd44

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matik06/Helpdesk/commit/00c5a700e6d0cb9b4fa9980f1a233f56104e265e

[COMMIT MESSAGE]:Powiadomienia email przy zdarzeniach (nowe zgloszenie, edycja, rozpoc…||…zecie pracy), +usuniecie nieuzywanych plikow z tutoriali
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matik06/Helpdesk/commit/7f4d4e110047b996887e2bdc4a2da8262d719034

[COMMIT MESSAGE]:widok zgłoszenia prawie ukończony||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/project-rhex/simple-user-repository/commit/3fdd3ccbcc5ce3f2951bed7c36733636eb6e8f81

[COMMIT MESSAGE]:Factored out the password encoder and salt source for spring security…||…. Created a user details

service to enable logging in. Has the detail service call the user manager's admin creation code
so there will always be an admin user. Integrated with the various tags from the openid project
and fixed up the tags from this project to be in concordance - now has the header from the main
project. Fixed delete to now work properly. Edit is not yet working.
=========================================================

-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/project-rhex/simple-user-repository/commit/85d9934361647f4ab10fbae7667809faf77c57f1

[COMMIT MESSAGE]:Merge branch 'master' of github.com:project-rhex/simple-user-repository||Conflicts:
	simple-db-repository/src/main/java/org/mitre/openid/connect/repository/db/web/UserController.java
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/project-rhex/simple-user-repository/commit/73f49f8c4b6660b2c2574f74ce0c6c53e26f8949

[COMMIT MESSAGE]:work in progress on delete||
=========================================================

+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/project-rhex/simple-user-repository/commit/86510391b56ded7160b5d72b0c84812497fdb6b4

[COMMIT MESSAGE]:cleaned up spring configuration, moved tag files around, updated user…||…info repository, made it all work
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bunglestink/YFSC-Java/commit/16011cf7386c3e95adbff9ddbd74c0f64fa920e4

[COMMIT MESSAGE]:secure controllers.||
=========================================================

+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bunglestink/YFSC-Java/commit/16011cf7386c3e95adbff9ddbd74c0f64fa920e4

[COMMIT MESSAGE]:secure controllers.||
=========================================================

+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=39&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bunglestink/YFSC-Java/commit/16011cf7386c3e95adbff9ddbd74c0f64fa920e4

[COMMIT MESSAGE]:secure controllers.||
=========================================================

+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bunglestink/YFSC-Java/commit/16011cf7386c3e95adbff9ddbd74c0f64fa920e4

[COMMIT MESSAGE]:secure controllers.||
=========================================================

+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bunglestink/YFSC-Java/commit/16011cf7386c3e95adbff9ddbd74c0f64fa920e4

[COMMIT MESSAGE]:secure controllers.||
=========================================================

+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bunglestink/YFSC-Java/commit/16011cf7386c3e95adbff9ddbd74c0f64fa920e4

[COMMIT MESSAGE]:secure controllers.||
=========================================================

+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bunglestink/YFSC-Java/commit/16011cf7386c3e95adbff9ddbd74c0f64fa920e4

[COMMIT MESSAGE]:secure controllers.||
=========================================================

+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")
+@PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/khyiu/glimmo-spring-mvc/commit/1059ec90611870e1b3ced63209f201cece26f334

[COMMIT MESSAGE]:Create ad webflow --> saving LAND SALE||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ricardokenji/Quantum-Assessment/commit/676c4b86a5e3cd10e3a6a5d2fc8a8fc70c1075b2

[COMMIT MESSAGE]:config organization||
=========================================================

+ @PreAuthorize("hasRole('supervisor')")
+ @PreAuthorize("hasRole('supervisor')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ricardokenji/Quantum-Assessment/commit/5e5e9e058d5ed3c14dcaef0f8912b179de791c18

[COMMIT MESSAGE]:update||
=========================================================

+ @PreAuthorize("hasRole('supervisor')")
+ @PreAuthorize("hasRole('supervisor')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CarloMicieli/trenako/commit/3477d9994bac2f634f9325f9d4c0573fbfa6516e

[COMMIT MESSAGE]:Code reformat.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CarloMicieli/trenako/commit/671425e104a4c6aa85d92f25f57920b237afbb4b

[COMMIT MESSAGE]:Admin pages refactoring.||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CarloMicieli/trenako/commit/3477d9994bac2f634f9325f9d4c0573fbfa6516e

[COMMIT MESSAGE]:Code reformat.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CarloMicieli/trenako/commit/c52b1f80d15b14e42c9e4c9015bc52793d0f0be4

[COMMIT MESSAGE]:Refactoring.||
=========================================================

- @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CarloMicieli/trenako/commit/02390967dbba1708942c556e3dd701b98a0a600a

[COMMIT MESSAGE]:Changed permissions.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasRole('ROLE_STAFF')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=40&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/CarloMicieli/trenako/commit/3477d9994bac2f634f9325f9d4c0573fbfa6516e

[COMMIT MESSAGE]:Code reformat.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CarloMicieli/trenako/commit/c52b1f80d15b14e42c9e4c9015bc52793d0f0be4

[COMMIT MESSAGE]:Refactoring.||
=========================================================

- @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_STAFF')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/alexpilipenko/DemoProject/commit/4ecee970d22dc84e169838907fd9adf0268d8f4e

[COMMIT MESSAGE]:Initial project deployemnt.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/39486889347c73c1685bfa4d7a099f9f4043d77a

[COMMIT MESSAGE]:show error messages on login page||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/5a70250f45e72a038244558e8d87a4338090af13

[COMMIT MESSAGE]:allow user to change their password||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/1726f8e7d11137dea818206fbbd24ae66c948155

[COMMIT MESSAGE]:ignore OpenID functionality in test coverage||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/54d8852f833e32bcc5aaad131d14e990cfc43850

[COMMIT MESSAGE]:implement OpenID authorization||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/2ae9510dece52be0db143afa3fabc72e5f41ca32

[COMMIT MESSAGE]:hovering over items in {{neighbors}} box will display their children||
=========================================================

- @PreAuthorize("hasAnyProjectPermission(VIEW)")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/24efeea79076247ee20f59c33dfe2cafcfc4ddee

[COMMIT MESSAGE]:implement relocation of pages||
=========================================================

+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/b7e81d7830009f4bddcc7afc3639c0e796bfb945

[COMMIT MESSAGE]:allow to rename and delete projects||
=========================================================

+ @PreAuthorize("hasProjectPermission(#name, EDIT_PROJECT)")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/380e6c0d1985f251648a615e1b11b3dcdebe6782

[COMMIT MESSAGE]:allow to import sample contents into an empty project||
=========================================================

+ @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/dce5297b3e32e27a46c695a30039fb57c3b39d92

[COMMIT MESSAGE]:use finer-grained permission checks||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("projectExists(#form.name) ? " +
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasAnyProjectPermission('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/b64d04b615f2a00b933261ea49e55da24da803c1

[COMMIT MESSAGE]:allow administrators to edit macros via the GUI||
=========================================================

+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/984177f370fc7c2e8f8fb55ea96d78cfb6203942

[COMMIT MESSAGE]:allow authenticated users to subscribe to page changes||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/0c6451e6962f8a23e21e86a0f96355aed032a3a6

[COMMIT MESSAGE]:show dropdown with tags already in use to encourage tag reuse||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/d38b6827da3f9881cff94eb2387fab32c96cd4b6

[COMMIT MESSAGE]:add search functionality||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/a365c8895f38a0018188af449f20ed7567c9a06f

[COMMIT MESSAGE]:allow administrators to delete roles||
=========================================================

+ @PreAuthorize("hasApplicationPermission(ADMIN) and !isLastAdminRole(#roleName)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/8309c95d09852e4d29a02e79f3cb78101eb96a42

[COMMIT MESSAGE]:roles can be created and edited now||
=========================================================

+ @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=41&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/8309c95d09852e4d29a02e79f3cb78101eb96a42

[COMMIT MESSAGE]:roles can be created and edited now||
=========================================================

+ @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/24be1322340b6c482537ff812b8bf734f42c69ea

[COMMIT MESSAGE]:extend Spring Security expressions to do permission checks||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/1f1796a8d9f562a971ea49ebb554b58080aa2faa

[COMMIT MESSAGE]:allow to rename and delete branches||
=========================================================

+ @PreAuthorize("hasBranchPermission(#projectName, #name, EDIT_BRANCH)")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/dce5297b3e32e27a46c695a30039fb57c3b39d92

[COMMIT MESSAGE]:use finer-grained permission checks||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("projectExists(#form.name) ? " +
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasAnyProjectPermission('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/9e8ee62b8db41479997bd1712c0480387726c918

[COMMIT MESSAGE]:add Markdown help for editors||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/b64d04b615f2a00b933261ea49e55da24da803c1

[COMMIT MESSAGE]:allow administrators to edit macros via the GUI||
=========================================================

+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/dce5297b3e32e27a46c695a30039fb57c3b39d92

[COMMIT MESSAGE]:use finer-grained permission checks||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("projectExists(#form.name) ? " +
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasAnyProjectPermission('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/aea98e61ef2297b2627a0c3c04dc27713193cce2

[COMMIT MESSAGE]:allow manual arrangement of pages rendered by {{neighbors}} (fixes #3)||
=========================================================

+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/aea98e61ef2297b2627a0c3c04dc27713193cce2

[COMMIT MESSAGE]:allow manual arrangement of pages rendered by {{neighbors}} (fixes #3)||
=========================================================

+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/7d7e7514f06f11d0fabbdd92bfa11966f717ce2f

[COMMIT MESSAGE]:add support for visually splitting off part of a page into a new page||
=========================================================

+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/b97fcf3dc99f85a1e86d222d093025a2c067785e

[COMMIT MESSAGE]:implement cherry-picking of page edits onto other branches||
=========================================================

+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/5d6def888851aab38835bef2ff5d10c60c0c807a

[COMMIT MESSAGE]:allow user to restore an older version of a page||
=========================================================

+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/ef5f17e0758fab0ff7d97307eb5fde89b21b1757

[COMMIT MESSAGE]:add drag & drop support to upload attachments||
=========================================================

+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e4f0d3df1a7ec2dd6768c161877ad1375bd21590

[COMMIT MESSAGE]:allow user to download attachments||
=========================================================

- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/c5e4c85317dd16b6bbb5812f1eea2b7c9f43373d

[COMMIT MESSAGE]:implement deletion of attachments||
=========================================================

+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/24efeea79076247ee20f59c33dfe2cafcfc4ddee

[COMMIT MESSAGE]:implement relocation of pages||
=========================================================

+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/dce5297b3e32e27a46c695a30039fb57c3b39d92

[COMMIT MESSAGE]:use finer-grained permission checks||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("projectExists(#form.name) ? " +
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasAnyProjectPermission('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/a365c8895f38a0018188af449f20ed7567c9a06f

[COMMIT MESSAGE]:allow administrators to delete roles||
=========================================================

+ @PreAuthorize("hasApplicationPermission(ADMIN) and !isLastAdminRole(#roleName)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/b5a67ca10c02608496db32a8cdf1ccfb148eb30f

[COMMIT MESSAGE]:allow administrators to delete users||
=========================================================

+ @PreAuthorize("hasApplicationPermission(ADMIN) and !isAdmin(#loginName)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/e3bc5590949ff0cdd1885956a4004d48ca37d48d

[COMMIT MESSAGE]:use permission instances instead of names||
=========================================================

- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("hasApplicationPermission('ADMIN')")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #pagePath, EDIT_PAGE)")
- @PreAuthorize("hasProjectPermission(#projectName, 'EDIT_BRANCH')")
+ @PreAuthorize("hasProjectPermission(#projectName, EDIT_BRANCH)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, 'EDIT_BRANCH')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.name, EDIT_BRANCH)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#form.projectName, #form.branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW') and " +
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW) and " +
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'EDIT_PAGE')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, 'VIEW')")
+ @PreAuthorize("isAuthenticated() and hasPagePermission(#projectName, #branchName, #path, VIEW)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, 'EDIT_PAGE')")
+ @PreAuthorize("hasPagePermission(#projectName, #branchName, #path, EDIT_PAGE)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")
- @PreAuthorize("hasAnyBranchPermission(#name, 'VIEW')")
+ @PreAuthorize("hasAnyBranchPermission(#name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #name, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #name, VIEW)")
- @PreAuthorize("hasBranchPermission(#projectName, #branchName, 'VIEW')")
+ @PreAuthorize("hasBranchPermission(#projectName, #branchName, VIEW)")
- @PreAuthorize("hasProjectPermission(#name, 'VIEW')")
+ @PreAuthorize("hasProjectPermission(#name, VIEW)")
- @PreAuthorize("hasApplicationPermission('EDIT_PROJECT')")
+ @PreAuthorize("hasApplicationPermission(EDIT_PROJECT)")
- @PreAuthorize("hasProjectPermission(#name, 'ADMIN')")
+ @PreAuthorize("hasProjectPermission(#name, ADMIN)")
- @PreAuthorize("hasAnyProjectPermission('VIEW')")
+ @PreAuthorize("hasAnyProjectPermission(VIEW)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/24be1322340b6c482537ff812b8bf734f42c69ea

[COMMIT MESSAGE]:extend Spring Security expressions to do permission checks||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasApplicationPermission('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/896ff40f1671ddaf740bd951a8314f8cde3d8e99

[COMMIT MESSAGE]:allow macros to handle generic JSON data requests||
=========================================================

+ @PreAuthorize("permitAll")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=42&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/984177f370fc7c2e8f8fb55ea96d78cfb6203942

[COMMIT MESSAGE]:allow authenticated users to subscribe to page changes||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/1726f8e7d11137dea818206fbbd24ae66c948155

[COMMIT MESSAGE]:ignore OpenID functionality in test coverage||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/984177f370fc7c2e8f8fb55ea96d78cfb6203942

[COMMIT MESSAGE]:allow authenticated users to subscribe to page changes||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blizzy78/documentr/commit/03f52e5b7daab8dde72ce0e70cb1049f6c3aa19a

[COMMIT MESSAGE]:implement system settings control page||
=========================================================

+ @PreAuthorize("hasApplicationPermission(ADMIN)")
+ @PreAuthorize("hasApplicationPermission(ADMIN)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/4f0917f2bda161e21796a36c31fb275648720f74

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/8ee546e461e4d03c8248de76239f30c95ada59d2

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','READ') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#target_channel,'WRITE') " + "or hasPermission(#target_channel,'PUBLISH') " + "or hasPermission(#chantarget_channelnel,'CREATE') " + "or hasPermission(#target_channel,'UPDATE') " + "or hasPermission(#target_channel,'DELETE') " + "or hasPermission(#target_channel,'ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#target_channel,'WRITE') " + "or hasPermission(#target_channel,'PUBLISH') " + "or hasPermission(#target_channel,'CREATE') " + "or hasPermission(#target_channel,'UPDATE') " + "or hasPermission(#target_channel,'DELETE') " + "or hasPermission(#target_channel,'ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/0c288d8b855ce55c066006792c4bdb8e94807279

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/d6686f01dc25cd015fda3f6034e02678674e5d68

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','READ') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#target_channel,'WRITE') " + "or hasPermission(#target_channel,'PUBLISH') " + "or hasPermission(#chantarget_channelnel,'CREATE') " + "or hasPermission(#target_channel,'UPDATE') " + "or hasPermission(#target_channel,'DELETE') " + "or hasPermission(#target_channel,'ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#target_channel,'WRITE') " + "or hasPermission(#target_channel,'PUBLISH') " + "or hasPermission(#target_channel,'CREATE') " + "or hasPermission(#target_channel,'UPDATE') " + "or hasPermission(#target_channel,'DELETE') " + "or hasPermission(#target_channel,'ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
+ @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','READ') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#target_channel,'WRITE') " + "or hasPermission(#target_channel,'PUBLISH') " + "or hasPermission(#chantarget_channelnel,'CREATE') " + "or hasPermission(#target_channel,'UPDATE') " + "or hasPermission(#target_channel,'DELETE') " + "or hasPermission(#target_channel,'ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#target_channel,'WRITE') " + "or hasPermission(#target_channel,'PUBLISH') " + "or hasPermission(#target_channel,'CREATE') " + "or hasPermission(#target_channel,'UPDATE') " + "or hasPermission(#target_channel,'DELETE') " + "or hasPermission(#target_channel,'ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")
- @PreAuthorize("hasRole('ROLE_ADMIN') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','WRITE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','PUBLISH') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','CREATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','UPDATE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','DELETE') " + "or hasPermission(#channelId,'com.ewcms.core.site.model.Channel','ADMIN') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/56b8dfb51e51e8fc6aa196383a619d2ab1f48a60

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/a6e69e0bbf08462c94b53ad18cda49cee3af06af

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/b6366ddcb054db2370a69c637b4e4b1b13a67e58

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'com.ewcms.core.site.model.Channel','ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'com.ewcms.core.site.model.Channel','ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ewcmsfree/ewcmsgov/commit/6bb7c89cc228b8aa22640364ef7642f72f2d278e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'com.ewcms.core.site.model.Channel','ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("hasRole('ROLE_ADMIN') "
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'com.ewcms.core.site.model.Channel','ADMIN')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') "
- @PreAuthorize("hasRole('ROLE_ADMIN') "
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=43&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/debdayal/spring-security/commit/9954af28ea39688f6a4a6da3dee1215f429e3bae

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mtnauha/picser/commit/5912f0cab560e04eeaa2d6c3c4a81f322490cd3a

[COMMIT MESSAGE]:init||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('admin')")
+ //@PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=44&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mtnauha/picser/commit/5912f0cab560e04eeaa2d6c3c4a81f322490cd3a

[COMMIT MESSAGE]:init||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('admin')")
+ //@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/florendg/profilej/commit/d211b35557cdf75d885759d69813cbafff94ddc9

[COMMIT MESSAGE]:Role based security to prevent users editing other accounts||
=========================================================

+ @PreAuthorize("#employee.employeeNumber == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mhle/stickify/commit/1263f03d13f3cff686e1ae018a47907a64a43d2f

[COMMIT MESSAGE]:added configuration and entity classes needed for spring security||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sangeeth/springworks/commit/d906fb76c1c19e499884dbe518b1324b63605e20

[COMMIT MESSAGE]:Spring Security Samples using Maven & Eclipse instead of Gradle||https://github.com/SpringSource/spring-security/tree/master/samples/
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sangeeth/springworks/commit/d906fb76c1c19e499884dbe518b1324b63605e20

[COMMIT MESSAGE]:Spring Security Samples using Maven & Eclipse instead of Gradle||https://github.com/SpringSource/spring-security/tree/master/samples/
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/26345f52811d4a8a5afb2ab91920c63995a0c74e

[COMMIT MESSAGE]:account update password and request password reset is basically complete||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/8071b4934e6bcc55b69094dc372795416dc3a3ac

[COMMIT MESSAGE]:finished basic password recovery||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/6665967aa3d6e4c7a0a262d174ba4aca20897b78

[COMMIT MESSAGE]:can update email address from account page||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/5895f12c283a29db0aea1020cc5da43e5d4459dc

[COMMIT MESSAGE]:added raw account page||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/74bcdbfd63f7afa51b66fb0f0729323fc6bb4bda

[COMMIT MESSAGE]:updated test data||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/006131e2892e941822e47a0ff5b1954d23f42c14

[COMMIT MESSAGE]:added order fulfillment||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=45&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/2c0c336d6d34774a04f5395b3d30767808fe6cb0

[COMMIT MESSAGE]:item page is viewable buy anyone but only admin can update, listing p…||…age links to item page
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/006131e2892e941822e47a0ff5b1954d23f42c14

[COMMIT MESSAGE]:added order fulfillment||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/acfd5266933d258335d0318672a219f303982a50

[COMMIT MESSAGE]:wrote back end code for purchasing, worked on checkout pages||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheSkyNet/give3/commit/72880e9194d97de1a9b5409766a630c1f3231570

[COMMIT MESSAGE]:experimenting with rest response||
=========================================================

- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/conanchen/youare.theone.web/commit/69bdf8cf6e0710164359cd5170195838f956c9d8

[COMMIT MESSAGE]:first commit||
=========================================================

+@PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=46&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/GallifreyanCode/all-about-spring/commit/cc4bea1d8d04d5ece72a4c4f3598a686b1aad0f0

[COMMIT MESSAGE]:Promoted from random-workspace||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/finance/commit/4b3740d1b749b3388168452db86413a0faaf6656

[COMMIT MESSAGE]:Start of presentation||
=========================================================

- @PreAuthorize("hasPermission(#expense,'write')")
+ @PreAuthorize("hasPermission(#expense,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/finance/commit/d49c9cf701d1c814d939b0e04b02c2ed7df6210b

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasPermission(#expense,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/spring-portlet-contrib/commit/45ca961d8b7cca0fc53cb1bf78f836282e4f0dce

[COMMIT MESSAGE]:Add servlet test for servlet/portlet security sharing||Reference security context storage session attribute from spring-security-web
Update ContribDispatcherPortlet to use the ContribXmlPortletApplicationContext as the default
=========================================================

+ @PreAuthorize("hasRole('ROLE_PortalAdministratorsName')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/spring-portlet-contrib/commit/45ca961d8b7cca0fc53cb1bf78f836282e4f0dce

[COMMIT MESSAGE]:Add servlet test for servlet/portlet security sharing||Reference security context storage session attribute from spring-security-web
Update ContribDispatcherPortlet to use the ContribXmlPortletApplicationContext as the default
=========================================================

+ @PreAuthorize("hasRole('ROLE_PortalAdministratorsName')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/865864210d6df57fc07d053c06e0d1264f713d3b

[COMMIT MESSAGE]:poprawka do Nawigacji i inne drobne rzeczy||
=========================================================

-// @PreAuthorize("hasRole('ADMIN')")
+ // @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/c54b04fa1fbd040004abddd88c155288ddbb2beb

[COMMIT MESSAGE]:ajax jquery nawigacja||
=========================================================

- @PreAuthorize("hasRole('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/46253500e88e07f2e5502e27733deab437e99358

[COMMIT MESSAGE]:poprawki. Wreszcie zaczyna to jakoś wyglądać.||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/d861424f3c35a369906a78b82e40a3fa3c9a54e7

[COMMIT MESSAGE]:spring security metody, zmiana pobierania deklaracji, dodałem filtr h…||…ibernate
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/5cbcd920ff9d5bed6aa69549cf1d1f3aff1064fa

[COMMIT MESSAGE]:Testy||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/cb311b1eed7034184be697ee5445bca68aff9ea5

[COMMIT MESSAGE]:drobne zmiany||
=========================================================

+ @PreAuthorize("hasAuthority('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mitreid-connect/simple-web-app/commit/99fc05031f2ce619736241b3a91bd81539c6a826

[COMMIT MESSAGE]:changed permissions on /admin to ROLE_ADMIN||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mitreid-connect/simple-web-app/commit/1123d8337fad4adca50e95e444a0d255d9e527a1

[COMMIT MESSAGE]:added simple web server project shell||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=47&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/e4ds-desktop/commit/36163fa8f6a928bf65ed6784f7ddca95b45497d1

[COMMIT MESSAGE]:Update with DB access, usermanagement and many more.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/andidev/spring-bootstrap-enterprise/commit/0f228a2652470907f49971dca0770bab1351da02

[COMMIT MESSAGE]:Disabled database access from application in production environment||
=========================================================

- @PreAuthorize("hasRole('ROLE_DEVELOPER')")
+ @PreAuthorize("hasRole('ROLE_DEVELOPER') and !isProductionEnvironment()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/andidev/spring-bootstrap-enterprise/commit/09d53a74db0456986e259a8adff191ab38258d76

[COMMIT MESSAGE]:Embedded database in iframe page||
=========================================================

+ @PreAuthorize("hasRole('ROLE_DEVELOPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/andidev/spring-bootstrap-enterprise/commit/581085b5e029fa4ca3b9aaf439d07f79277299a2

[COMMIT MESSAGE]:Updated method security to only use Pre/Post authorisation annotation||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_DEVELOPER')")
+ @PreAuthorize("hasRole('ROLE_DEVELOPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sunbiz/dhis2-10811/commit/150f0af78b07c377a3b80443fe136df9d0917e3b

[COMMIT MESSAGE]:Update README.md||Adding the travis build status icon

updated to rev 10120

updated to rev 10220

updated to rev 10231

cleaned up bzr with obsolete packs

updated to rev 10261

updated to rev 10266
=========================================================

-@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
+@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sunbiz/dhis2-10811/commit/207b7e8af5d8874c6da7593621eb1fba983fb423

[COMMIT MESSAGE]:- updated to rev 9906||- added travis config

updated to rev 10010

updated to rev 10058
=========================================================

-@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
+@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sunbiz/dhis2-10811/commit/150f0af78b07c377a3b80443fe136df9d0917e3b

[COMMIT MESSAGE]:Update README.md||Adding the travis build status icon

updated to rev 10120

updated to rev 10220

updated to rev 10231

cleaned up bzr with obsolete packs

updated to rev 10261

updated to rev 10266
=========================================================

-@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
+@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sunbiz/dhis2-10811/commit/207b7e8af5d8874c6da7593621eb1fba983fb423

[COMMIT MESSAGE]:- updated to rev 9906||- added travis config

updated to rev 10010

updated to rev 10058
=========================================================

-@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
+@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sunbiz/dhis2-10811/commit/150f0af78b07c377a3b80443fe136df9d0917e3b

[COMMIT MESSAGE]:Update README.md||Adding the travis build status icon

updated to rev 10120

updated to rev 10220

updated to rev 10231

cleaned up bzr with obsolete packs

updated to rev 10261

updated to rev 10266
=========================================================

-@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
+@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sunbiz/dhis2-10811/commit/207b7e8af5d8874c6da7593621eb1fba983fb423

[COMMIT MESSAGE]:- updated to rev 9906||- added travis config

updated to rev 10010

updated to rev 10058
=========================================================

-@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
+@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=48&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sunbiz/dhis2-10811/commit/207b7e8af5d8874c6da7593621eb1fba983fb423

[COMMIT MESSAGE]:- updated to rev 9906||- added travis config

updated to rev 10010

updated to rev 10058
=========================================================

-@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
+@PreAuthorize("hasRole('M_dhis-web-api-fred') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_CREATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_UPDATE') or hasRole('ALL')")
- @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")
+ @PreAuthorize("hasRole('F_FRED_DELETE') or hasRole('ALL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/McNullty/spring-securty-vaadin/commit/d15213327cf7c2fdbcf2a34a4929b990cdf050f9

[COMMIT MESSAGE]:Dodao uvijet da password može promjeniti user samo za sebe.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/McNullty/spring-securty-vaadin/commit/78e469f1e359ce9e829b6d7e01673249941b6544

[COMMIT MESSAGE]:Dodao uvijet da samoo ROLE_ADMIN može mijenjati password. U bussines||tier
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jaliste/unitime/commit/b975d7f855dc19e049f87ab18dff1379c313dcb0

[COMMIT MESSAGE]:Spring Security|| - besides of hasPermission methods (return true or false) also added checkPermission methods (return void, throws AccessDeniedException with a message describing the denial)
 - in an attempt to provide more descriptive access denied messages (not just "Access Denied")
 - added access denied handler

git-svn-id: http://unitime.googlecode.com/svn/trunk@3136 cc804148-bb53-fe5c-6b9d-7ba62d325a45
=========================================================

- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("checkPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
- @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
- @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("checkPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
- @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("checkPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
- @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("checkPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
- @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("checkPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumAdd') and checkPermission('CurriculumView')")
- @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumAdmin') and checkPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jaliste/unitime/commit/f392205d56e6b341d19921756e11259ad1cad3cd

[COMMIT MESSAGE]:Spring|| - introducing Spring security
   - added Spring authorization (database & ldap)
   - added authentication primitives to provide method security

git-svn-id: http://unitime.googlecode.com/svn/trunk@3097 cc804148-bb53-fe5c-6b9d-7ba62d325a45
=========================================================

+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+@PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sosandstrom/open-server/commit/9f73216ea6b194a20aaae1087167d100252a99f1

[COMMIT MESSAGE]:Added all security code previously located in Pocket Review (not 100%…||… sure how to configure for inclusion in Pocket Review as dependency)
=========================================================

+ @PreAuthorize("hasPermission(#domain, 'isAppAdmin')")
+ @PreAuthorize("hasPermission(#domain, 'isAppAdmin')")
+ @PreAuthorize("hasPermission(#domain, 'isAppAdmin')")
+ @PreAuthorize("hasPermission(#domain, 'isAppAdmin')")
+ @PreAuthorize("hasPermission(#domain, 'isAppAdmin')")
+ @PreAuthorize("hasPermission(#adminEmail, 'isAdmin')")
+ @PreAuthorize("hasPermission(#adminEmail, 'isAdmin')")
+ @PreAuthorize("hasPermission(#adminEmail, 'isAdmin')")
+ @PreAuthorize("hasPermission(#adminEmail, 'isAdmin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dineshbabu/spring3-trial/commit/d847648cc947b5c4725b7c02010c6033891088f1

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dineshbabu/spring3-trial/commit/d847648cc947b5c4725b7c02010c6033891088f1

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/veny/smevente/commit/4db1a580a4e81ee8941d14d5148f7c71144d26a8

[COMMIT MESSAGE]:work on sending sms||
=========================================================

- @PreAuthorize("hasRole('ROLE_AUTHENTICATED')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=49&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bolkimen/SiteCore/commit/630019d08ebe1ed0ea192a0ce60df100d31b3e61

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'Post', 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'PostsThread', 'READ')")
+ @PreAuthorize("hasPermission(#poststhread, 'WRITE')")
+ @PreAuthorize("hasPermission(#poststhread, 'DELETE')")
+ @PreAuthorize("hasPermission(#poststhr, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bolkimen/SiteCore/commit/630019d08ebe1ed0ea192a0ce60df100d31b3e61

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'Post', 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'PostsThread', 'READ')")
+ @PreAuthorize("hasPermission(#poststhread, 'WRITE')")
+ @PreAuthorize("hasPermission(#poststhread, 'DELETE')")
+ @PreAuthorize("hasPermission(#poststhr, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bolkimen/SiteCore/commit/630019d08ebe1ed0ea192a0ce60df100d31b3e61

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'Post', 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'PostsThread', 'READ')")
+ @PreAuthorize("hasPermission(#poststhread, 'WRITE')")
+ @PreAuthorize("hasPermission(#poststhread, 'DELETE')")
+ @PreAuthorize("hasPermission(#poststhr, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/GiantKouKou/socle/commit/85c03fff4c7da095c5e05a30187775a2f9567dbb

[COMMIT MESSAGE]:* ajout de test sur le service de création d'utilisateur||+ ajout methode controller d'enregistrement
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spebbe/cryson/commit/9432ef72af5b54493350d6bb6e98d5b66c825596

[COMMIT MESSAGE]:Added AdvancedCrysonDiary example.||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spebbe/cryson/commit/6bcfce6ed2ccb7f410d4175ea85faf9ccda00a4f

[COMMIT MESSAGE]:Imported server and client sources.||
=========================================================

+ @PreAuthorize("hasPermission(#entity, 'write')")
+ @PreAuthorize("hasPermission(#entity, 'write')")
+ @PreAuthorize("hasPermission(#entity, 'write')")
+ @PreAuthorize("hasPermission(#entity, 'write')")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/C4G/V2V/commit/88320ebcb317a690a44aef65c17d1531e61a57ce

[COMMIT MESSAGE]:Access checks using permissions instead of roles||
=========================================================

+ @PreAuthorize("hasRole('PERM_VIEW_DONOR_INFORMATION')")
+ @PreAuthorize("hasRole('PERM_VIEW_TEST_INFORMATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/C4G/V2V/commit/88320ebcb317a690a44aef65c17d1531e61a57ce

[COMMIT MESSAGE]:Access checks using permissions instead of roles||
=========================================================

+ @PreAuthorize("hasRole('PERM_VIEW_DONOR_INFORMATION')")
+ @PreAuthorize("hasRole('PERM_VIEW_TEST_INFORMATION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=50&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sonyxperiadev/BacklogTool/commit/8532677c6c00aa1658de0a0bfe3e43f7b4fdf8cd

[COMMIT MESSAGE]:Groundwork for Kanban board view||Made the groundwork for a new Kanban board view.
=========================================================

+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sonyxperiadev/BacklogTool/commit/18ec40e3d6d5b1bac1c5bba4745b38e34dd7608d

[COMMIT MESSAGE]:First version of Notes-support: creating and deleting, permission-che…||…cks, pushing data
=========================================================

+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sonyxperiadev/BacklogTool/commit/a66964eaa0b7fcd27630ad19073e5d79dd3d09f5

[COMMIT MESSAGE]:Backlog tool initial commit||Signed-off-by: Nicklas Nilsson <nicklas4.nilsson@sonymobile.com>
Signed-off-by: Fredrik Persson <fredrik5.persson@sonymobile.com>
=========================================================

+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")
+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sonyxperiadev/BacklogTool/commit/8532677c6c00aa1658de0a0bfe3e43f7b4fdf8cd

[COMMIT MESSAGE]:Groundwork for Kanban board view||Made the groundwork for a new Kanban board view.
=========================================================

+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")
+ @PreAuthorize("hasPermission(#areaName, 'isAdmin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sonyxperiadev/BacklogTool/commit/18ec40e3d6d5b1bac1c5bba4745b38e34dd7608d

[COMMIT MESSAGE]:First version of Notes-support: creating and deleting, permission-che…||…cks, pushing data
=========================================================

+ @PreAuthorize("hasPermission(#areaName, 'isEditor')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ethdemor/team-plex/commit/555ebd4dc1669aa31367d6d4cbd4566b519c2590

[COMMIT MESSAGE]:#3 closed||raptoz 프로젝트를 teamplex 프로젝트로 변경.
=========================================================

+ @PreAuthorize("#currentUser.id.toString() == #userId.toString()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/5a093fc9d04c7b26742721807a03b7f3ab91daf4

[COMMIT MESSAGE]:Massive checkin||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/ebf667d886d53a4af12386f704db5f07f7561029

[COMMIT MESSAGE]:Added Study and Taxonomy functonality||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/89eb9c2c7d116a594005efed06c5baf1c1607881

[COMMIT MESSAGE]:Initial Checkin||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=51&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/5a093fc9d04c7b26742721807a03b7f3ab91daf4

[COMMIT MESSAGE]:Massive checkin||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/89eb9c2c7d116a594005efed06c5baf1c1607881

[COMMIT MESSAGE]:Initial Checkin||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irineu/fffrepublic/commit/754ba83d2f35308ca3041f38020adcd82e499b65

[COMMIT MESSAGE]:Adicionado serviço rest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irineu/fffrepublic/commit/1b21067174e835c0cb177271ff40bfe438681a60

[COMMIT MESSAGE]:implementado oauth||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ // @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irineu/fffrepublic/commit/754ba83d2f35308ca3041f38020adcd82e499b65

[COMMIT MESSAGE]:Adicionado serviço rest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=52&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thaiminh/didauvn/commit/3d6e650f36f6ff7c4c77260b5f3d639f29032296

[COMMIT MESSAGE]:initial project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jjcapiello/isblog/commit/418b7b098aa9dd10fa1dc69d5428bfbcdd2f0fe2

[COMMIT MESSAGE]:Arreglos en comentarios||
=========================================================

+ @PreAuthorize("hasAnyRole('ADMIN,USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bozzz91/board/commit/65a701586d34a71e95bfdc8d261780025f26215e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ANONYMOUS')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bozzz91/board/commit/65a701586d34a71e95bfdc8d261780025f26215e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ANONYMOUS')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bozzz91/board/commit/65a701586d34a71e95bfdc8d261780025f26215e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ANONYMOUS')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=53&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bozzz91/board/commit/65a701586d34a71e95bfdc8d261780025f26215e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ANONYMOUS')")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mohchi/spring-security-request-mapping/commit/d954a79b2d1707faaeb900757ec2f991b9392de8

[COMMIT MESSAGE]:Added support for path variables in security expressions||
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("authentication.name == #name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mohchi/spring-security-request-mapping/commit/bcf03622b4f4cb83dd6423d60f895dd72af56499

[COMMIT MESSAGE]:Added sample maven managed web project||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/89084e234dbaa732485dbfba5b59a6abacb5b829

[COMMIT MESSAGE]:Updates for the scheduling of automated reports||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/7e2a6673a7bfb06787aeb7bc3015311c4bbf9da1

[COMMIT MESSAGE]:Fixed an issue where the report could not find the bag files as the||parameter was not being passed through.  Added the ability to reload the
scheduling of the reports.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/72f6030a9249f726adbd8465bd39f102b5b65118

[COMMIT MESSAGE]:Created an report scheduler that emails people at a given||time/frequency.  Additionally created a report that gives the objects,
when and who created them, and the size/number of files.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANU_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/16f4fffa1fb92e396884a80892e090e5c3247afb

[COMMIT MESSAGE]:Added Web Service Report||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANU_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/e2ad327f13ed867cf25fb0e106e6c9b4def0dcf7

[COMMIT MESSAGE]:Updates for new reports that find data via solr||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/c826475d1fb68a4b74f957ca4f3f29f4036094d0

[COMMIT MESSAGE]:Updated to check if the user has permissions to view the report||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/fd21e9d53e061bdc30fd1c2a399988773a57d6fd

[COMMIT MESSAGE]:Added files for report generation||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=54&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/c73cc256ba7e73e30e3f24ce28f8f188d069438e

[COMMIT MESSAGE]:Updates to provide mass validation and publication.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'PUBLISH')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'WRITE') or hasPermission(#fedoraObject, 'ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'REVIEW') or hasPermission(#fedoraObject, 'ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'REVIEW') or hasPermission(#fedoraObject, 'PUBLISH') or hasPermission(#fedoraObject, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#fedoraObject, 'PUBLISH')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'PUBLISH')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'WRITE') or hasPermission(#fedoraObject, 'ADMINISTRATION')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'REVIEW') or hasPermission(#fedoraObject, 'ADMINISTRATION')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'REVIEW') or hasPermission(#fedoraObject, 'PUBLISH') or hasPermission(#fedoraObject, 'ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/49c03d59eb4812fa831682fe08c218cba69ae360

[COMMIT MESSAGE]:Added Web Service with ability to create, update, or query activities.||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ANU_USER', 'ROLE_REGISTERED')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/97a7df662c81ca8122c2cf575a8f5e3536da6075

[COMMIT MESSAGE]:Added files for first part of review process||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ANU_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'WRITE,ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'REVIEW,ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#fedoraObject, 'REVIEW,PUBLISH,ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/0a47856c335b1d4c305ee2cb400f693b1b1c6555

[COMMIT MESSAGE]:Updated pambu functionality to provide some administration functions.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/9a67709f0b5c281dd6e126f146e9e621cbdc008e

[COMMIT MESSAGE]:Improvements to security, and updates such that a 401 response is sent||instead of redirecting to the login page if the user is attempting to
access a page that requires authentication.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ippontech/tatami-team1/commit/c3a1643b2057f5b9e6a65f0a115cbbe0f2c36ff9

[COMMIT MESSAGE]:Added the administration page (with domain information)||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JetBrains/idea-templates/commit/16697933a87adc360f2262b2696b02d5816d8dba

[COMMIT MESSAGE]:Spring Security template||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JetBrains/idea-templates/commit/16697933a87adc360f2262b2696b02d5816d8dba

[COMMIT MESSAGE]:Spring Security template||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/banifou/mySparklr2-OAuth2/commit/05360741b0e27f3a78ebdc0881423ad10199e840

[COMMIT MESSAGE]:the source files||
=========================================================

+ @PreAuthorize("#oauth2.clientHasRole('ROLE_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JedenPies/Tracker/commit/a1a28d2d03cd6b0148175a726f36e045952a6108

[COMMIT MESSAGE]:Many updates||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JedenPies/Tracker/commit/a1a28d2d03cd6b0148175a726f36e045952a6108

[COMMIT MESSAGE]:Many updates||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SolarNetwork/solarnetwork-dras/commit/b01c9dd1fbcf9b2562a286230b753b20e8908788

[COMMIT MESSAGE]:Create DRAS module.||
=========================================================

+@PreAuthorize("hasRole('ROLE_OPERATOR')")
+@PreAuthorize("hasRole('ROLE_USER_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=55&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/SolarNetwork/solarnetwork-dras/commit/b01c9dd1fbcf9b2562a286230b753b20e8908788

[COMMIT MESSAGE]:Create DRAS module.||
=========================================================

+@PreAuthorize("hasRole('ROLE_OPERATOR')")
+@PreAuthorize("hasRole('ROLE_USER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/474bc47f2a5619928da113a84896ea1982f51582

[COMMIT MESSAGE]:Home past events||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/635c230917ebfc7ff5a6d4302a14fb48109627a5

[COMMIT MESSAGE]:Proceed with implementations||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/d37d339dacb6e87423d966ba65a097db9231e88a

[COMMIT MESSAGE]:Proceed with tag implementation||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/8b52f453e7bc5624ce3d519a2308a9b6a7ac482f

[COMMIT MESSAGE]:Start mail sending and subscription to locations||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/d37d339dacb6e87423d966ba65a097db9231e88a

[COMMIT MESSAGE]:Proceed with tag implementation||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/042e56264cbcf280715dd7813c28e24eb11d1c33

[COMMIT MESSAGE]:finished tag rest interfaces||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/635c230917ebfc7ff5a6d4302a14fb48109627a5

[COMMIT MESSAGE]:Proceed with implementations||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/633f3311c596da89d3d044dbe6fb63d0819acffb

[COMMIT MESSAGE]:Proceed with location creation||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/c08ee4da85f671dbafe42d0e966ca82a64593633

[COMMIT MESSAGE]:Add location Webservice||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/5a6958a358af8e58d674b91beeb93e290a99c679

[COMMIT MESSAGE]:Implement lock and unlock||
=========================================================

- @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator.equals(principal)) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator.equals(principal)) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator.equals(principal)) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/24fa7d6e56890499b9e0f30bcb5ad0ae576059f9

[COMMIT MESSAGE]:Proceed with file storage||
=========================================================

+ @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/474bc47f2a5619928da113a84896ea1982f51582

[COMMIT MESSAGE]:Home past events||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/019c62c32dd347876c3a41f57c5a721c9259bc4a

[COMMIT MESSAGE]:Implement comments||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/d37d339dacb6e87423d966ba65a097db9231e88a

[COMMIT MESSAGE]:Proceed with tag implementation||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/19e7a1a16f6b03b99499ad15b718bd1780d32ca3

[COMMIT MESSAGE]:Proceed with stuff.||
=========================================================

+ @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/635c230917ebfc7ff5a6d4302a14fb48109627a5

[COMMIT MESSAGE]:Proceed with implementations||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/e20b92755dea9712832c01a53223f2eff67d96f4

[COMMIT MESSAGE]:Huge commit, Event attending, not finished||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/c08ee4da85f671dbafe42d0e966ca82a64593633

[COMMIT MESSAGE]:Add location Webservice||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/5a6958a358af8e58d674b91beeb93e290a99c679

[COMMIT MESSAGE]:Implement lock and unlock||
=========================================================

- @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator.equals(principal)) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator.equals(principal)) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator.equals(principal)) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/24fa7d6e56890499b9e0f30bcb5ad0ae576059f9

[COMMIT MESSAGE]:Proceed with file storage||
=========================================================

+ @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/474bc47f2a5619928da113a84896ea1982f51582

[COMMIT MESSAGE]:Home past events||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/019c62c32dd347876c3a41f57c5a721c9259bc4a

[COMMIT MESSAGE]:Implement comments||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/d37d339dacb6e87423d966ba65a097db9231e88a

[COMMIT MESSAGE]:Proceed with tag implementation||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/19e7a1a16f6b03b99499ad15b718bd1780d32ca3

[COMMIT MESSAGE]:Proceed with stuff.||
=========================================================

+ @PreAuthorize("(#event.creator == authentication) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/635c230917ebfc7ff5a6d4302a14fb48109627a5

[COMMIT MESSAGE]:Proceed with implementations||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/e20b92755dea9712832c01a53223f2eff67d96f4

[COMMIT MESSAGE]:Huge commit, Event attending, not finished||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pep1/kitchenoffice/commit/c08ee4da85f671dbafe42d0e966ca82a64593633

[COMMIT MESSAGE]:Add location Webservice||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/b2f1ad981a96a3f1086b30abbde80adf0c4a2dd1

[COMMIT MESSAGE]:|#776|+Paddy| Changes for edit and done fnd delete unctionality , add…||…ed pages to appcache , removed mime-mapping from web.xml
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/4d46375e9cf291d34a66fbe7e0ec0f8b36928fc9

[COMMIT MESSAGE]:|#807|+Sriram| Adding service to fetch all programs instead of only a…||…ctive programs
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/a96b35101768b60c4efd1316144065024521a663

[COMMIT MESSAGE]:|+807| +Manan|Sanity check in for User screen. Using ngOptions intead…||… of repeating on options
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1fbbdae268001bcd1089eb32b0d58799d205d831

[COMMIT MESSAGE]:|+807| +Manan|Preauthorize in DeliveryZoneController. Change Right na…||…mes to singular (MANAGE_USER, MANAGE_REPORT).
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS, CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/aa29ca1392138ca8b349fc07949b58cb8e4c51f3

[COMMIT MESSAGE]:|#1488|+Riya|Insert and update programs associated with a product.||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE, MANAGE_USER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE, MANAGE_USER, MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/16c55d62e57473a7b29fb6ea0058ecbda9a150c6

[COMMIT MESSAGE]:|#1488|+Riya| Get all product categories api.||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/365fc61c1eb4527f005df18c3ee7774aba6ee748

[COMMIT MESSAGE]:|#1488|+Riya| Create ProductDTO and moving GET, PUT and POST API's fr…||…om programProductController to ProductController.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/9762bea5850e85832da8d09c3c27a01dc701f6e9

[COMMIT MESSAGE]:|#1486|Get all dosageUnits API. Replaced constructor injection autowi…||…ring.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/d5b8c2082c365ca365241778817cfd1e272a6b5a

[COMMIT MESSAGE]:|#1486|Created API for ProductGroup and ProductForm.||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/407856a0dfd04a85ccc6f5847a5ef6f4f0081241

[COMMIT MESSAGE]:|#1478| Riya | adding API to search top level supervisory nodes||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPPLY_LINE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/fd3d6a83009ac2744ecb1f8a34f61d85e026f7e7

[COMMIT MESSAGE]:|#1506| adding right of manage requisition group to search supervisor…||…y node api
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPERVISORY_NODE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/846355a0e8ae468ef3105669b94f95e61e0fcb25

[COMMIT MESSAGE]:#1474 | Richa | Adding controller level APIs to insert and update sup…||…ervisory node and also validate parent node.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPERVISORY_NODE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPERVISORY_NODE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/c10372983759aba70b805267ab5001c553cd3e8f

[COMMIT MESSAGE]:#1474 | Richa | Added APIs to fetch supervisory node by id and search…||… nodes by name.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPERVISORY_NODE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPERVISORY_NODE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/c26d0a0cdfe5f8f7e74568f16ea7dbd88b83c033

[COMMIT MESSAGE]:# 1472|UI for supervisory node search||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SUPERVISORY_NODE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1fbbdae268001bcd1089eb32b0d58799d205d831

[COMMIT MESSAGE]:|+807| +Manan|Preauthorize in DeliveryZoneController. Change Right na…||…mes to singular (MANAGE_USER, MANAGE_REPORT).
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS, CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/aa35d173fec9272f6dec18aa9e6ee1e9e9b12da9

[COMMIT MESSAGE]:#423| + Anshul | Adding api to fetch all programs and supervisory nodes.||
=========================================================

- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("hasPermission('','MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1b9a83313c94909f3092a7302ac02e79c53fc1e2

[COMMIT MESSAGE]:# 1408| Adding client side code for order number configuration||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/e0b777b4311a5afc7fe08ac4e53e161806f50b36

[COMMIT MESSAGE]:# 1408| Renaming configure EDI right to configure System Settings||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/daf7d24ccef7f9956592de53b22c81ab31529c2d

[COMMIT MESSAGE]:|#1452|+Balvinder| checking permissions for user while converting req…||…uisition to order
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/7caceb5e1c7490a5a1a3e2f2c4bddcc1c807ee0a

[COMMIT MESSAGE]:#1118 | Added a manage pod page, js controller for it, and api in Ord…||…erController to return orders for manage POD.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/15133384ad0a0717c53027aba2943a1ccd5cc474

[COMMIT MESSAGE]:|#1097| Adding page size and number of pages to get orders for page api.||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/918b0f59270c31d70856178790c99d6afc2b701b

[COMMIT MESSAGE]:|#000|Moving OrderConfigurationMapperIT to mapper package inside repo…||…sitory
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/37e7523ce1b7d62b82229c8862192bee030d818c

[COMMIT MESSAGE]:|#982| +Anshul| creating enum, serializer for date format, api to get…||… all date formats.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3c30bcc3bb6ea864509b6b459b57ac36f1632a77

[COMMIT MESSAGE]:|#618|+Sriram| Adding client side code for order file format and conf…||…iguration
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/a98ea38c41c7c6c086d99f7deb5c7e26d2acd4ba

[COMMIT MESSAGE]:|#618|+Paddy| Adding server side code for getting order file template…||… and configuration
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_EDI')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/03707fa957e43437013a1b47709029fb0efc6566

[COMMIT MESSAGE]:|#563| +Anshul | Creating view for csv download of orders||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER, CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1ac92305f93a3d6e577dd23c689111b687ae7a8b

[COMMIT MESSAGE]:#666| Sandeep | removing duplicate permission checks. Adding permissi…||…on check for convert to order in service.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CREATE_REQUISITION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CREATE_REQUISITION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'AUTHORIZE_REQUISITION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'APPROVE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/ae994424cf44173d351fc96bcc422264675b0d16

[COMMIT MESSAGE]:|#536|+Manan| refactoring api to insert order, get all orders, refact…||…oring order entity to have Rnr object instead of RnrDTO
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER, CONVERT_TO_ORDER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER, CONVERT_TO_ORDER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/2297df3d65dd6e4053d25af91e9cb328ad944524

[COMMIT MESSAGE]:|#536 | +Anshul| Refactoring, Adding RnrDTO as part of Order, moving …||…convertToOrder to OrderController
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=56&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/d493209604c7041502c4893284b7192b88ef9777

[COMMIT MESSAGE]:#1511| Rashi | creating server side api for facility approved product…||… update.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY_APPROVED_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/358f527fbd4a7f973ffdccd93f580a82e29b0fd1

[COMMIT MESSAGE]:|#769| Period API to get by id. Taking user to view load amount scree…||…n after select ZPP.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/ce07bbd96b9604cb6950d27ee67bb6a03ed3cf97

[COMMIT MESSAGE]:|#278| Added logic to get the filtered list of periods for initiating…||… requisition.
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/778207f86afe2c6522611d743c341f1d48a9fb84

[COMMIT MESSAGE]:|#278| +Anshul | Added code to fetch and display periods based on fac…||…ility and program.
=========================================================

+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/701a355b0de3a8f4b6baa5b54f7ce8cd9dd15d9b

[COMMIT MESSAGE]:#000| Sandeep | Using openlmis message at most places. Also removing …||…runtime exception , using custom data exception instead.
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/525ce5981226ca557ce1352ecf06407fbff822cc

[COMMIT MESSAGE]:|#380| Anshul, Balvinder|Adding API to delete a Period||
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5e3e18f1baffd1f70ef841c725a77e0719621665

[COMMIT MESSAGE]:#367 | +Anshul | Exposing save API for Processing Period. Added valid…||…ation rules to Processing Period.
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/4c1bf2992fef3c5fff553d40a77a8fe3e95cdf0c

[COMMIT MESSAGE]:|#367| +Anshul| processingPeriod controller, repo and mapper added wi…||…th getAll() and insert() API
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/de9adff8f85a51eaa1e76563c8845c261994d018

[COMMIT MESSAGE]:|#1492| adding appropriate rights on programs and schedules API||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE, MANAGE_REQUISITION_GROUP')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT, MANAGE_REQUISITION_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/701a355b0de3a8f4b6baa5b54f7ce8cd9dd15d9b

[COMMIT MESSAGE]:#000| Sandeep | Using openlmis message at most places. Also removing …||…runtime exception , using custom data exception instead.
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5e3e18f1baffd1f70ef841c725a77e0719621665

[COMMIT MESSAGE]:#367 | +Anshul | Exposing save API for Processing Period. Added valid…||…ation rules to Processing Period.
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/7857a047a6890f9f1cd5b47975bf17ab0ac440c7

[COMMIT MESSAGE]:#140 | +Rahul | update processing schedule functionality added.||
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/191c55e6b16af1e7f5194cf470e3bccabb35cbc2

[COMMIT MESSAGE]:Updating create processing schedule to return saved schedule, display…||…ing error message sent from server on failure to create
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/8fe0d895ccc55b77a5e0a76bdb30468bfcd5da34

[COMMIT MESSAGE]:#140 | Exposing API to insert processing schedule||
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/64521808b3def69cb50157cc567d1b4c73bc4627

[COMMIT MESSAGE]:|#140| +Mridul | Created UI for viewing schedules. Changed the respon…||…se type to ResponseEntity from the get all schedules API.
=========================================================

++ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/b35a9dd32ce318d8403b7e5445430ea979512cbe

[COMMIT MESSAGE]:#1494|Modifying facility filter api to support virtual facility and E…||…nabled Facility Flag and giving ManageUser Right in facilitySearchFilter and geo zone filter api.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_GEOGRAPHIC_ZONE, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_GEOGRAPHIC_ZONE, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE, MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/03204363dee96702da3510b813f4d18b49d764a1

[COMMIT MESSAGE]:|#1468| Riya | Adding appropriate rights on programs and facility typ…||…es. setting default value as blank for search in facility approved products
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY_APPROVED_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/6a0d7cacbc8885791684164792818feb7d7438fc

[COMMIT MESSAGE]:|#1478| Riya | adding appropriate rights to access search APIs||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_GEOGRAPHIC_ZONE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_GEOGRAPHIC_ZONE, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1142f6e15526d7aca8e6eee1042c17bc876e7458

[COMMIT MESSAGE]:|#1512| Riya | giving Manage_User right to access getById API of faci…||…lity
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_FACILITY, MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/791f136a91251df0a52932348ee352624abbce77

[COMMIT MESSAGE]:|#1506| adding appropriate rights to APIs||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR') OR @permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR, MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/e5b4d6674763e2099c1de58319b9f0c5b5084ad4

[COMMIT MESSAGE]:#1489 | Anshul | Server side APIs to fetch geo zones by search param …||…and filters. Removing previous getEnabledFacilities API and merging it into one single geoZoneSearch API.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/0e90c71015ad69b2382ff01a3cbf03833fcdcf3a

[COMMIT MESSAGE]:#1489|Adding api's to get facility_types and geo_zones by search para…||…meter
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_GEOGRAPHIC_ZONE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/adc517869312a95418d1853c5692becddb266920

[COMMIT MESSAGE]:#1474 | Richa | Adding new API in FacilityController to fetch filtere…||…d facilities.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/e47943ebd8d5de8dee7e4a0467e7ddf2b3120792

[COMMIT MESSAGE]:|#1078|+Rahul K| Addding shipment role assignment table and shipment …||…role assignment API.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/020d2eb9fd6e2a811958ff2cb67beef24f9b8467

[COMMIT MESSAGE]:|#000|+Rahul| removed empty filed from being serialised for program s…||…upported
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/08dadf0ea24bb8a005e0ada2d3b61f8c43d8d33b

[COMMIT MESSAGE]:|#769| +Shibha| making client side changes for view load amount.||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/aa29ca1392138ca8b349fc07949b58cb8e4c51f3

[COMMIT MESSAGE]:|#1488|+Riya|Insert and update programs associated with a product.||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE, MANAGE_USER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE, MANAGE_USER, MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/de9adff8f85a51eaa1e76563c8845c261994d018

[COMMIT MESSAGE]:|#1492| adding appropriate rights on programs and schedules API||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE, MANAGE_REQUISITION_GROUP')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT, MANAGE_REQUISITION_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/03204363dee96702da3510b813f4d18b49d764a1

[COMMIT MESSAGE]:|#1468| Riya | Adding appropriate rights on programs and facility typ…||…es. setting default value as blank for search in facility approved products
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY_APPROVED_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE, MANAGE_FACILITY_APPROVED_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/0542b6fe8ec032686bd99899279a300b5684acf0

[COMMIT MESSAGE]:|#1518| Riya | adding manage_supply_line right on getPullPrograms API||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR, MANAGE_SUPPLY_LINE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/791f136a91251df0a52932348ee352624abbce77

[COMMIT MESSAGE]:|#1506| adding appropriate rights to APIs||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY, MANAGE_SUPERVISORY_NODE, MANAGE_REQUISITION_GROUP')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR') OR @permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR, MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/302f94297e43d582ca5cd0f94537b80d2c9b828c

[COMMIT MESSAGE]:|+807| +Manan| Assigning roles to users on delivery zones for programs.||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE, MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1fbbdae268001bcd1089eb32b0d58799d205d831

[COMMIT MESSAGE]:|+807| +Manan|Preauthorize in DeliveryZoneController. Change Right na…||…mes to singular (MANAGE_USER, MANAGE_REPORT).
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS, CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5e31a7062501fc9e3110a8ac2e4dafeb3f27073c

[COMMIT MESSAGE]:|+760| + Shibha| Regimen code check is case insensitive. Get program …||…by id has new preauthorize 'OR' permission of manage_regimen_template.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR') OR @permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3f8253fd8f8d569b051af995069f968963addd79

[COMMIT MESSAGE]:|+760|+Anshul|Fixing save on configure regimen template screen. Chang…||…ed program api to get both pull and push programs.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/4cb9bf97eb3d9f08f2b656b1db22338468716118

[COMMIT MESSAGE]:#759| +Vinay |Client side, impleting page to display list of program …||…products
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/20af50080185254d3d43320f56c3f199d1a80423

[COMMIT MESSAGE]:#759| +Vinay | Adding API to update and insert program product ISA, a…||…dded API to get ProgramProducts with ISA
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3d66532d942d0e2cdbe6995350345fb3b2c53139

[COMMIT MESSAGE]:|#430| +Manan | Added logic to display configured vs non-configured t…||…emplates on UI. Fixed functional tests
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS, CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/aa35d173fec9272f6dec18aa9e6ee1e9e9b12da9

[COMMIT MESSAGE]:#423| + Anshul | Adding api to fetch all programs and supervisory nodes.||
=========================================================

- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("hasPermission('','MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/ab5f33ab904e0def4893edf948685f9751e2ba29

[COMMIT MESSAGE]:|#412| using /facilities/id/program API to get facility supported pro…||…gram instead of /facilities/id
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1beaaa3b69c67824573d7cd307d760b5b62ed800

[COMMIT MESSAGE]:#338| +Mridul | Adding authorize requisition check for apr needed for…||… authorize rnr. Also refactoring some code related to save role rights controller js.
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION',)")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, APPROVE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/0d8943b4509c2754ba198a535ee3e77c8c8e016e

[COMMIT MESSAGE]:#338|+Manan| backend changes for fetching facilities and programs for…||… create and authorize rnr. Introducing externalisation of Messages.
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('', 'APPROVE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/0e1272c660ddb7ab176834263e22303e6d905155

[COMMIT MESSAGE]:#283 | +Sanchit | Added API to get all active programs for user for w…||…hich he has create RNR right
=========================================================

+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/15375d9762e01aa7a208eaf6a9cfe75dfaa7877f

[COMMIT MESSAGE]:|#354| added permission check on controllers||
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','UPLOADS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1fbbdae268001bcd1089eb32b0d58799d205d831

[COMMIT MESSAGE]:|+807| +Manan|Preauthorize in DeliveryZoneController. Change Right na…||…mes to singular (MANAGE_USER, MANAGE_REPORT).
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS, CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/79591d1161ea317d91acc06035cf8454cc0bd9d4

[COMMIT MESSAGE]:#000 | Sandeep | API to get all rights for a user on a facility and p…||…rograms.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/701a355b0de3a8f4b6baa5b54f7ce8cd9dd15d9b

[COMMIT MESSAGE]:#000| Sandeep | Using openlmis message at most places. Also removing …||…runtime exception , using custom data exception instead.
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/e6ce9534b24a0b9adc9e78b071939edb102fddcb

[COMMIT MESSAGE]:#377 | Balvinder| Saving modifiedBy as current logged in user upon ed…||…it of roles
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/0549625310d494d8782966398cbad88439c4bded

[COMMIT MESSAGE]:|#153| +Shiba | returning ResponseEntity<OpenLmisResponse> from contr…||…oller, added helper methods in OpenLmisResponse
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/b49415e08b8ebf4c10b2bb357e6205ceabc03812

[COMMIT MESSAGE]:| #153 | +Shiba | edit role template rendered||
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3227fc0cf551d3da7fd46b70febcd56d816e553d

[COMMIT MESSAGE]:|+Rahul|#153| listing roles and backend APIs added for getting roles …||…and rights
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3de87711a59a18c9e93f7c6a819a17c4344ed801

[COMMIT MESSAGE]:|#153| + Rahul | Backend for list of roles||
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("hasPermission('','MANAGE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/4e989ecb66578bdcab5ce51704f776c8b1f1c18f

[COMMIT MESSAGE]:|#876|+Manan| refactoring save regimen and template api.||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE, CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION, VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE, VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3d927e4fb44c4653141c655de77d778296fd3586

[COMMIT MESSAGE]:|#836|+Vinay| displaying regimen tab on create rnr screen with column…||…s and regimens
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE, CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION, VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/b6007e527be4e0b3a2689f85c663d40a1dc4ecc8

[COMMIT MESSAGE]:|+840|+Vishal| Controller code for getting regimen columns by program…||…Id. On save of regimen, the columns as well as the regimens will be sent as the payload.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3f8253fd8f8d569b051af995069f968963addd79

[COMMIT MESSAGE]:|+760|+Anshul|Fixing save on configure regimen template screen. Chang…||…ed program api to get both pull and push programs.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/d3367a0b3dfd93d1f20f4044a829e418a523e958

[COMMIT MESSAGE]:# 760 | +Sriram | Added API to get regimencategories. Added controlle…||…r and module for client side.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/3210f46d8f12643e19bbf2a0e78811991846a230

[COMMIT MESSAGE]:# 760 | +Shibha | Adding API to get programs in order by regimen temp…||…late configured, Added Regimen and RegimenCategory and corresponding Tables. Added Manage regimen template as a new right. Added apis for regimen get and save
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/e0b777b4311a5afc7fe08ac4e53e161806f50b36

[COMMIT MESSAGE]:# 1408| Renaming configure EDI right to configure System Settings||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/58c6d664f2b0ad53e236ccafdd8a41dcb3bed259

[COMMIT MESSAGE]:#996| Client side changes for budget file configuration. Removing Shi…||…pmentFileColumn
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/76db499b3084b864fdcad3899348772c140776ef

[COMMIT MESSAGE]:|#876|+Manan| separate service to fetch program regimen columns and e…||…mpty if not defined
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/4e989ecb66578bdcab5ce51704f776c8b1f1c18f

[COMMIT MESSAGE]:|#876|+Manan| refactoring save regimen and template api.||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE, CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION, VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REGIMEN_TEMPLATE, VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/e0b777b4311a5afc7fe08ac4e53e161806f50b36

[COMMIT MESSAGE]:# 1408| Renaming configure EDI right to configure System Settings||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'SYSTEM_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/567b6772a29c878c9abd027d8637a3aab86a42a1

[COMMIT MESSAGE]:|#948| +Riya| Adding controller for shipment configuration get and up…||…date.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_EDI')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=57&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/365fc61c1eb4527f005df18c3ee7774aba6ee748

[COMMIT MESSAGE]:|#1488|+Riya| Create ProductDTO and moving GET, PUT and POST API's fr…||…om programProductController to ProductController.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1d96f2fb1eb76d912e6fded97bbf714da7754638

[COMMIT MESSAGE]:|#1486|edit product functionality.||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/7f481b55df097529d85b34cbfbea1175d56bc2d1

[COMMIT MESSAGE]:#1486|+Rashi|Added save product api in programProductController.||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/34e2a03f2ca62eb6c8a74e4afb6a9483c94d6107

[COMMIT MESSAGE]:#1490| Rashi| Added unapproved program products API.||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY_APPROVED_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/4c4cd61565e18e75fb0e60b88a3005720825737b

[COMMIT MESSAGE]:|# 769| +Manan | Refactoring to move ProgramProductIsa to ProgramProd…||…uct, moved corresponding get to ProgramProductService. Creating ProgramProductController.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/4cb9bf97eb3d9f08f2b656b1db22338468716118

[COMMIT MESSAGE]:#759| +Vinay |Client side, impleting page to display list of program …||…products
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PROGRAM_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/20af50080185254d3d43320f56c3f199d1a80423

[COMMIT MESSAGE]:#759| +Vinay | Adding API to update and insert program product ISA, a…||…dded API to get ProgramProducts with ISA
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/97e47d3bf8aa8b983ad8978604f1d9f0a0ed765c

[COMMIT MESSAGE]:|#1388| +Riya| adding controller and tests for insert and update of g…||…eographic zones
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_GEO_ZONE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_GEO_ZONE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1fbbdae268001bcd1089eb32b0d58799d205d831

[COMMIT MESSAGE]:|+807| +Manan|Preauthorize in DeliveryZoneController. Change Right na…||…mes to singular (MANAGE_USER, MANAGE_REPORT).
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_DISTRIBUTION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS, CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER, CONFIGURE_RNR')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORTS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE, MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/2c665a8929c5f72ba8a95a56dcadc446cc794682

[COMMIT MESSAGE]:|#1305|+Manan| Adding service and validations to submit pod and updat…||…e order status.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/90475da76a65aacde7604c8f25d19a7075e82cbe

[COMMIT MESSAGE]:|#1235| +Manan| Added api to save OrderPod and lineItems. Removed @Ca…||…tegory(IntegrationTests.class) from unit tests.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/0702f84d9bd8c085060688548f38d759bd07c1a5

[COMMIT MESSAGE]:|#1300|+Riya| adding API to get orderPOD with podLineItems by pod id||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/e8088123ef65c3b644b95fbb04a293ea7c153cca

[COMMIT MESSAGE]:|#1255| +RahulK | renaming POD to OrderPOD, PODLineItems to OrderPODL…||…ineItems, Added PODController
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/b59eff0abbe47a542b21903cff88349452e0366e

[COMMIT MESSAGE]:#000| +Riya| adding view requisition right on API for fetching rnr co…||…lumns
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION, VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/f117600dce7c85c0f6fcb8a8e39688c566729c78

[COMMIT MESSAGE]:#505|Sandeep| Checking for configure rnr access for fetching rnr temp…||…late columns.
=========================================================

+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/38a6092a3e9ac55fb62ea90a2a5e6ee88afd7377

[COMMIT MESSAGE]:|#429|+Rahul|Fetching all R&R columns instead of only visible columns…||… on R&R form.
=========================================================

- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/977139f5fe48d400cb7de3a9e2e778559a765965

[COMMIT MESSAGE]:Fixing bug in which user with only approve privilege was not able to …||…approve
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/9c18f42364836f87275e72b99be60800b0c0354a

[COMMIT MESSAGE]:#338| +Mridul | Adding env specific properties. Changed previlege lev…||…el to authorize for fetching programs and columns for rnr.
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION',)")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/1beaaa3b69c67824573d7cd307d760b5b62ed800

[COMMIT MESSAGE]:#338| +Mridul | Adding authorize requisition check for apr needed for…||… authorize rnr. Also refactoring some code related to save role rights controller js.
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION',)")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION, APPROVE_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/701a355b0de3a8f4b6baa5b54f7ce8cd9dd15d9b

[COMMIT MESSAGE]:#000| Sandeep | Using openlmis message at most places. Also removing …||…runtime exception , using custom data exception instead.
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/15375d9762e01aa7a208eaf6a9cfe75dfaa7877f

[COMMIT MESSAGE]:|#354| added permission check on controllers||
=========================================================

+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','UPLOADS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/9c0309e77847dd10c96083f6cde841c1c8ba0470

[COMMIT MESSAGE]:|#1404| +Riya| sending numberOfMonths present in previous period to c…||…lient side on initiating rnr and fetching it again.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5e186275e15a793f379457f3555db3a986d1b94d

[COMMIT MESSAGE]:|#1081|+Shibha|using createdDate as submitted date on convert to orde…||…r screen.
=========================================================

-// @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/a59d53359c51601564bd8aed7be09743306bf9b2

[COMMIT MESSAGE]:|#1081|Sortby facilityName/Code, programName,submittedDate on convert…||… to order page.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/a1fa7b0c7950e75d7e4c4bc1afaf10b6c8dab566

[COMMIT MESSAGE]:|#1050| PostAuthorize permission evaluator for print and get requisition||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5876d30bfe01cc1bcec8f6e883a8dfaff8a1c728

[COMMIT MESSAGE]:|#1050| +Anshul| removing unused endpoint from RequisitionController||
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermission(principal, 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/224a00256cdd62b95f1ecfed9563a668f010248a

[COMMIT MESSAGE]:|#1379 | +Varun | Added DistributionPermissionService to check permis…||…sions before create and sync distribution.
=========================================================

- @PreAuthorize("@permissionEvaluator.hasPermissionOnDeliveryZone(principal, 'MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@distributionPermissionService.hasPermission(principal, 'MANAGE_DISTRIBUTION', #distribution)")
- @PreAuthorize("@permissionEvaluator.hasPermissionOnDeliveryZone(principal, 'MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@distributionPermissionService.hasPermission(principal, 'MANAGE_DISTRIBUTION', #id)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/44bfd1c1b49573da40293782d47979a0b3bee85b

[COMMIT MESSAGE]:|#1379 | +Varun | Adding pre authorize permission checks on create an…||…d sync distribution.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermissionOnDeliveryZone(principal, 'MANAGE_DISTRIBUTION')")
+ @PreAuthorize("@permissionEvaluator.hasPermissionOnDeliveryZone(principal, 'MANAGE_DISTRIBUTION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/5dd6047b16e0f791064bbe7b9dcbf6205d8d028b

[COMMIT MESSAGE]:|#1357| documentation for openlmis web module, Also did some reformat…||…ting, changed some constructor injection to field autowiring, moved VendorEventFeedService to a separate service package in openlmis-web module, removed unused RnrReferenceData class, removed unused fields
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/b833d95a149debc2ed945eb693bfb54d6c18fabc

[COMMIT MESSAGE]:#275|+Sriram| Moving report template code to reporting module. Also v…||…alidating the jrxml file uploaded while creating report template.
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REPORTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/0fa0f5680f27ba9bbca5ab64f017bd2c9de1baed

[COMMIT MESSAGE]:#275|+Sriram, Manan| Refactoring report framework.||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOAD_REPORT')")
- @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOAD_REPORT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/75eb30f6f53bd4cdd7ddf56369104d412eebe07d

[COMMIT MESSAGE]:|#275|+Sriram| Basic backend for report template upload||
=========================================================

+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOAD_REPORT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/bc7d0172f95db9dd794c064a6db6767201e49ece

[COMMIT MESSAGE]:#000|+Rahul | Using custom permission evaluator for authorization.||
=========================================================

- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','MANAGE_SCHEDULE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_SCHEDULE')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION')")
- @PreAuthorize("hasPermission('','APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONVERT_TO_ORDER')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONVERT_TO_ORDER')")
- @PreAuthorize("hasPermission('','VIEW_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'VIEW_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CREATE_REQUISITION, AUTHORIZE_REQUISITION, APPROVE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_ROLE')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_ROLE')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','UPLOADS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'UPLOADS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")
- @PreAuthorize("hasPermission('','MANAGE_USERS')")
+ @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_USERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/701a355b0de3a8f4b6baa5b54f7ce8cd9dd15d9b

[COMMIT MESSAGE]:#000| Sandeep | Using openlmis message at most places. Also removing …||…runtime exception , using custom data exception instead.
=========================================================

- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
+ @PreAuthorize("hasPermission('','MANAGE_FACILITY')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
- @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
- @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")
+ @PreAuthorize("hasPermission('','CREATE_REQUISITION')")
+ @PreAuthorize("hasPermission('','CONFIGURE_RNR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/00341f1eeaf499805d1ffd3165c867db2535032a

[COMMIT MESSAGE]:check read permissions on messages||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/faab5c1c774af6e9912c32f5975f344583605774

[COMMIT MESSAGE]:adding status resource||
=========================================================

+@PreAuthorize("denyAll")
- //@PreAuthorize("hasPermission('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/00341f1eeaf499805d1ffd3165c867db2535032a

[COMMIT MESSAGE]:check read permissions on messages||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/24133d0e8c780ba37472423b9ff42319f487972e

[COMMIT MESSAGE]:adding message feature||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/36f8313481dc755c45ef2f52995812cf35fcd3e5

[COMMIT MESSAGE]:make project testable||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("#username == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/00341f1eeaf499805d1ffd3165c867db2535032a

[COMMIT MESSAGE]:check read permissions on messages||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/24133d0e8c780ba37472423b9ff42319f487972e

[COMMIT MESSAGE]:adding message feature||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=58&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/41c0ce0d07cb8322d2e3be61aa46fa83991e7737

[COMMIT MESSAGE]:cong thanh fix||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/41c0ce0d07cb8322d2e3be61aa46fa83991e7737

[COMMIT MESSAGE]:cong thanh fix||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=59&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/07a2b51d50954d79c8b0536e1a98fca6bb676c6e

[COMMIT MESSAGE]:Update UserFB||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ // @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/smolnij/woowtest/commit/72ae22def199e1e805780dc580cdaad0ea9f5ab9

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slavonic-suomi/GSU-Sample-Forum/commit/17770ba0519324916e8c72d9c5d202a776552217

[COMMIT MESSAGE]:base upload||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slavonic-suomi/GSU-Sample-Forum/commit/17770ba0519324916e8c72d9c5d202a776552217

[COMMIT MESSAGE]:base upload||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slavonic-suomi/GSU-Sample-Forum/commit/17770ba0519324916e8c72d9c5d202a776552217

[COMMIT MESSAGE]:base upload||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=60&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/nmartynenko/sample-crud-mvc/commit/bb058eddd16f6d4fd36728da7aa7c31cbfbbe0dd

[COMMIT MESSAGE]:- Backports from "sample-crud-scala"||- stop supporting Gradle build in favor of Maven
=========================================================

- @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atroutt/Community-Profile-Database/commit/152b6e4a8b5dec2df659d3ba8d246b7ce41d6b2d

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #id == principal.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#dto.id == principal.id)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #dto.Id == principal.Id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atroutt/Community-Profile-Database/commit/152b6e4a8b5dec2df659d3ba8d246b7ce41d6b2d

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #id == principal.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#dto.id == principal.id)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #dto.Id == principal.Id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atroutt/Community-Profile-Database/commit/152b6e4a8b5dec2df659d3ba8d246b7ce41d6b2d

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #id == principal.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (#dto.id == principal.id)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #dto.Id == principal.Id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/artur-kacen/LimboAlpha/commit/baa8758b69d6e665ac876297cd7315b2dccfef7f

[COMMIT MESSAGE]:done with user adding||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_SUPERADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/artur-kacen/LimboAlpha/commit/c1ea71061909854e2a4599fbce929f7d140c1f29

[COMMIT MESSAGE]:updates||
=========================================================

- @PreAuthorize("hasRole('ROLE_SUPERADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/artur-kacen/LimboAlpha/commit/1ca1eb1f5b4996902d133b5e67586d66aff51cdf

[COMMIT MESSAGE]:Big changes!||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/b1f1ac908315d54b7d5ce862d2b7cb6a78615b38

[COMMIT MESSAGE]:added feature baches functionality||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/55d496f60ba0d9d67f3611d84e303e0699de1819

[COMMIT MESSAGE]:adding ignore instead of setting null to overcome jackson mapping pro…||…blem
=========================================================

+ @PreAuthorize("isAuthenticated() and hasAnyRole('ROLE_LEC','ROLE_STUDENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/8a6625a1ffa9f474283f95e1759fabefebaa643a

[COMMIT MESSAGE]:added a service layer||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/227173b3a8fac14d3a30baa0e9eb9201b81f6f2c

[COMMIT MESSAGE]:jqgrid support is implemented||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_STUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/8a6625a1ffa9f474283f95e1759fabefebaa643a

[COMMIT MESSAGE]:added a service layer||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/d897915df38078b5adce50a301a15f24dbf43400

[COMMIT MESSAGE]:added the basic lecturer profile||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/efec0f472f4dec0e0bd363386a166fd3c2543fb5

[COMMIT MESSAGE]:updated with the subject, classroom concept||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
-@PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
-@PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/227173b3a8fac14d3a30baa0e9eb9201b81f6f2c

[COMMIT MESSAGE]:jqgrid support is implemented||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_STUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/8a6625a1ffa9f474283f95e1759fabefebaa643a

[COMMIT MESSAGE]:added a service layer||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
- @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/efec0f472f4dec0e0bd363386a166fd3c2543fb5

[COMMIT MESSAGE]:updated with the subject, classroom concept||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_LEC')")
-@PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
-@PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/3d4466ce027437b7d7fdae7020fcca75e058dc0c

[COMMIT MESSAGE]:provided base for method level security||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jopenclass/jopenclass.repo/commit/227173b3a8fac14d3a30baa0e9eb9201b81f6f2c

[COMMIT MESSAGE]:jqgrid support is implemented||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_STUD')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=61&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Fabric3/fabric3-integration-tests/commit/446a16397bee2c004ba06252646ba3149a95e1e0

[COMMIT MESSAGE]:add Spring Security tests||
=========================================================

+ @PreAuthorize("hasRole('ROLE_TELLER')")
+ @PreAuthorize("hasRole('ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dminarik/Webbox/commit/cfca64757fcb10de378bcff6ba33f192a7e2f7df

[COMMIT MESSAGE]:Added basic spring security||
=========================================================

+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=62&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=63&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=64&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/kmb385/ToThoughtWebLayer/commit/16b213a3ae9647d36746fccb080dd4d1ffaa285a

[COMMIT MESSAGE]:Added @Secured to controller methods [Spring-Security]||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kmb385/ToThoughtWebLayer/commit/16b213a3ae9647d36746fccb080dd4d1ffaa285a

[COMMIT MESSAGE]:Added @Secured to controller methods [Spring-Security]||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pellcorp/JavaFirst/commit/3bbb3ddd98b3324d828de586346c4a1be8f6861b

[COMMIT MESSAGE]:added a sample of how to provide a description for an MX Bean.||
=========================================================

+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pellcorp/JavaFirst/commit/6147c2b9e7886c6b26987cf8d2c0b019baa47399

[COMMIT MESSAGE]:further revisions to experiment with MXBean and what spring support is||available.  Still trying to figure out how I customise the Attribute
descriptions, etc when using MXBeans.
=========================================================

- @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pellcorp/JavaFirst/commit/862db5a1cbb34e8704b3cc4d79ac863ceebb8337

[COMMIT MESSAGE]:sample of mxbean||
=========================================================

- @PreAuthorize("hasRole('Administrator')")
- @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pellcorp/JavaFirst/commit/6147c2b9e7886c6b26987cf8d2c0b019baa47399

[COMMIT MESSAGE]:further revisions to experiment with MXBean and what spring support is||available.  Still trying to figure out how I customise the Attribute
descriptions, etc when using MXBeans.
=========================================================

- @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/ff6461402d69880881d794036bb686140c87aea0

[COMMIT MESSAGE]:zmiany||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/337979d4bc09a82dfe33e6a72ef0ec43269987e8

[COMMIT MESSAGE]:Simplifiy controller overriding||
=========================================================

- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/7fd37899f03890163add2503f73c5347bff68104

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/8ad23bc32cb00bcfd94b9669784a23f4764fe021

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/ff6461402d69880881d794036bb686140c87aea0

[COMMIT MESSAGE]:zmiany||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/7fd37899f03890163add2503f73c5347bff68104

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/3a20c3b24b81cc0a558c91e9b50f8f3c9f8b0e63

[COMMIT MESSAGE]:disable validation of street and city, disable pagination when no rec…||…ords
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/8d99c0932a5b2cbf4fea3e7c068b02d6b6577aec

[COMMIT MESSAGE]:firefighter time||
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/337979d4bc09a82dfe33e6a72ef0ec43269987e8

[COMMIT MESSAGE]:Simplifiy controller overriding||
=========================================================

- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/7fd37899f03890163add2503f73c5347bff68104

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/8ad23bc32cb00bcfd94b9669784a23f4764fe021

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/2cff0548c36aaae9d42f91d2baf2407f99e9ec6e

[COMMIT MESSAGE]:SavingTime||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/77cbeacfc66efa760b5f2886f9773b5cea82067c

[COMMIT MESSAGE]:SavingTime||
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/8d99c0932a5b2cbf4fea3e7c068b02d6b6577aec

[COMMIT MESSAGE]:firefighter time||
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/337979d4bc09a82dfe33e6a72ef0ec43269987e8

[COMMIT MESSAGE]:Simplifiy controller overriding||
=========================================================

- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/7fd37899f03890163add2503f73c5347bff68104

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/8ad23bc32cb00bcfd94b9669784a23f4764fe021

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/4982574a2d20b6154ee918bc0f866477be0eea62

[COMMIT MESSAGE]:WCP-326 : Adds telephony||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#session, 'view')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/213b159297fa3678eef6be7482c61dab52075620

[COMMIT MESSAGE]:WCP-215 : Added in a "change role" service call that changes the role…||… and sends one updating email with a notice on the top saying the URL changed.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#session, 'view')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#session, 'view')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/35570369af8752611c406764a9f74a273dd591e5

[COMMIT MESSAGE]:WCP-28 Implement backbone based participant ui||Add, update, delete of participants from dynamically updating UI via AJAX
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/bbbbc404c82f91b32868309668ea8c990f574b55

[COMMIT MESSAGE]:WCP-110, WCP-109 : Added a "Join now" link when the session is joinable.||Also added a "Session start in ... "
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#session, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/aea96818d36872454104b37be451e8046a2a3b2b

[COMMIT MESSAGE]:WCP-147 Implement recording edit view||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#recordingId, 'org.jasig.portlet.blackboardvcportlet.data.SessionRecording', 'view')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#recordingId, 'org.jasig.portlet.blackboardvcportlet.data.SessionRecording', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/a8845146330c42981b83589baffc2acff2567515

[COMMIT MESSAGE]:WCP-86 :||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/ede15a9c684c3667ba5538e8748621a509d6e243

[COMMIT MESSAGE]:WCP-75 and WCP-120 : Updated email text, fixed URL for non-chair people,||and created an enum for avaliable email substitutions.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#session, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/dc90e01872176edcfa7d25059278b2320d26883c

[COMMIT MESSAGE]:WCP-94 Presentation upload/delete works||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || (hasRole('ROLE_FULL_ACCESS') && hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || (hasRole('ROLE_FULL_ACCESS') && hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/38f50646a2c7e89a38083549de73d7c6006daff2

[COMMIT MESSAGE]:WCP-108||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#session, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/bc2febf9873599b95c1cf91dbf92d0e1e0691425

[COMMIT MESSAGE]:WCP-95 Complete support for deleting multimedia||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || (hasRole('ROLE_FULL_ACCESS') && hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/c147de806b4cf18f618a1abfcb064565f5f0fb85

[COMMIT MESSAGE]:WCP-69 Uploaded file is never buffered in memory||WCP-95 Upload and associate of a multimedia file works
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#session, 'view')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || (hasRole('ROLE_FULL_ACCESS') && hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/37b352b1543289cbb63bff1196730383d6d21217

[COMMIT MESSAGE]:WCP-101 Deleting sessions works||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/0e1d27ca507c4cc83fb3441203f8bceae3fad086

[COMMIT MESSAGE]:WCP-97 Participant add/remove working||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/bfa62770ed628ea33e3a145e45c1f33966063c4f

[COMMIT MESSAGE]:WCP-100 Complete add/remove moderators||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/245f9028ec9df991e0acfd5ce28cacde5cd3020d

[COMMIT MESSAGE]:WCP-100 Add Chair is working||Add Chair works, Delete chair is partially implemented
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/084286ecb20637cc8e66dd62e7f0239b216937b6

[COMMIT MESSAGE]:WCP-89 Fix edit session view||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'view')")
- @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#sessionId, 'org.jasig.portlet.blackboardvcportlet.data.Session', 'view')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=65&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/d03d9b3ac962fae3a70bd4386acf14114ecf5108

[COMMIT MESSAGE]:Add in an admin feature for recording datafix.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/ed30cc93b835533c012a0b66fe2f30df4df5f482

[COMMIT MESSAGE]:WCP-147 Implement delete recording||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#recordingId, 'org.jasig.portlet.blackboardvcportlet.data.SessionRecording', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/BlackboardVCPortlet/commit/aea96818d36872454104b37be451e8046a2a3b2b

[COMMIT MESSAGE]:WCP-147 Implement recording edit view||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#recordingId, 'org.jasig.portlet.blackboardvcportlet.data.SessionRecording', 'view')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') || hasPermission(#recordingId, 'org.jasig.portlet.blackboardvcportlet.data.SessionRecording', 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/f9851aef27653ef7c2ec731d4ebbc5992504d991

[COMMIT MESSAGE]:editing&refactoring||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(['ROLE_ADMIN'])")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/f9851aef27653ef7c2ec731d4ebbc5992504d991

[COMMIT MESSAGE]:editing&refactoring||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(['ROLE_ADMIN'])")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/4077258329bdcc64d54c85aa923847ccf4a80793

[COMMIT MESSAGE]:querying the data||
=========================================================

+ @PreAuthorize("hasRole(['ROLE_ADMIN'])")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=66&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/f9851aef27653ef7c2ec731d4ebbc5992504d991

[COMMIT MESSAGE]:editing&refactoring||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(['ROLE_ADMIN'])")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/4077258329bdcc64d54c85aa923847ccf4a80793

[COMMIT MESSAGE]:querying the data||
=========================================================

+ @PreAuthorize("hasRole(['ROLE_ADMIN'])")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/f9851aef27653ef7c2ec731d4ebbc5992504d991

[COMMIT MESSAGE]:editing&refactoring||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(['ROLE_ADMIN'])")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/4077258329bdcc64d54c85aa923847ccf4a80793

[COMMIT MESSAGE]:querying the data||
=========================================================

+ @PreAuthorize("hasRole(['ROLE_ADMIN'])")

=========================================================
[CODE-CHANGE-URL]:https://github.com/joanluk/spring-data-rest/commit/aa64f7a09f7f7de8d7bf32080579c5eb2d7c14b6

[COMMIT MESSAGE]:include code project||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fgarsombke/arcadian/commit/87b82e406f3f0ef42f4c38cead9f6ec4d5c1773c

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#server.id, 'ADD_SERVER')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#editableServer.id, 'EDIT_SERVER')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#id, 'REMOVE_SERVER')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'ADD_ADMIN_PERMISSION')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'REMOVE_ADMIN_PERMISSION')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#admin.serverId, 'ADD_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'REMOVE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'FIND_ADMINS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=67&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/fgarsombke/arcadian/commit/87b82e406f3f0ef42f4c38cead9f6ec4d5c1773c

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#server.id, 'ADD_SERVER')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#editableServer.id, 'EDIT_SERVER')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#id, 'REMOVE_SERVER')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'ADD_ADMIN_PERMISSION')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'REMOVE_ADMIN_PERMISSION')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#admin.serverId, 'ADD_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'REMOVE_ADMIN')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#serverId, 'FIND_ADMINS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/piotrkpaul/interiordesigner/commit/7de347a47b482824473d322c0bfbe160c6ca4d18

[COMMIT MESSAGE]:utf8||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/piotrkpaul/interiordesigner/commit/775ea1544b417960c867091597e8f4c2fa070258

[COMMIT MESSAGE]:profile edit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/piotrkpaul/interiordesigner/commit/7de347a47b482824473d322c0bfbe160c6ca4d18

[COMMIT MESSAGE]:utf8||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+@PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/piotrkpaul/interiordesigner/commit/7de347a47b482824473d322c0bfbe160c6ca4d18

[COMMIT MESSAGE]:utf8||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+@PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SelfStudyGuide/repo/commit/20974e20e2572b23e5ef86d3e3237c5129bac3c1

[COMMIT MESSAGE]:Security - CommandPreAuthorize||git-svn-id: https://bma.unfuddle.com/svn/bma_ssg/trunk@59 daaeb461-b3eb-4b42-8a8b-4cd59dc14bb9
=========================================================

+ @PreAuthorize("#studentId == authentication.principal.personId")
+ @PreAuthorize("hasRole('student')")
+ @PreAuthorize("#hw.student.id == authentication.principal.personId")
- // @PreAuthorize("hasRole('teller')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jebz/spring-mvc-freemarker-template/commit/f01304e710f67c29cdffddd3a8b7e18158d81851

[COMMIT MESSAGE]:first version of Spring MVC integration||
=========================================================

+// @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/owickstrom/ddd-bank/commit/ecb12ea8ee763c86f7467b8cae2302de1b322cbc

[COMMIT MESSAGE]:Added new resources to processor service||
=========================================================

+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=68&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jdubois/tatami-jduchess/commit/96595d52254a9cb3ed126b1aaa816da71544beee

[COMMIT MESSAGE]:Initial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/projeto-coruja/Profetas-Coruja/commit/8750bbc8b8c0b102da0fd28ec6c27f69b9bf6100

[COMMIT MESSAGE]:Profile-roles||
=========================================================

- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/projeto-coruja/Profetas-Coruja/commit/b1e2026ef5cf5fe697595126b4dd5c5743244757

[COMMIT MESSAGE]:Personagem, Fontes, GrupoMovimento||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/John4github/crw/commit/0b01fa63001bf78f3570247a4513ba5bbe87cb60

[COMMIT MESSAGE]:完成录入租房信息service||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kremnef/ems/commit/33a5487f285ea111c6c7c74fcde57f34dca4c9a8

[COMMIT MESSAGE]:first commit||
=========================================================

+// @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/juliensadaoui/BooksOnline/commit/31daf07112775b7a7709d85b9ba7abe2e34525ab

[COMMIT MESSAGE]:Ajout de la partie gestion d'un utilisateur||
=========================================================

+// @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/revelboot/SomethingTodo2012/commit/9b7f7739e5b1e6b01f78e4248705f3be0dfae7dd

[COMMIT MESSAGE]:caly projekt||
=========================================================

+//@PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/revelboot/SomethingTodo2012/commit/9b7f7739e5b1e6b01f78e4248705f3be0dfae7dd

[COMMIT MESSAGE]:caly projekt||
=========================================================

+//@PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/revelboot/SomethingTodo2012/commit/9b7f7739e5b1e6b01f78e4248705f3be0dfae7dd

[COMMIT MESSAGE]:caly projekt||
=========================================================

+//@PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blue0sky/evans/commit/5cd8fcd2520852e1a748c299fc0b156e7e824da2

[COMMIT MESSAGE]:initial commit||
=========================================================

+// @PreAuthorize("#username == principal.username and hasRole('ROLE_USER')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_USER')")
+// @PreAuthorize("#username == principal.username and hasRole('ROLE_USER')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_USER')")
+// @PreAuthorize("#username == principal.username and hasRole('ROLE_USER')")
+ @PreAuthorize("#username == principal.username and hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=69&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/heichenhardt/SpringInAction/commit/6bbee367285990831921d0599a5415620ea8b698

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/heichenhardt/SpringInAction/commit/6bbee367285990831921d0599a5415620ea8b698

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/orangecoding/timing/commit/1d3afc00486a22eaa6cbca63b62bcf55ff343a4c

[COMMIT MESSAGE]:init||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/arun-apad/untitled8/commit/a74fcbac46865043412fe9c265fe0256051ecb55

[COMMIT MESSAGE]:all but security and exception handling||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ /* @PreAuthorize("hasAnyRole('USER')")
+ /*@PreAuthorize("hasAnyRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/32098f7b7d605724865cca53ea2b75ed39cb6880

[COMMIT MESSAGE]:Added backend implementation for getting the search result count||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/6adef5b91e3d61c2197835cf30257686478d9638

[COMMIT MESSAGE]:Work started||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/b3069e40c5b1bcca3a1a07a6befc1944756ea60e

[COMMIT MESSAGE]:First implementation||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'search')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/2f70baa7795e2999871036999cfaed0fa0d676d1

[COMMIT MESSAGE]:Added backend implementation for getting search result count for a se…||…arch term
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/f737fa3173e0cb3b52e280242b50a221c11d9387

[COMMIT MESSAGE]:Wrote backend implementation for pagination the query results of quer…||…y methods
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/1b9c84415807e744b5865da44cd28a01f18af033

[COMMIT MESSAGE]:First commit of criteria example||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/9834f234fc884660288b2edfbd7bb1dfef611060

[COMMIT MESSAGE]:Fixed the el expression||
=========================================================

- @PreAuthorize("hasPermission('Todo', 'search'")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/aa01e218ad918d97aea2f2a225cff55a2a65c7fc

[COMMIT MESSAGE]:Added search() method to TodoService interface||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'search'")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=70&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/barakawei/miwork/commit/5f7da6ec1b2a2baf612b5d72abb222504c06387c

[COMMIT MESSAGE]:init||
=========================================================

+ // @PreAuthorize("hasAuthority('add')")
+ // @PreAuthorize("#account == principal.username and hasAuthority('changePassword')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hjpcx007/springblogpro/commit/b6d617629afa0ad604fa32780530c4d787be1c14

[COMMIT MESSAGE]:commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hjpcx007/springblogpro/commit/b6d617629afa0ad604fa32780530c4d787be1c14

[COMMIT MESSAGE]:commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lianzhengkun/easyshopping/commit/cf67413132ea37afa7b5b9a85c73ab5e6d11c899

[COMMIT MESSAGE]:rebuild architecture||
=========================================================

+ @PreAuthorize("hasRole('user_mgr_add')")
+ @PreAuthorize("hasRole('user_mgr_add')")
+ @PreAuthorize("hasRole('user_mgr_update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=71&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/CONNECT-Solution/CONNECT-DirectDependencies/commit/193deef35127baae4f4ab2911031af68d8584711

[COMMIT MESSAGE]:Adding config-ui and config-service with updated POMs||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CONNECT-Solution/CONNECT-DirectDependencies/commit/193deef35127baae4f4ab2911031af68d8584711

[COMMIT MESSAGE]:Adding config-ui and config-service with updated POMs||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CONNECT-Solution/CONNECT-DirectDependencies/commit/193deef35127baae4f4ab2911031af68d8584711

[COMMIT MESSAGE]:Adding config-ui and config-service with updated POMs||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CONNECT-Solution/CONNECT-DirectDependencies/commit/193deef35127baae4f4ab2911031af68d8584711

[COMMIT MESSAGE]:Adding config-ui and config-service with updated POMs||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CONNECT-Solution/CONNECT-DirectDependencies/commit/193deef35127baae4f4ab2911031af68d8584711

[COMMIT MESSAGE]:Adding config-ui and config-service with updated POMs||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CONNECT-Solution/CONNECT-DirectDependencies/commit/193deef35127baae4f4ab2911031af68d8584711

[COMMIT MESSAGE]:Adding config-ui and config-service with updated POMs||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CONNECT-Solution/CONNECT-DirectDependencies/commit/193deef35127baae4f4ab2911031af68d8584711

[COMMIT MESSAGE]:Adding config-ui and config-service with updated POMs||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=72&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/gerrymclarnon/PlayerManagerTest/commit/b675f4bf3425cf61e3e0965c353afc2410b0882a

[COMMIT MESSAGE]:Updated on Tests||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gerrymclarnon/PlayerManagerTest/commit/743793f7467787e7a47a1948b988e7b2407835b1

[COMMIT MESSAGE]:small test change||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/06b5b0f4f98ec086f41cb2375b50b4bb5043fc7c

[COMMIT MESSAGE]:[V2S1_US15/16] : alignments data model and screen start||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/430583cc6910d9c798609e4f7221be54ad616fa4

[COMMIT MESSAGE]:[V2S3 US58618374] Sugggestions deletion + permissions check on sugges…||…tions updates

[Finishes #58618374]
=========================================================

+ @PreAuthorize("hasPermission(#suggestionViews, '0') or hasPermission(#suggestionViews, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/5952da5ce167f94f6587d5d854e17f5c5c87a539

[COMMIT MESSAGE]:[V2S3 US58618366] User interface for concept suggestions + creation p…||…opup

[Finishes #58618366]
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#suggestionViews, '0') or hasPermission(#suggestionViews, '1')")
+ @PreAuthorize("hasPermission(#suggestionViews, '0') or hasPermission(#suggestionViews, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/ee3b3209d7093e21f2e88c29fbb652d7fff48850

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on Complex Concept/Group/Array||[Finishes #US58618350]
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#splitTermView, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#element, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusArrayViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusArrayViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusConceptGroupViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusConceptGroupViewJAXBElement, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/5d22848fb676a43a9cf42b5cc57ca4b1011440df

[COMMIT MESSAGE]:[V1S6 US26] Implementation of parents for concept arrays||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/3d330d285650bd1b4e5409d68e39c7e67b3b73de

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on thesaurus screen and Thes…||…aurus/User/CustomAttribute/ThesaurusVersion objects
=========================================================

+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
- //@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, 'edit')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#versionViews, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/f0dd1d9553f8338b9b4914543e91174ec2b763c2

[COMMIT MESSAGE]:[V1S6 US37] : Custom attributes for terms and concepts.||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/b1dd75398ea0918c528b70395b0290774011e7ba

[COMMIT MESSAGE]:Sonar code review.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
- @PreAuthorize("hasPermission(#thesaurusId, '0')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/e3c8fe30de0096b2c99e9f775638608fc25144ba

[COMMIT MESSAGE]:[V2S3 US60325424] When a thesaurus is archived, the only possible act…||…ion is deletion

[Finishes #60325424]
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')&& hasPermission(#thesaurusViewJAXBElement, 'DELETION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/3d330d285650bd1b4e5409d68e39c7e67b3b73de

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on thesaurus screen and Thes…||…aurus/User/CustomAttribute/ThesaurusVersion objects
=========================================================

+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
- //@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, 'edit')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#versionViews, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/8145a7395ca8ebefcc203cd43138d6ea5b7762d3

[COMMIT MESSAGE]:[V2S2 USUS58618348] Spring security with thesaurus scoped permissions…||… prototype
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, 'edit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/2f71805e7f35831b0ce973c3dd050976a155b7e1

[COMMIT MESSAGE]:Fix Rigths management||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/ee3b3209d7093e21f2e88c29fbb652d7fff48850

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on Complex Concept/Group/Array||[Finishes #US58618350]
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#splitTermView, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#element, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusArrayViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusArrayViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusConceptGroupViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusConceptGroupViewJAXBElement, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/d7750bdc754f7c5457f1baf609713e5647a5aaea

[COMMIT MESSAGE]:UST45 Implementation of Complex Concepts (No unit test for now...)||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/ee3b3209d7093e21f2e88c29fbb652d7fff48850

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on Complex Concept/Group/Array||[Finishes #US58618350]
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#splitTermView, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#element, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusArrayViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusArrayViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusConceptGroupViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusConceptGroupViewJAXBElement, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/5952da5ce167f94f6587d5d854e17f5c5c87a539

[COMMIT MESSAGE]:[V2S3 US58618366] User interface for concept suggestions + creation p…||…opup

[Finishes #58618366]
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#suggestionViews, '0') or hasPermission(#suggestionViews, '1')")
+ @PreAuthorize("hasPermission(#suggestionViews, '0') or hasPermission(#suggestionViews, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/3d330d285650bd1b4e5409d68e39c7e67b3b73de

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on thesaurus screen and Thes…||…aurus/User/CustomAttribute/ThesaurusVersion objects
=========================================================

+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
- //@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, 'edit')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#versionViews, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/82f4bd13d2a8024a6af33ea94b9e0a24a08325b7

[COMMIT MESSAGE]:[V2S2 US58618344] Thesaurus users screen (list)||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=73&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/b1dd75398ea0918c528b70395b0290774011e7ba

[COMMIT MESSAGE]:Sonar code review.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
- @PreAuthorize("hasPermission(#thesaurusId, '0')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/ae224cff9aacd770e96b916434eb7e01b78a18bf

[COMMIT MESSAGE]:Merge branch '0018223'||Conflicts:
	ginco-admin/src/main/java/fr/mcc/ginco/rest/services/ThesaurusNoteRestService.java
=========================================================

- @PreAuthorize("hasPermission(#noteViews, '0')")
+ @PreAuthorize("hasPermission(#noteViews, '0') or hasPermission(#noteViews, '1')")
- @PreAuthorize("hasPermission(#noteViews, '0')")
+ @PreAuthorize("hasPermission(#noteViews, '0') or hasPermission(#noteViews, '1')")
- @PreAuthorize("hasPermission(#noteViews, '0')")
+ @PreAuthorize("hasPermission(#noteViews, '0') or hasPermission(#noteViews, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/ae37ded22d9486915a22535a48e0bc41f3eff9b0

[COMMIT MESSAGE]:[#0018223] Expert access to notes||
=========================================================

- @PreAuthorize("hasPermission(#noteViews, '0')")
+ @PreAuthorize("hasPermission(#noteViews, '0') or hasPermission(#noteViews, '1')")
- @PreAuthorize("hasPermission(#noteViews, '0')")
+ @PreAuthorize("hasPermission(#noteViews, '0') or hasPermission(#noteViews, '1')")
- @PreAuthorize("hasPermission(#noteViews, '0')")
+ @PreAuthorize("hasPermission(#noteViews, '0') or hasPermission(#noteViews, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/48367f6c324245e9a46389ecd36dc19a70ee5c4a

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on concept screen and Thesau…||…rusConcept/Note objects
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#conceptView, '0') or hasPermission(#conceptView, '1')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#noteViews, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#noteViews, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#noteViews, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/b1dd75398ea0918c528b70395b0290774011e7ba

[COMMIT MESSAGE]:Sonar code review.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
- @PreAuthorize("hasPermission(#thesaurusId, '0')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/3d330d285650bd1b4e5409d68e39c7e67b3b73de

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on thesaurus screen and Thes…||…aurus/User/CustomAttribute/ThesaurusVersion objects
=========================================================

+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
- //@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, 'edit')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#versionViews, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/fc80099bcf3d4a720c3726ee20b8ae22451e9a78

[COMMIT MESSAGE]:[V1S6 US11] : Not stable implementation for Role for associations.||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/e3c8fe30de0096b2c99e9f775638608fc25144ba

[COMMIT MESSAGE]:[V2S3 US60325424] When a thesaurus is archived, the only possible act…||…ion is deletion

[Finishes #60325424]
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')&& hasPermission(#thesaurusViewJAXBElement, 'DELETION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/2da0f5ffa09d934b929d58b101d8b9af736f5ee3

[COMMIT MESSAGE]:[V2S2 US58618360] Experts can create terms and orphan concepts only w…||…ith the candidate status (Server side)
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0') or hasPermission(#thesaurusId, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/d0b202a361dbe971da91f1b221e955bc5e49b9a1

[COMMIT MESSAGE]:[V1S5-US21] Button for log journal export||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/b1dd75398ea0918c528b70395b0290774011e7ba

[COMMIT MESSAGE]:Sonar code review.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
- @PreAuthorize("hasPermission(#thesaurusId, '0')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/2205136352990b1420424418b6d5de2df568e02b

[COMMIT MESSAGE]:Candidate terms can now be removed by expert||Fix https://mantis.culture.fr/mantis/view.php?id=18292
=========================================================

- @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0') or hasPermission(#thesaurusViewJAXBElement, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/2da0f5ffa09d934b929d58b101d8b9af736f5ee3

[COMMIT MESSAGE]:[V2S2 US58618360] Experts can create terms and orphan concepts only w…||…ith the candidate status (Server side)
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0') or hasPermission(#thesaurusId, '1')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/c2bf63fae453cccd01647d1df12d367994c29e19

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on Term screen and Thesaurus…||…Term object
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0') or hasPermission(#thesaurusViewJAXBElement, '1')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/d7750bdc754f7c5457f1baf609713e5647a5aaea

[COMMIT MESSAGE]:UST45 Implementation of Complex Concepts (No unit test for now...)||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/b1d952a13379780a00eaac5066358ea77649630a

[COMMIT MESSAGE]:Merge branch 'solr'||Conflicts:
	ginco-admin/src/main/java/fr/mcc/ginco/rest/services/BaseRestService.java
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/b1dd75398ea0918c528b70395b0290774011e7ba

[COMMIT MESSAGE]:Sonar code review.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
- @PreAuthorize("hasPermission(#thesaurusId, '0')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') && hasPermission(#thesaurusViewJAXBElement, 'DELETION')")
+ @PreAuthorize("hasPermission(#thesaurusId, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/3d330d285650bd1b4e5409d68e39c7e67b3b73de

[COMMIT MESSAGE]:[V2S2 US58618350] Permissions management on thesaurus screen and Thes…||…aurus/User/CustomAttribute/ThesaurusVersion objects
=========================================================

+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
+ @PreAuthorize("hasPermission(#list, '0')")
- //@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, 'edit')")
+ @PreAuthorize("hasPermission(#thesaurusViewJAXBElement, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasPermission(#thesaurusId, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#versionViews, '0')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")
+ @PreAuthorize("hasPermission(#userRoleViews, '0')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/922edc6f3beedf175d7d48770f77c1ff9278348d

[COMMIT MESSAGE]:[V1S6 US35] Revisions export||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/b1d952a13379780a00eaac5066358ea77649630a

[COMMIT MESSAGE]:Merge branch 'solr'||Conflicts:
	ginco-admin/src/main/java/fr/mcc/ginco/rest/services/BaseRestService.java
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/culturecommunication/ginco/commit/cd4cdabaea39ed0a771a90946d74d61094578ced

[COMMIT MESSAGE]:[V1S5 - US10] Server side authorizations||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=74&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/ad802aac7776ae04c2b189e3f3153f1bf5a88c3a

[COMMIT MESSAGE]:fixed rule violations and started documentation||
=========================================================

- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/bd44baf98be4a02ce30771ffbe70eeb13e69d3bc

[COMMIT MESSAGE]:UI updates||
=========================================================

+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/20abb68ec4b3e21044748a59d130f1e62523c0ee

[COMMIT MESSAGE]:ViewHelper changes & start of backbone example||
=========================================================

+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/59419dd7caf9c96dca6574d6ede9ed207e181e68

[COMMIT MESSAGE]:misc changes||
=========================================================

+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/2652b97d42653ff50911473b8a715e517c9e2d7e

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/ad802aac7776ae04c2b189e3f3153f1bf5a88c3a

[COMMIT MESSAGE]:fixed rule violations and started documentation||
=========================================================

- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")
- @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/bd44baf98be4a02ce30771ffbe70eeb13e69d3bc

[COMMIT MESSAGE]:UI updates||
=========================================================

+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=75&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jkuryla/checklist/commit/9c07f9bbc7639a007b67b6976119a782d9497a99

[COMMIT MESSAGE]:Fixed links throughout app, added initial cut of CL Groups, additiona…||…l code for view/edit CL
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/motech/motech-server-pillreminder/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/motech/motech-server-pillreminder/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Absor/wss/commit/153aea0ce9c2fd77a90c784efd23b062a5477a49

[COMMIT MESSAGE]:building main week view||
=========================================================

+ @PreAuthorize("hasRole('employer')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('employer')")
+ @PreAuthorize("hasRole('employer')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('employer')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Absor/wss/commit/7823b1e34ddf00d93cf29dd3c74bb40cf375bb04

[COMMIT MESSAGE]:finished week view, started with user view||
=========================================================

+ @PreAuthorize("hasRole('employer')")
- @PreAuthorize("hasRole('employer')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Absor/wss/commit/b0d784a643fd2d002aeebc0d33e908ef2f7cf2cc

[COMMIT MESSAGE]:working on main view||
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Absor/wss/commit/153aea0ce9c2fd77a90c784efd23b062a5477a49

[COMMIT MESSAGE]:building main week view||
=========================================================

+ @PreAuthorize("hasRole('employer')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('employer')")
+ @PreAuthorize("hasRole('employer')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('employer')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cyrilcherian/O3/commit/35c802e4a51df3c9ba0c843bab16d442a3b5b99f

[COMMIT MESSAGE]:Initial Checkin||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPERVISOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KBAKEP/photostore/commit/dc73678bc2ab08bdc86d60c90f3d026c60c2550b

[COMMIT MESSAGE]:security completed||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KBAKEP/photostore/commit/2a076e946484a6908332effa96bf726021c00090

[COMMIT MESSAGE]:init||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KBAKEP/photostore/commit/dc73678bc2ab08bdc86d60c90f3d026c60c2550b

[COMMIT MESSAGE]:security completed||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KBAKEP/photostore/commit/2a076e946484a6908332effa96bf726021c00090

[COMMIT MESSAGE]:init||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/semantico/spring-security-oauth/commit/1a6e2a94e4d25a887f904a0835f3e481cc42eec2

[COMMIT MESSAGE]:SECOAUTH-75, SECOAUTH-135: validate refactoring by adding support for…||… client credentials
=========================================================

- @PreAuthorize("oauthClientHasRole('ROLE_TRUSTED_CLIENT')")
+ @PreAuthorize("oauthClientHasRole('ROLE_CLIENT')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=76&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/erikogenvik/khelg2013.1_rockpaperscissors/commit/eab96c7b54e41225d984971c8894e89882d7bd57

[COMMIT MESSAGE]:Added web.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('secret')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hanskarlsson/stensaxpase/commit/50dff2ae6aa24f7177f7a69ed4bef24367862929

[COMMIT MESSAGE]:new version||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('secret')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USM-RCG/motech-server-icappr/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USM-RCG/motech-server-icappr/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JohnathanMarkSmith/SpringWithDojo/commit/275225c423e642c78fbf971b3ebeb520a4b08af9

[COMMIT MESSAGE]:reinitialized||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kolorobot/spring-mvc-icm-demo/commit/09df4eaadf15a4a7523817f0dc624cbbf3ba8524

[COMMIT MESSAGE]:CSV and XML exports in dashboard||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ // @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kolorobot/spring-mvc-icm-demo/commit/a447b6c387a8d1c633837299c886def48c23ead5

[COMMIT MESSAGE]:Admin panel: dashboard stub. Prepared queries for it.||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kolorobot/spring-mvc-icm-demo/commit/09df4eaadf15a4a7523817f0dc624cbbf3ba8524

[COMMIT MESSAGE]:CSV and XML exports in dashboard||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ // @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=77&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/alexkazakov/spring-security/commit/c21c77d8bf53e7393704a018e285a3fcc5110be9

[COMMIT MESSAGE]:i18n completed||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/IndiCrowd/was.indicrowd.com/commit/ba80c963a9fc5e4586005415a789e1eec7ff04a8

[COMMIT MESSAGE]:update band home video||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#bandId, 'isBand')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/IndiCrowd/was.indicrowd.com/commit/bf06426ffaf6bf06a8c5d6b2b21ca74f2190859c

[COMMIT MESSAGE]:사용자 인가(Authentication)기능 추가||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#bandId, 'isBand')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#bandId, 'isBand')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#postId, 'isBandPost')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#postId, 'isBandPost')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#postId, 'isBandPost')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#commentId, 'isBandComment')")
+ @PreAuthorize("hasRole('ROLE_USER') and hasPermission(#commentId, 'isBandComment')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yakudza/code/commit/116dd3cdcf885693f09005e762734f010390cf0a

[COMMIT MESSAGE]:1||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yakudza/code/commit/116dd3cdcf885693f09005e762734f010390cf0a

[COMMIT MESSAGE]:1||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/loicortola/training-computer-database-project/commit/7dc14c29742ad19f3462ade84c23111d658a1925

[COMMIT MESSAGE]:New refactoring||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasAuthority('ROLE_BASIC')")
+ @PreAuthorize("hasAuthority('ROLE_BASIC')")
+ @PreAuthorize("hasAuthority('ROLE_BASIC')")
+ @PreAuthorize("hasAuthority('ROLE_BASIC')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=78&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/antoinecarton/play/commit/9c35994d4fa274dac0465d846cf0b84c973bcdd0

[COMMIT MESSAGE]:Modification annotations sécurisation||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/antoinecarton/play/commit/800ad6d2688eb51334ada7665a836ba034b49bfc

[COMMIT MESSAGE]:Ajout d'annotations pour sécuriser les services||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jowin1992/HHA1/commit/c10609af8b116e389e827d4e742a93fa3d9d1fbd

[COMMIT MESSAGE]:Version 0.96||First version of the HH project
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Nazarenko/InternetBanking/commit/65629dc0f607549f55aaf0840cbc62f4e4975290

[COMMIT MESSAGE]:security test||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ganesan-sree/spring/commit/984c7172192043b530f21727bc5422b2e1f40d23

[COMMIT MESSAGE]:spring acl||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ganesan-sree/spring/commit/984c7172192043b530f21727bc5422b2e1f40d23

[COMMIT MESSAGE]:spring acl||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ganesan-sree/spring/commit/984c7172192043b530f21727bc5422b2e1f40d23

[COMMIT MESSAGE]:spring acl||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/e1edb9fd0b823d1727d36a3a25e3579659f6911d

[COMMIT MESSAGE]:s6-v1||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.username == #username")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.id == #id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/ddf2e91c4fc1e591880ca365400eed2e89619920

[COMMIT MESSAGE]:s6-v2||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.username == #username")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.id == #id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/908e47eab3a79947231a81c553829c4192bb26e0

[COMMIT MESSAGE]:s6-v3||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.username == #username")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.id == #id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=79&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/f6f957df8b192716e4527cf4ca63fdc5cfebed43

[COMMIT MESSAGE]:s5-v3||
=========================================================

+ // @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security-javaconfig/commit/a3e55050bf2e42b4535b15817d356ff7ef8c5459

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#oauth2.clientHasRole('ROLE_CLIENT')")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#object,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security-javaconfig/commit/a3e55050bf2e42b4535b15817d356ff7ef8c5459

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#oauth2.clientHasRole('ROLE_CLIENT')")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#object,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/btpka3/btpka3.github.com/commit/de177fda6ace536ad0d61d788636ec2bfed441fc

[COMMIT MESSAGE]:copy Spring Security ACL samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
+ @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('XROLE_READ_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/btpka3/btpka3.github.com/commit/de177fda6ace536ad0d61d788636ec2bfed441fc

[COMMIT MESSAGE]:copy Spring Security ACL samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
+ @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('XROLE_READ_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/btpka3/btpka3.github.com/commit/fdbf97972c6656e2f8e7596df4d67c0967d7c2da

[COMMIT MESSAGE]:d||
=========================================================

- @PreAuthorize("hasRole('ROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
+ @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
- @PreAuthorize("hasRole('ROLE_READ_STAFF')")
+ @PreAuthorize("hasRole('XROLE_READ_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/btpka3/btpka3.github.com/commit/f48d2c74145ce76bfa9570b516482e2664349e5e

[COMMIT MESSAGE]:d||
=========================================================

+ @PreAuthorize("hasRole('ROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
+ @PreAuthorize("hasRole('ROLE_READ_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irelandKen/anji-ceva/commit/7a6002857b157fde2d5f73ec40bb9a818892d1e5

[COMMIT MESSAGE]:First||
=========================================================

+ //@PreAuthorize("hasAuthority('AUTH_deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/markus-wi/springApplication/commit/f1bb699514a64ea31aa3a0ba5008f8797b3d5bc9

[COMMIT MESSAGE]:implemented spring security authentication||
=========================================================

- //@PreAuthorize("@templateSecurityService.hasPermission('test12')")
+ @PreAuthorize("@templateSecurityService.hasPermission('test12')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/markus-wi/springApplication/commit/ac57c5bffd6b395f352e9c2aa38a43a9b4ecf929

[COMMIT MESSAGE]:implementing parent child structure between functions||
=========================================================

+ //@PreAuthorize("@templateSecurityService.hasPermission('test12')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bruceMacLeod/motech-server-pillreminder-0.18/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=80&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bruceMacLeod/motech-server-pillreminder-0.18/commit/987f1d8eca3585991b3c2b308dda30caeee9115b

[COMMIT MESSAGE]:akula| #554| rest api for sending sms||Change-Id: I96ca16ae67e8f7db9fa529a39a6a5bfc0aea8581
=========================================================

+ @PreAuthorize("hasRole('smsSend')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bruceMacLeod/motech-server-pillreminder-0.18/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/johncook59/zarg-bank/commit/fbd4b90d86d31b632bb2e622f68bc89f80f8b731

[COMMIT MESSAGE]:Refactored all back back-end modules to one module||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_CUSTOMER_MANAGER')")
+ @PreAuthorize("hasRole('ROLE_CUSTOMER_MANAGER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/johncook59/zarg-bank/commit/fbd4b90d86d31b632bb2e622f68bc89f80f8b731

[COMMIT MESSAGE]:Refactored all back back-end modules to one module||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_CUSTOMER_MANAGER')")
+ @PreAuthorize("hasRole('ROLE_CUSTOMER_MANAGER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/johncook59/zarg-bank/commit/fbd4b90d86d31b632bb2e622f68bc89f80f8b731

[COMMIT MESSAGE]:Refactored all back back-end modules to one module||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_CUSTOMER_MANAGER')")
+ @PreAuthorize("hasRole('ROLE_CUSTOMER_MANAGER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")
+ @PreAuthorize("hasRole('ROLE_CLIENT_SELF_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gerrymclarnon/PlayerManager-Retired-Trialist/commit/d6b479d2b19d8afcf60e874a8a900e775f299279

[COMMIT MESSAGE]:Initial commit.||
=========================================================

+ @PreAuthorize("hasPermission(#club, 'READ')")
+// @PreAuthorize("hasPermission(#arg0, 'net.playermanager.games.model.Player', 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gerrymclarnon/PlayerManager-Retired-Trialist/commit/d6b479d2b19d8afcf60e874a8a900e775f299279

[COMMIT MESSAGE]:Initial commit.||
=========================================================

+ @PreAuthorize("hasPermission(#club, 'READ')")
+// @PreAuthorize("hasPermission(#arg0, 'net.playermanager.games.model.Player', 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mmpereira/spring-api/commit/fd69d240b63bcbabf91c0f03d4e2116e085784d8

[COMMIT MESSAGE]:adding annotations for security||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasIpAddress('10.2.2.96')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kcomkar/betterbrowsers/commit/900be9af62be45a809e46f0a13a4ef279ba85875

[COMMIT MESSAGE]:Metadata for GIT repo is added||Added two files.... One of them is .gitignore file
=========================================================

- @PreAuthorize("hasRole('ROLE_SAP_DCM_ILM_DELETE')")
+ @PreAuthorize("hasRole('ROLE_SAP_DCM_ILM_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kcomkar/betterbrowsers/commit/5508dd4c5e3c6353dcef78bd913e3ee4a7c56d17

[COMMIT MESSAGE]:Initial revision||Change-Id: I3890a48c251674a907c5a1a36b00c663b4ceaea3
=========================================================

+ @PreAuthorize("hasRole('ROLE_SAP_DCM_ILM_DELETE')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=81&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/rrajendran/spring-security-demo/commit/f7a6858a009cc9c52da41f89ad4e9aca2d1e02bb

[COMMIT MESSAGE]:Refactoring done||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrgimo/mixtape-webapp/commit/8345450da9662344435ae02209f87714110d110f

[COMMIT MESSAGE]:some major changes and bugfixes in whole webapp||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrgimo/mixtape-webapp/commit/ae6a9335ff69debeec721b7c482670c4b2696c67

[COMMIT MESSAGE]:very basic playlist play-functionality||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrgimo/mixtape-webapp/commit/ae6a9335ff69debeec721b7c482670c4b2696c67

[COMMIT MESSAGE]:very basic playlist play-functionality||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrgimo/mixtape-webapp/commit/8345450da9662344435ae02209f87714110d110f

[COMMIT MESSAGE]:some major changes and bugfixes in whole webapp||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/asmirnova/MovieStation/commit/fc35f0ad1b7c21964a680bae5ee4c22fbbade160

[COMMIT MESSAGE]:Add raw implementation||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=82&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/393f54ed1c94c177d6381cf1b91962f303b82707

[COMMIT MESSAGE]:Spring In Action created.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/393f54ed1c94c177d6381cf1b91962f303b82707

[COMMIT MESSAGE]:Spring In Action created.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/e9fd0a9ecf7f447eb9e1fc76877391f7608d68ad

[COMMIT MESSAGE]:Pro Spring MVC||
=========================================================

+ @PreAuthorize("hasRole('PERM_ADD_BOOKS')")
+ @PreAuthorize("hasRole('PERM_ADD_CATEGORIES')")
+ @PreAuthorize("hasRole('PERM_ADD_BOOKS')")
+ @PreAuthorize("hasRole('PERM_ADD_CATEGORIES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/e9fd0a9ecf7f447eb9e1fc76877391f7608d68ad

[COMMIT MESSAGE]:Pro Spring MVC||
=========================================================

+ @PreAuthorize("hasRole('PERM_ADD_BOOKS')")
+ @PreAuthorize("hasRole('PERM_ADD_CATEGORIES')")
+ @PreAuthorize("hasRole('PERM_ADD_BOOKS')")
+ @PreAuthorize("hasRole('PERM_ADD_CATEGORIES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/antonyraj/SpringSecurityPreAuthorize/commit/48d08f3031b60435504d20eeae62b8d9a649edc6

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') OR hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/VGlushchenko/TransactionService/commit/15938787658e78430fb58e4ddbb1f77bf3a37aba

[COMMIT MESSAGE]:Added Quartz||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tavenli/URACS/commit/5ea7b1e5f482ad71735811999d13075d34aee4e8

[COMMIT MESSAGE]:Signed-off-by: Taven <lixyvip@qq.com>||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/shamim-ahmed/spring-demo/commit/592dde8b3f63c786489ead4aa113297fe6e2e682

[COMMIT MESSAGE]:added a new project to demonstrate how to implement a custom permissi…||…on evaluator
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(hasRole('ROLE_USER') and #message.content.length() <= 50) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shamim-ahmed/spring-demo/commit/3ae239e3b45a5905d2c58b0b76e2d99735c9835d

[COMMIT MESSAGE]:now the restriction on the message length is imposed correctly||
=========================================================

- @PreAuthorize("(hasRole('ROLE_USER') and message.content.length <= 50) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(hasRole('ROLE_USER') and #message.content.length() <= 50) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shamim-ahmed/spring-demo/commit/4a8687af6ff756386e4c5d35bb31d24058818877

[COMMIT MESSAGE]:added restriction retrieving and adding messages using pre-post annot…||…ations
=========================================================

+ @PreAuthorize("(hasRole('ROLE_USER') and message.content.length <= 50) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shamim-ahmed/spring-demo/commit/9533b52483b5de02a24c27270a28d680c61a3c5f

[COMMIT MESSAGE]:moved the @PreAuthorized annotation from controller to service class||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=83&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tomekl007/spitterMVCplusHibernate/commit/0bac83428d85ca0e8c4e7d474bdcd0b4735f1805

[COMMIT MESSAGE]:add RESTfull services||
=========================================================

- @PreAuthorize("(hasRole('ROLE_SPITTER') and #spittle.text.length()<=140) " +
+ //@PreAuthorize("(hasRole('ROLE_SPITTER') and #spittle.text.length()<=140) " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/tomekl007/spitterMVCplusHibernate/commit/56eaf6be846c07a276af1d021b26caa3922a22af

[COMMIT MESSAGE]:add custom login, using plain Text, DB, or ldap||
=========================================================

+ @PreAuthorize("(hasRole('ROLE_SPITTER') and #spittle.text.length()<=140) " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/alanhay/spring-service-bootstrap/commit/b723644f1acc1d7318b5532d8a11bdaa77656eb8

[COMMIT MESSAGE]:Updated user service.||
=========================================================

+ @PreAuthorize("#id == authentication.principal.id or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/team-herring/herring-manager/commit/cbd3931e87b6d625f741d3c34d6e525743f3d842

[COMMIT MESSAGE]:유저 관리 코드 및 페이지 추가.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/team-herring/herring-manager/commit/4e242a5ea7f9549989c520988d37106f26c2a6db

[COMMIT MESSAGE]:Annotation 기반 권한 설정 코드 및 권한 거부 에러 페이지 추가.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/team-herring/herring-manager/commit/e1bdbed2be2da5677905830a1868e0541d69b073

[COMMIT MESSAGE]:Authentication 기본 구현 완료 및 Spring Security 설정 추가.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/robhinds/make-social/commit/ad285a62902d0bf88421f578767f908cac38709c

[COMMIT MESSAGE]:exception mapping||mapping exceptions to placeholder error pages. Added preauthorize error
to POST method on timeline.
=========================================================

+ @PreAuthorize("isAuthenticated()" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/9feb444af389c408d28b7cee976d90400cd99fe8

[COMMIT MESSAGE]:Change URL and add administration view||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/5faa81e8fc4dd69e56657608ba044202d77a89bd

[COMMIT MESSAGE]:clean project||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/b33050f6fa9054f85450f58cac90b9b6523cc1eb

[COMMIT MESSAGE]:modify create article||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/7ed3cd8ea909e438e66ea1d8f28ae7b1016c4578

[COMMIT MESSAGE]:configuration spring security||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/2ffe15ec8e2a8f6b4a03b998e503899bc0ebd71b

[COMMIT MESSAGE]:add authentification module||Add spring security and mvc auteur
=========================================================

+// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/5faa81e8fc4dd69e56657608ba044202d77a89bd

[COMMIT MESSAGE]:clean project||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/b33050f6fa9054f85450f58cac90b9b6523cc1eb

[COMMIT MESSAGE]:modify create article||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/7ed3cd8ea909e438e66ea1d8f28ae7b1016c4578

[COMMIT MESSAGE]:configuration spring security||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/2ffe15ec8e2a8f6b4a03b998e503899bc0ebd71b

[COMMIT MESSAGE]:add authentification module||Add spring security and mvc auteur
=========================================================

+// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/5faa81e8fc4dd69e56657608ba044202d77a89bd

[COMMIT MESSAGE]:clean project||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/1c0d861bc0334ef40cd3cb4e75502f2b23f3537d

[COMMIT MESSAGE]:create view update article and create comment system||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/7ed3cd8ea909e438e66ea1d8f28ae7b1016c4578

[COMMIT MESSAGE]:configuration spring security||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/2ffe15ec8e2a8f6b4a03b998e503899bc0ebd71b

[COMMIT MESSAGE]:add authentification module||Add spring security and mvc auteur
=========================================================

+// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/1c0d861bc0334ef40cd3cb4e75502f2b23f3537d

[COMMIT MESSAGE]:create view update article and create comment system||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymatagne/blog_java/commit/2ffe15ec8e2a8f6b4a03b998e503899bc0ebd71b

[COMMIT MESSAGE]:add authentification module||Add spring security and mvc auteur
=========================================================

+// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=84&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/695be89f4e6dbf3caf71397eb8a02ea63d9090e8

[COMMIT MESSAGE]:fixed #53||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole('ROLE_USER') and hasPermission(#task.id, 'isTaskAssigneeOrCreator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/a54595de69835ec69c74b485c8c35dbb2cf5eb56

[COMMIT MESSAGE]:fixed #53||
=========================================================

- @PreAuthorize("isAuthenticated() and hasPermission(#task.id, 'isTaskAssignee')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/21f5025b4efb59672ee97f5db8a4c560cdb2b827

[COMMIT MESSAGE]:code cleanup||
=========================================================

- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/fc98aee61c64c1f0c2ee8c406baaf5d14d80424c

[COMMIT MESSAGE]:fixed #17 - implemented extended security||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isAssigneeOnTask')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#task.id, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspace.id, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/fc98aee61c64c1f0c2ee8c406baaf5d14d80424c

[COMMIT MESSAGE]:fixed #17 - implemented extended security||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isAssigneeOnTask')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#task.id, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspace.id, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/17548586a3cab168d97ac900f858ff67912d8d3f

[COMMIT MESSAGE]:added extended security #17||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isAssigneeOnTask')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/21f5025b4efb59672ee97f5db8a4c560cdb2b827

[COMMIT MESSAGE]:code cleanup||
=========================================================

- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/fc98aee61c64c1f0c2ee8c406baaf5d14d80424c

[COMMIT MESSAGE]:fixed #17 - implemented extended security||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isAssigneeOnTask')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#task.id, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspace.id, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sharetask/sharetask/commit/fc98aee61c64c1f0c2ee8c406baaf5d14d80424c

[COMMIT MESSAGE]:fixed #17 - implemented extended security||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
- @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isAssigneeOnTask')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceMemberOrOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#task.id, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#taskId, 'isTaskAssignee')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspace.id, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")
+ @PreAuthorize("isAuthenticated() and hasPermission(#workspaceId, 'isWorkspaceOwner')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Fruzenshtein/YourCart/commit/27a65ef95780ca1dfdd2941edef8543e5ca47edb

[COMMIT MESSAGE]:Security: Grained controll||First push of Spring Security grained controll
Need to be updated and tested in the future
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("#shopDTO.ownerId == principal.id")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #userDetails.id == principal.id")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("#user.id == principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Fruzenshtein/YourCart/commit/27a65ef95780ca1dfdd2941edef8543e5ca47edb

[COMMIT MESSAGE]:Security: Grained controll||First push of Spring Security grained controll
Need to be updated and tested in the future
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("#shopDTO.ownerId == principal.id")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #userDetails.id == principal.id")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("#user.id == principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Fruzenshtein/YourCart/commit/27a65ef95780ca1dfdd2941edef8543e5ca47edb

[COMMIT MESSAGE]:Security: Grained controll||First push of Spring Security grained controll
Need to be updated and tested in the future
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("#shopDTO.ownerId == principal.id")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #userDetails.id == principal.id")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("#user.id == principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcgray/TODOShare/commit/9a80dc9681af0a13493bd5e450bec129c1032d06

[COMMIT MESSAGE]:Solr, Predicates, UI polish||
=========================================================

+ @PreAuthorize("#toDoForm.ownerId == authentication.principal.toDoShareAccount.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcgray/TODOShare/commit/34ebf500ec1236838323c0c88e414411cab06fd3

[COMMIT MESSAGE]:Demo changes second part||
=========================================================

+ @PreAuthorize("#toDoForm.ownerId == authentication.principal.toDoShareAccount.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcgray/TODOShare/commit/1da3dde877e36565baeef3c173f6f12b4213f696

[COMMIT MESSAGE]:CRUD for ToDo||
=========================================================

+ @PreAuthorize("#toDoForm.ownerId == authentication.principal.toDoShareAccount.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcgray/TODOShare/commit/9a80dc9681af0a13493bd5e450bec129c1032d06

[COMMIT MESSAGE]:Solr, Predicates, UI polish||
=========================================================

+ @PreAuthorize("#toDoForm.ownerId == authentication.principal.toDoShareAccount.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcgray/TODOShare/commit/34ebf500ec1236838323c0c88e414411cab06fd3

[COMMIT MESSAGE]:Demo changes second part||
=========================================================

+ @PreAuthorize("#toDoForm.ownerId == authentication.principal.toDoShareAccount.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lordmarkm/BlackMarket/commit/bdded94edf4b2b29b39e9e12c12361b7af8a1b2e

[COMMIT MESSAGE]:wat||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/metadata-stores/commit/0b0571c93a67bfbeff011cfec159a75164201b81

[COMMIT MESSAGE]:Updates with improvements and permissions for the search service.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shashir87/payslip-gen-app/commit/59cb518bfcd39624f927183070bcec33642975d5

[COMMIT MESSAGE]:Initial Commit.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPERADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=asc&p=85&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

