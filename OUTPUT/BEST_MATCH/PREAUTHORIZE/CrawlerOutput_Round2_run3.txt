
=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-from-the-trenches/commit/88d503090dc568f1a151c7ba5229c2d5835d5e30

[COMMIT MESSAGE]:Moved @PreAuthorize annotation to the MessageService interface.||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-from-the-trenches/commit/3d38ec8fb515327f50a424287c6abc86ef83ef22

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-from-the-trenches/commit/88d503090dc568f1a151c7ba5229c2d5835d5e30

[COMMIT MESSAGE]:Moved @PreAuthorize annotation to the MessageService interface.||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-from-the-trenches/commit/3d38ec8fb515327f50a424287c6abc86ef83ef22

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fightteam/leeln-service/commit/0b87651e0393f42caa5e0aba9184cf2f290a6a14

[COMMIT MESSAGE]:prepare next version||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shumic/spring-finance-manager/commit/d40f9713717c9c6a45336ea7fc4a54e2195f13ab

[COMMIT MESSAGE]:Upgrading to Spring Framework 3.0.0.M3, Spring Web Flow 2.0.7.RELEASE||Initial commit for integration of Spring Security 3.0.0.M1.
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yeyan/spring-test/commit/acae29aa99388d169bfaa2ae868e285358a4e9a4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasPermission(#username, 'isAdmin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=27&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JonJon240/CustomerSupport/commit/5a7bce54ce7d9a9020d10bf117a9c3b072f00f12

[COMMIT MESSAGE]:Setup a working Project Structure. Basic Login Authentication and Signup||features exist.
=========================================================

+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKET')")
+ @PreAuthorize("#ticket.id == 0 and hasAuthority('CREATE_TICKET')")
+ @PreAuthorize("(authentication.principal.equals(#ticket.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_TICKET')")
+ @PreAuthorize("hasAuthority('VIEW_COMMENTS')")
+ @PreAuthorize("#comment.id == 0 and hasAuthority('CREATE_COMMENT')")
+ @PreAuthorize("(authentication.principal.equals(#comment.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_COMMENT')")
+ @PreAuthorize("hasAuthority('VIEW_ATTACHMENT')")
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#message.user) and " +
+ @PreAuthorize("hasAuthority('VIEW_CHAT_REQUESTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/a6c94188a1dd98c996eef4eb798c75c6a72c2ee3

[COMMIT MESSAGE]:3시46분||
=========================================================

+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/7f6ef7f39fd8a45024d33c9ebe0365c8e7523217

[COMMIT MESSAGE]:hyosang1차||
=========================================================

+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/eb5b021735d0f9192c13f54c89aae7ae1beffca2

[COMMIT MESSAGE]:Merge remote-tracking branch 'origin/hy'||Conflicts:
	HACO_System/.settings/org.eclipse.jdt.core.prefs
	HACO_System/.settings/org.eclipse.wst.common.component
	HACO_System/.settings/org.springframework.ide.eclipse.core.prefs
	HACO_System/pom.xml
	HACO_System/src/main/java/kr/co/haco/Controller/ManagementController.java
	HACO_System/src/main/java/kr/co/haco/VO/OpenCourse.java
	HACO_System/src/main/webapp/WEB-INF/views/homepage/commonScript.jsp
	HACO_System/src/main/webapp/WEB-INF/views/login.jsp
	HACO_System/src/main/webapp/WEB-INF/web.xml
=========================================================

+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/92325a7261ffaa5cb67164605fb84bb9da36e72e

[COMMIT MESSAGE]:hyo!||
=========================================================

+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=28&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/9550dcd244a2bbc8c683962cd47aae51315406ef

[COMMIT MESSAGE]:Lisätty käyttäjäpreferenssit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/1543549fa879a48fd818aed9da3a98cf5786987c

[COMMIT MESSAGE]:Käyttäjän omien projektien refactorointi. Käyttäjäprofiili perustepro…||…jekti yhteys poistettu. Perusopetuksen opetussuunnitelman perusteen perusteprojektin luonnin bugi fixejä.
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#k.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("hasPermission(null, 'perusteprojekti', 'LUONTI')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'TILANVAIHTO')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/097f88295918d3fffffce33e2cb3d5d4ca938e1c

[COMMIT MESSAGE]:Backend-tuki suosikkien päivittämiseen||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/5e14ae63b3327f2c2e26f25eb1095fc534476d5f

[COMMIT MESSAGE]:oikeuksien tarkistelu||
=========================================================

- @PreAuthorize("hasPermission(#dto.perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/e845921532bcd1f09a9422e24a8c8e295421c720

[COMMIT MESSAGE]:Dokumenttien generoinnin auktorisointi.||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#dto.perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#dto.perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#dto.perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#k.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("hasPermission(null, 'perusteprojekti', 'LUONTI')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'TILANVAIHTO')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/84243ae649c33981ba5670b6aebf01e859c150e3

[COMMIT MESSAGE]:PDF-dokumentit tallennetaan kantaan||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/c53d6bd143b7774c67a449e358165145acf8ecc7

[COMMIT MESSAGE]:After many days I finally have the authorization done.||Seriously, it was all because I had my business services in the
servlet XML file instead of the application context files. ****.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/709c5118f64eb05e89af5e26df295928d7bf739b

[COMMIT MESSAGE]:Still hard at work. Adding in access controls.||Right now the whole salted password is throwing me for a loop. Will
look at it when I come back to this.
=========================================================

+ @PreAuthorize("hasPermission(#lab, admin)")
+ @PreAuthorize("hasPermission(#lab, admin)")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasPermission(#labId, 'jpl.simle.domain.Lab', admin)")
+ @PreAuthorize("hasPermission(#lab, admin)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/279acdba1adbd5c940bbb83a95e425ff0449f695

[COMMIT MESSAGE]:Added user editor and associated unit tests.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mglazer/sIMLE/commit/62e106d4d732cdfc3593e82168b9ffdbd69995dc

[COMMIT MESSAGE]:Added in group authentication.||Switched to spring security 3.0 because of its awesome PreAuthorize annotation.

Renamed DAO classes to Service classes, because that's what they were. Pushed
domain specific logic into the domain classes and extracted the service
interfaces.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_GROUP_ADMIN'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/indvamshi/DealsMessanger-Backend/commit/9aa325eff9b276c7b228d261efcfef160c9a7fe5

[COMMIT MESSAGE]:adding security feature||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_MERCHANT')")
+@PreAuthorize("hasRole('ROLE_MERCHANT')")
+@PreAuthorize("hasRole('ROLE_SUPERADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bruceMacLeod/motech-server-pillreminder-0.18/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/motech/motech-server-pillreminder/commit/08209b0b19dc57987d5222e1b8091b5f5e855e06

[COMMIT MESSAGE]:llewczynski | #448 | Process spring security annotations in motech mo…||…dules:

* Fixed problem with starting core bundles before non-core bundles
* Enabled spring security annotations in modules
* Added example security annotations to admin module
* Disabled security annotations in admin mode

Change-Id: Ie14e6fbdf9eb2339460c0c7f7e8ca5cea1dacc23
=========================================================

+ @PreAuthorize("hasRole('manageBundles')")
+ @PreAuthorize("hasRole('stopBundle')")
+ @PreAuthorize("hasRole('startBundle')")
+ @PreAuthorize("hasRole('startBundle') and hasRole('stopBundle')")
+ @PreAuthorize("hasRole('uninstallBundle')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
+ @PreAuthorize("hasRole('manageBundles') and hasRole('bundleDetails')")
+ @PreAuthorize("hasAnyRole('manageBundles', 'installBundle')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('addUser')")
+ @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('activateUser')")
+ @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('editUser')")
+ @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('manageUser')")
+ @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('deleteUser')")
+ @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/70ad6cef0a72877555c358b227238e33ebaf14b9

[COMMIT MESSAGE]:MIFOS-4385: service facade for adding note to personnel||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/ddde14e5a10f245a2b283ae9142d47996c6a177a

[COMMIT MESSAGE]:MIFOS-4190: add services facades around customer search action||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/050e14cea6a62061358382bd41d0297cff93a450

[COMMIT MESSAGE]:MIFOS-4190: add service facades for retrieving change logs for center||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/14b3a182ee4555dea803bbe2e699130d95cfbeb5

[COMMIT MESSAGE]:MIFOS-4190: add service facades around reverting last payment of char…||…ges.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/697ff2717bd2841d871614699eed46ad0de92a4c

[COMMIT MESSAGE]:MIFOS-4190: add service facades around viewing waiving overdue charge…||…s and removing fees for customer accounts. remove unused imports warnings using eclipse quick fix
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/132c873e39966ababe1a445040ebe7005d184036

[COMMIT MESSAGE]:MIFOS-4190: add service facades around viewing transaction history, r…||…ecent activity and waiving charges on customer accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/cb86405a493a22a8a1b7109395439958c8839b72

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer notes action.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/40b8c6aebb22e1a80fe4934780edf0748a1dcc37

[COMMIT MESSAGE]:MIFOS-4190: add service facade around viewing recent activity for cus…||…tomer accounts
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/51af4d6978ca61a72e668050399e4a700fb893ca

[COMMIT MESSAGE]:MIFOS-4190: service facade for edit customer status||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/ebbe0390c110fc0f3cc9e33204652d929f41c9cb

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests. refactor dto belonging to c…||…enter get details.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/6fb66c1f7fe16264083e535d705c842a2aaeb068

[COMMIT MESSAGE]:MIFOS-4190: refactor dtos to serviceInterfaces package and add spring…||… security for centerServiceFacade
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=29&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/68a33628497114c3144ea80a64ce115bddf81c49

[COMMIT MESSAGE]:FIXED MIFOS-5450: Added permissions to create and edit penalties||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8dd34594407d63a4e910039b413ae1739d00cd4a

[COMMIT MESSAGE]:FIXED MIFOS-5382: added necessary classes and views, created tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/801248301e59ea06c9e7204c43a00a9bbef3aa95

[COMMIT MESSAGE]:MIFOS-5915: Added possibility to attach files to Loan details page||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4e4de8be546845ffcef3312eef544b413146baa0

[COMMIT MESSAGE]:MIFOS-5739: Added file storage logic||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/1a9818c834e07a8a072b2149f7244763ec34a4f2

[COMMIT MESSAGE]:MIFOS-5447 Some properties from config file are not displayed on 'Vie…||…w Organization Settings' page
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/805207a2ca46b04c943cc49a131211cb1a1e1c14

[COMMIT MESSAGE]:Search and replace tabs with 4 spaces in java file||
=========================================================

-@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c96338152c247213573e85120bec795efac8b585

[COMMIT MESSAGE]:Displaying plugin's private settings on admin page.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/770e3d54e1ec2214224336a9ff043bd4d8667d3e

[COMMIT MESSAGE]:FIXED MIFOS-3368: remove permission around view ogranisation settings||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bcc0e5d46f77ae920a8bd0c3c84ad3057c5f222d

[COMMIT MESSAGE]:MIFOS-3046: remove struts configuration for system information and la…||…teness and dormancy
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
- @PreAuthorize("hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
- @PreAuthorize("hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c3368da02db18eff5178687867044ec61928cf16

[COMMIT MESSAGE]:MIFOS-3046: support authorization of viewing system info and organiza…||…tional settings using spring securities expression-based access control.
=========================================================

+ @PreAuthorize("hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("hasAnyRole('ROLE_VIEW_SYSTEM_INFO', 'ROLE_VIEW_ORGANIZATION_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ad12075f8d22cc478eb913a74951427b7c14afe1

[COMMIT MESSAGE]:MIFOS-5663 add new permission to import loans and savings, work on ac…||…ceptance test
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b0604ba304febc4ed1ee5251e47bdf99d708fbb0

[COMMIT MESSAGE]:MIFOS-5663 create a prototype of imports savings||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/47c011be0c607ec651cf8267586e665a815c0f3d

[COMMIT MESSAGE]:MIFOS-5662: Add the possibility to import new Loans data.||Prototype for importing loan accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-state-securing-restful-apis/commit/d76e602641224b980bfec36dfbb5618605831da7

[COMMIT MESSAGE]:initial||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+@PreAuthorize("denyAll")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-state-securing-restful-apis/commit/d76e602641224b980bfec36dfbb5618605831da7

[COMMIT MESSAGE]:initial||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+@PreAuthorize("denyAll")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=30&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/e0e075f1ae584fa2e2f832c4eb3b7e9efe35e70c

[COMMIT MESSAGE]:Fixes to multiple issues including indexing study errors and binder p…||…ages with study (requires reindexing said study) and moving parts of error to separate json files.
=========================================================

- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8a29cc5bce5afc545e487f5d51929e2cdbede7df

[COMMIT MESSAGE]:Moved prev/next commands to RevisionController and unified them to 'a…||…djacent' request. Moved json-export to RevisionController and made it into an ajax call similar to DDI-export. Moved DDI export and import to StudyController. Removed GeneralService since all methods were either removed or moved elsewhere.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_IMPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_IMPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/6d2a59cba0e0146629654e88eca11221bc49d03a

[COMMIT MESSAGE]:Edit and search improvements mainly.||
=========================================================

+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working

=========================================================
[CODE-CHANGE-URL]:https://github.com/TuukkaP/springtyovuoro/commit/bea0c9421d87577571bafcfdfe345ab0484a82a8

[COMMIT MESSAGE]:Vuorojen vahvistus lisatty seka vuorokasittelija rooli||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("authentication or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TuukkaP/springtyovuoro/commit/9667c264e0d4c4b8c60ef775e47a5a6df51bc7ce

[COMMIT MESSAGE]:Spring security ja roolitukset||
=========================================================

- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("authentication or hasRole('ROLE_ADMIN') or #username == authentication.name")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("authentication or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("hasRole('ROLE_ADMIN') or #user.username == authentication.name")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN') or #user.username == authentication.name")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("authentication or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TuukkaP/springtyovuoro/commit/f00d9cd7ccda1d99fd247f270416736563ea5dd0

[COMMIT MESSAGE]:Spring security ja ToDo||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("#contact.name == authentication.name")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/altfatterz/authorize/commit/16a5684afab9c739ee81cb603199a565e4e593c7

[COMMIT MESSAGE]:change related to application context and configuration||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camposer/curso_spring-security/commit/3d3426736f6703b854b9ba74991e5f2a9aab0c0a

[COMMIT MESSAGE]:Refactorización de todoweb con Java Config (no funciona el login, no …||…disponible j_security_check)
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/012685824/WepaHt2013/commit/a5e65ef7a82f65b3b41da0f29bbb983587cb21a5

[COMMIT MESSAGE]:uusi||
=========================================================

+ //@PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasAnyRole('nsa','admin')")
+ @PreAuthorize("hasAnyRole('nsa','admin')")
+ @PreAuthorize("hasAnyRole('nsa','admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=31&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/officiallysingh/homework/commit/430ea13309de2946a1e04e0050f37d074d0bf651

[COMMIT MESSAGE]:adding spring template projects||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/altfatterz/authorize/commit/16a5684afab9c739ee81cb603199a565e4e593c7

[COMMIT MESSAGE]:change related to application context and configuration||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/4e4242d01096f268a1f293a94515545dc6f3c8f4

[COMMIT MESSAGE]:SEC-1354: Added integration tests for combinations of @PreAuthorize and||@Secured annotations.
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_A')")
+ @PreAuthorize("hasRole('ROLE_A')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/6c2349672c6a3253f175a43bef92832beb9f4999

[COMMIT MESSAGE]:Adds filter by submission type||
=========================================================

- @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/3792757d5324ba25158e7fd208429767a9a021dc

[COMMIT MESSAGE]:updates the library with the new methods for the web||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/f5b5e2f41dcd891717cc8d2d5dd9bc5bc864878e

[COMMIT MESSAGE]:exposed new projection/summary queries||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/425f55332f625ff01a6cab8e0537a62b476414d7

[COMMIT MESSAGE]:re-added accidentally removed methods||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/1cc8b191bc388998eb82c77ffcdc7c08bf7b8301

[COMMIT MESSAGE]:added count methods for getByProject/AssayAccession||
=========================================================

- @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/802a2a5799e49aa2c4f88bc54797012978b8a88c

[COMMIT MESSAGE]:adds needed methods for archive-web||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectId, 'isAccessibleProjectId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayId, 'isAccessibleAssayId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('SUBMITTER')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#originalUser.id == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/f1e73d9962d6253ecdc3ae2c7c48566b77136032

[COMMIT MESSAGE]:merge after aclupdates||
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/3792757d5324ba25158e7fd208429767a9a021dc

[COMMIT MESSAGE]:updates the library with the new methods for the web||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7ac5daa516685da7fb065676064198349787ba5f

[COMMIT MESSAGE]:added support for facets and highlights for display psms in archive-web||
=========================================================

+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectId, 'isAccessibleProjectId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayId, 'isAccessibleAssayId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('SUBMITTER')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#originalUser.id == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/d426679909803b33f775bae686f2e2bd70d9eee1

[COMMIT MESSAGE]:Lisätty mahdollisuus poistaa oppimääriä||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/b5d0db8ba8bb956f351eb914761e1c736462e963

[COMMIT MESSAGE]:Toteutettu valinnaisen oppiaineen muokkaus ja poisto||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e08b2fabc7e37ff747c444cabeee17e5bd32deba

[COMMIT MESSAGE]:Kielitarjonta||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/73acbf4f07625efbd123b01a578018c1f768af2b

[COMMIT MESSAGE]:Lisätty erillinen POST-metodi valinnaisen aineen lisäämistä varten||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/9869eae50a636ecb13f22a58f8e074ef56b1bd09

[COMMIT MESSAGE]:Lisätty REST-rajapintaan mahdollisuus hakea oppiaineita tyypin perust…||…eella
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/eb142be081da327b6367c788bb646c7030d20227

[COMMIT MESSAGE]:optimoi tietokantalatauksia||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/47c778053346f765d94bb89861caf18ceb06a3eb

[COMMIT MESSAGE]:Lisätty metodit oppiaineen vuosiluokkakokonaisuuden ja vuosiluokan si…||…sällön päivittämiseen
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e940bded85f59013446cc522cd84e100ddf27f59

[COMMIT MESSAGE]:lisää oppiaineen tavoitteiden vuosiluokkaistaminen||keskeneräinen ensimmäinen versio.
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/f00519e01fbed89e63b86527d55bdf7efc39c73a

[COMMIT MESSAGE]:Käytä OppimaaraLaajaDto:ta jotta oppimääriinkin populoituisi kaikki p…||…erusteista löytyvä data
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/dd9b3b13b6fff4c1dfebcddbad826dce6930991b

[COMMIT MESSAGE]:OppiaineControlleriin getAll-operaatio||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bartosz25/library-sample-project/commit/3cb1e6d5e612ad81359dd9a79f3b90c277ec7535

[COMMIT MESSAGE]:Maven project structure, pom.xml and one new todo||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ // @PreAuthorize("(#subscriber.login == principal.username) or (#subscriber.login == #user.username) or (#subscriber.login == 'bartosz') or (#subscriber.getLogin() == principal.username)")
+ // OK : @PreAuthorize("'bartosz' == principal.username")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ // OK too : @PreAuthorize("hasAuthority('SUBSCRIBER_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CHAT_CONSULT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CHAT_CONSULT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'EXPORT_DO')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ // @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'SUBSCRIBER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'NEWSLETTER_WRITE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'NEWSLETTER_WRITE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'QUESTION_READ')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITERLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_DELETE')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.bookingNb > 0")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.id == subscriber.id")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'PENALTY_ACCEPT')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'QUESTION_READ')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("isAnonymous() or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("(#subscriber.login == principal.username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#subscriber.login == principal.username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.id == subscriptionTransfer.subscriptionTransferPK.idGiver")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITERLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/ebe86ee960b2f0d11370236de6d688fcbe6545ff

[COMMIT MESSAGE]:Loads of fixes||
=========================================================

- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")
- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=32&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/ebe86ee960b2f0d11370236de6d688fcbe6545ff

[COMMIT MESSAGE]:Loads of fixes||
=========================================================

- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")
- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/miricy/mystore/commit/4d82cb837b1695987d04a191dcf35fc2f6b749d3

[COMMIT MESSAGE]:adding generic controller and service||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nextbox/Labs/commit/aa8868934a79a0404f29bcfccb96f7450fb446e3

[COMMIT MESSAGE]:Added some new projects and modified some files||
=========================================================

- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ciberado/javiermoreno-domina-springboot/commit/90bf693391ae4bd4f25fe91a21f5fe9d17d5eff2

[COMMIT MESSAGE]:Agregado código relacionado con la protección de métodos y la obtenci…||…ón del username desde cualquier punto de la aplicación.
=========================================================

+ //@PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ciberado/javiermoreno-domina-springboot/commit/a5490b153c760aa4a95cee9a1f9c30acbb9e740b

[COMMIT MESSAGE]:Agregada seguridad a nivel de método||Utilizando anotaciones ahora se ha añadido un ejemplo sobre cómo puede
requerirse autorización para ejecutar una operación de servicio.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Proactum/arti-initial/commit/139947cbab7f270007dcd6b5ee3eac24ca78b2b0

[COMMIT MESSAGE]:Code brought over from Metka. Most clear major changes done. Removed …||…HTML-code from inside java since it's smarter to develope the site as a separate entity.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission(#id, '" + PermissionCheck.Values.REMOVE_SEARCH + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_INDEX_INFO +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_MANUALLY_INDEX_CONTENT +"', 'PERMISSION')")
+ /*@PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taverna/taverna-svn/commit/fb226e6aa3b70732eac1acc4ae1eeb14c873182d

[COMMIT MESSAGE]:Transferred from cvs||git-svn-id: http://taverna.googlecode.com/svn@7670 bf327186-88b3-11dd-a302-d386e5130c1c
=========================================================

+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/appfuse/appfuse-demos/commit/c2a2edbe1a9e3a39e734b3ce2420d7e8d3f5b566

[COMMIT MESSAGE]:APF-1420: GWT Tutorial - Initial Import||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=33&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ahmadrgb/EWS-interview/commit/c8516052b417642a713a953a221ab81a8477063f

[COMMIT MESSAGE]:added our project||this is our project
=========================================================

+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKET')")
+ @PreAuthorize("#ticket.id == 0 and hasAuthority('CREATE_TICKET')")
+ @PreAuthorize("(authentication.principal.equals(#ticket.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_TICKET')")
+ @PreAuthorize("hasAuthority('VIEW_COMMENTS')")
+ @PreAuthorize("#comment.id == 0 and hasAuthority('CREATE_COMMENT')")
+ @PreAuthorize("(authentication.principal.equals(#comment.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_COMMENT')")
+ @PreAuthorize("hasAuthority('VIEW_ATTACHMENT')")
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#message.user) and " +
+ @PreAuthorize("hasAuthority('VIEW_CHAT_REQUESTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/alexbud/message-board/commit/cd32702355dc3b14e6c4d35def7b240c4c57b649

[COMMIT MESSAGE]:user accounts||
=========================================================

- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
- @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#message.principal == principal.username)")
+ @PreAuthorize("(hasRole('ROLE_ADMIN')) or (#user.username == principal.username)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/977cbdaf3ae8d66caeb617883e4c8a80c93b8239

[COMMIT MESSAGE]:vuosiluokkakokonaisuuden revisiot ja updatedto||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/259fdd79c508475278c006b811759abec059dfa6

[COMMIT MESSAGE]:opetuksen kohdealueen API (ADD/GET)||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/490222013d458b57cf596712c33ae389b4363c58

[COMMIT MESSAGE]:perusteen korjaus julkaisun jälkeen||Lisättu KORJAUS-oikeus update-palveluihin (WIP)
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.dto.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#viiteId, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#tov.id, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/b57dce866f8e582cb3f45412e57f748502a205d0

[COMMIT MESSAGE]:oppiaineen revision haku.||Osittainen toteutus revision palautukselle (ei toimi kaikissa
tilanteissa).
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/28ded2141daa35d163fb490604d8d44f9c9bbcea

[COMMIT MESSAGE]:yl_kohdealue + korjauksia||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/cadd9f51a44eb422ad265a522315810a2f8e0bdb

[COMMIT MESSAGE]:oppimäärän muokkaus ja vuosiluokat||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/80694232d168e85a2b4f1c30114ab10cfa157bfd

[COMMIT MESSAGE]:YL perusteen tietomalli ja palvelut, WIP||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dscoppelletti/programmerpower/commit/28a8beaaa4cffd28410d9662ae9b16ec739b9c45

[COMMIT MESSAGE]:Programmer Power WUI||close #20

Realizzata infrastruttura per sviluppare applicazioni Web:

 - Adottato Struts 2 come framework MVC.

 - Adottato Spring Security come framework per la sicurezza.

 - Adottato Jasig CAS per il SSO.

 - Adottato Restlet come framework RESTfull.

 - Adottati jQuery e jQueryUI come framework JavaScript.

**Programmer Power WUI** e' un'applicazione Web che offre un'interfaccia
utente *a schede* per l'accesso alle funzioni pubblicate da altre
applicazioni Web installate nello stesso AS.
L'infrastruttura realizzata consente agli sviluppatori di concentrarsi
sulle sole funzioni specifiche delle applicazioni Web demandando tutti
gli aspetti comuni ai servizi offerti dalla piattaforma.

Come applicazione Web di esempio per collaudare l'infrastruttura e'
stata realizzata **Web Site Services**: un'applicazione che offre
alcuni servizi di utilita' per un sito Web.
=========================================================

+ @PreAuthorize("hasRole('it.scoppelletti.admin')")
+ @PreAuthorize("hasRole('it.scoppelletti.admin')")
+ @PreAuthorize("hasRole('it.scoppelletti.admin')")
+ @PreAuthorize("hasRole('it.scoppelletti.admin')")
+ @PreAuthorize("hasRole('it.scoppelletti.admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/alyahmed/Customer-Support-Application/commit/5a7bce54ce7d9a9020d10bf117a9c3b072f00f12

[COMMIT MESSAGE]:Setup a working Project Structure. Basic Login Authentication and Signup||features exist.
=========================================================

+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKET')")
+ @PreAuthorize("#ticket.id == 0 and hasAuthority('CREATE_TICKET')")
+ @PreAuthorize("(authentication.principal.equals(#ticket.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_TICKET')")
+ @PreAuthorize("hasAuthority('VIEW_COMMENTS')")
+ @PreAuthorize("#comment.id == 0 and hasAuthority('CREATE_COMMENT')")
+ @PreAuthorize("(authentication.principal.equals(#comment.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_COMMENT')")
+ @PreAuthorize("hasAuthority('VIEW_ATTACHMENT')")
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#message.user) and " +
+ @PreAuthorize("hasAuthority('VIEW_CHAT_REQUESTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/IntersectAustralia/gda-addons-teams-and-projects/commit/30f6fc6680104d98825048d992e57b4d1bcb918b

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PreAuthorize("hasAnyRole('EDIT_OWN_PROJECTS','EDIT_ALL_PROJECTS')")
+ @PreAuthorize("hasPermission(#projectId, 'project', 'VIEW')")
+ @PreAuthorize("hasPermission(#projectId, 'project', 'VIEW')")
+ @PreAuthorize("hasPermission(#projectId, 'project', 'EDIT')")
+ @PreAuthorize("hasPermission(#projectId, 'project', 'VIEW')")
+ @PreAuthorize("hasPermission(#projectId, 'project', 'DELETE')")
+ @PreAuthorize("hasPermission(#resultId, 'result', 'VIEW')")
+ @PreAuthorize("hasPermission(#resultId, 'result', 'VIEW')")
+ @PreAuthorize("hasPermission(#resultId, 'result', 'EDIT')")
+ @PreAuthorize("hasPermission(#resultId, 'result', 'EDIT')")
+ @PreAuthorize("hasAnyRole('EDIT_OWN_TEAMS','EDIT_ALL_TEAMS')")
+ @PreAuthorize("hasPermission(#teamId, 'team', 'VIEW')")
+ @PreAuthorize("hasPermission(#teamId, 'team', 'EDIT')")
+ @PreAuthorize("hasPermission(#teamId, 'team', 'DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/motech-implementations/ananya-care/commit/a6bfb7d9d6e5bd294ad540e44e68a2f20970bb58

[COMMIT MESSAGE]:merging ananya-care-reports/master||
=========================================================

+ @PreAuthorize("hasRole('CAN_EDIT_CLASSIFICATIONS')")
+ @PreAuthorize("hasRole('CAN_EDIT_CLASSIFICATIONS')")
+ @PreAuthorize("hasRole('CAN_EDIT_CLASSIFICATIONS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/SpringREST-DEMO/commit/b4558fd5566feb1b2a45879ee783c0a8c919e543

[COMMIT MESSAGE]:initial checkins||Spring rest example
=========================================================

+ @PreAuthorize("#oauth2.hasScope('read')")
+ @PreAuthorize("#oauth2.hasScope('read')")
+ @PreAuthorize("#oauth2.hasScope('read')")
+ @PreAuthorize("#oauth2.hasScope('write')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=34&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/btpka3/btpka3.github.com/commit/de177fda6ace536ad0d61d788636ec2bfed441fc

[COMMIT MESSAGE]:copy Spring Security ACL samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
+ @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('XROLE_READ_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/HonorsFormsBackend/commit/f1e73d9962d6253ecdc3ae2c7c48566b77136032

[COMMIT MESSAGE]:merge after aclupdates||
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/HonorsFormsBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/HonorsFormsBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/HonorsFormsBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JasonHao123/spring-security-samples-contact-jpa/commit/f8825e2c16cd589330f20f660496a358b4763a65

[COMMIT MESSAGE]:fix acl issue||
=========================================================

-// @PreAuthorize("hasPermission(#id, 'org.springframework.security.samples.contacts.entity.Contact', read) or hasPermission(#id, 'org.springframework.security.samples.contacts.entity.Contact', admin)")
+ @PreAuthorize("hasPermission(#id, 'org.springframework.security.samples.contacts.entity.Contact', read) or hasPermission(#id, 'org.springframework.security.samples.contacts.entity.Contact', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JasonHao123/spring-security-samples-contact-jpa/commit/2daca749adc069742b8b8cc639327b8e7ef263eb

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasPermission(#id, 'org.springframework.security.samples.contacts.entity.Contact', read) or hasPermission(#id, 'org.springframework.security.samples.contacts.entity.Contact', admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a5450d42d1c032bb495ee6fe990e5583a24f32dd

[COMMIT MESSAGE]:MIFOS-6100: While disbursing the loan, if the charges are debited thr…||…ough the savings account, the entry is not getting generated in the Savings Account. But the loan contract is credited with the charges
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5bc9c2919b2cbc36e2691fd553298266e34e3b42

[COMMIT MESSAGE]:MIFOS-5807: reimplemented adjustment functionality for new Group Loans.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/d2dc1ae4050b0d2cea25eb152a5841b7c9cc93e4

[COMMIT MESSAGE]:MIFOS-5628: Added apply charges. WIP||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/83d9e8f8c648f1fc69f18787db7ad4c184c2babb

[COMMIT MESSAGE]:MIFOS-5671: Improved permissions for the ability to transfer funds from||one account to another
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/13f1d61ffe60bd9fabdf15a6c8df807d3b45a598

[COMMIT MESSAGE]:MIFOS-5456: Ability to make payments from a savings account||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/994bf5effd69002e5223ca46c860ab8046012527

[COMMIT MESSAGE]:MIFOS-5182: Added interface for pre-payments||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8ec86bfc0028d48ae4ea49f343ae6c885d44f61a

[COMMIT MESSAGE]:MIFOS-5373 Historical Data: option to adjust date, amount, payment type||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3f159c63ae2f1e6c08eae729dbb789039c63640a

[COMMIT MESSAGE]:MIFOS-5373: Reverting a past payment||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9cfd59785fa9372adc439683074396b613dea76f

[COMMIT MESSAGE]:FIXED MIFOS-5451: Add option to apply automatic penalties via Apply C…||…harges dropdown
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8dd34594407d63a4e910039b413ae1739d00cd4a

[COMMIT MESSAGE]:FIXED MIFOS-5382: added necessary classes and views, created tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/644d2cfb6298b8b36318217ff16ea46d0c359bcc

[COMMIT MESSAGE]:[MIFOS-4431] Refactored adjust payment to move the operation behind s…||…ervice facade
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/050e14cea6a62061358382bd41d0297cff93a450

[COMMIT MESSAGE]:MIFOS-4190: add service facades for retrieving change logs for center||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6015c4e0cdbde9b043281bb0844596d41e3ba516

[COMMIT MESSAGE]:MIFOS-4190: add service facades around applying charges and reverting…||… charges on customer accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atricore/josso1/commit/7d9d0e08806878ffc9f4ffdb8191d11b23f8071a

[COMMIT MESSAGE]:* Implemented Spring Security 3.1 support||* Implemented JOSSified port of the contacts sample
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/5d92ffc5b2452dfa67948f4c5b1b87599a97dc11

[COMMIT MESSAGE]:MIFOS-4385: remove persistence usage from personnel, initialize langu…||…age supported entity when fetching personnel details
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/2c685891d959bd75726b2836a56a5d118415b9cc

[COMMIT MESSAGE]:MIFOS-4385: refactoring of PersonAction||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/650162d0bf0d2514d18316d5d58243f01e4fd51a

[COMMIT MESSAGE]:MIFOS-4385: service facade for updating user settings.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/38d6834cd44dcd313b491763be10047822ad9419

[COMMIT MESSAGE]:MIFOS-3316: add service facade for update and make struts action use it.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/48cdaf0cb62c4bba6924fcac7f9f39460ca1df22

[COMMIT MESSAGE]:MIFOS-3316: view system users search and paging||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/6ed44333041d28b91733bed20c30b9fb8c1e5b56

[COMMIT MESSAGE]:Added service facade for view/define system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/21b321e68980c624b98068a16380acfa1ee9bcca

[COMMIT MESSAGE]:Added files to commit of adding service facade for view system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=35&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/5d92ffc5b2452dfa67948f4c5b1b87599a97dc11

[COMMIT MESSAGE]:MIFOS-4385: remove persistence usage from personnel, initialize langu…||…age supported entity when fetching personnel details
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/2c685891d959bd75726b2836a56a5d118415b9cc

[COMMIT MESSAGE]:MIFOS-4385: refactoring of PersonAction||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/650162d0bf0d2514d18316d5d58243f01e4fd51a

[COMMIT MESSAGE]:MIFOS-4385: service facade for updating user settings.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/38d6834cd44dcd313b491763be10047822ad9419

[COMMIT MESSAGE]:MIFOS-3316: add service facade for update and make struts action use it.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/48cdaf0cb62c4bba6924fcac7f9f39460ca1df22

[COMMIT MESSAGE]:MIFOS-3316: view system users search and paging||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/6ed44333041d28b91733bed20c30b9fb8c1e5b56

[COMMIT MESSAGE]:Added service facade for view/define system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/21b321e68980c624b98068a16380acfa1ee9bcca

[COMMIT MESSAGE]:Added files to commit of adding service facade for view system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/0fde8efd847a66b00db0b9d3a4f2bdb78f03ea40

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/18d613b0b7a5620b4ed4577bf8d1229858094eab

[COMMIT MESSAGE]:Revert "MIFOS-4190: service facades for customer historical data."||This reverts commit 74b35c0.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/74b35c0f8ec53d2b1de40f62b1126e9f61c50279

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/ed6234219bc7c43edc03d0318e55848279f431b6

[COMMIT MESSAGE]:MIFOS-4190: service facade for updating groups||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/830ce0c88c61389cbc1ff1995a48e4d9a37036e5

[COMMIT MESSAGE]:MIFOS-4190: service facade for retrieving group details||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/2ff8b1df77e710da043602714b1d1bad666c4b2f

[COMMIT MESSAGE]:MIFOS-4190: service facade around group creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/c3e0171cd1ec67fadf95bc2de09b5e5603b71351

[COMMIT MESSAGE]:MIFOS-4190: refactor dto and implementation for group service facade||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/e11114ce770be5cd0242cf15b30833b3b692282e

[COMMIT MESSAGE]:SEC-1023: Add hasPermission() support to SecurityExpressionRoot||http://jira.springframework.org/browse/SEC-1023.

hasPermission() now delegates to a PermissionEvaluator interface, with a default implementation provided by the Acl module. The contacts sample now uses expressions on the ContactManager interface. The permission-evaluator element on global-method-security can be used to set the instance to an AclPermissionEvaluator. If not set, all hasPermission() expressions will evaluate to 'false'.
=========================================================

+@PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/ff6461402d69880881d794036bb686140c87aea0

[COMMIT MESSAGE]:zmiany||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szubster/OSPManager/commit/7fd37899f03890163add2503f73c5347bff68104

[COMMIT MESSAGE]:Poprawianie bledow uzytkownika||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/c540aba738c418ff6586786e70903a54bc1c6eab

[COMMIT MESSAGE]:third||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_USE_ACCOUNTING_INTEGRATION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=36&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/b98eb07da4a19df3d2bbf321a200c9650d7cf959

[COMMIT MESSAGE]:enable secure urls||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ // @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_USER_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_PUBLIC_MESSAGE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_USER_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_PUBLIC_MESSAGE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_USER_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_PUBLIC_MESSAGE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergeevii123/gwtcrud/commit/38cf23051880ef6b18b9d57fb021d97cc9e75c9b

[COMMIT MESSAGE]:1||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=37&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/appfuse/appfuse/commit/afe5d271a0a0e7b54c97905e9ba28f4f3a9d4b06

[COMMIT MESSAGE]:APF-1391 Password Reset functionality||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/87f8d12b29cb2b6b8da911d00a7784f53220fae3

[COMMIT MESSAGE]:added core competencies||
=========================================================

+ @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/79d80fe44b6c957877df0f8930b4b0e7927fa8d0

[COMMIT MESSAGE]:in the middle of something||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/8bb78f0c9c4c628341a3c36d6eb2e72aeb4f1926

[COMMIT MESSAGE]:added user delete functionality back in||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergeevii123/gwtcrud/commit/38cf23051880ef6b18b9d57fb021d97cc9e75c9b

[COMMIT MESSAGE]:1||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/508700d7745f0062c32f7fdcc816bd9bdaed7b13

[COMMIT MESSAGE]:OrderForm changes, SearchOrders Added||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/542998016977db5af317d52372722a559ae17a7e

[COMMIT MESSAGE]:refactored and added count for all orders||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/10655d758e2a404a1d4e774ac72b71bfc7f0f6ea

[COMMIT MESSAGE]:Created OrdersGetService.getOrderForUserFromDAO(). Also modified||UserOrderController to use it.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/715d271d0d1c7f00783aa1ef002b004380844b67

[COMMIT MESSAGE]:User side's order listing now complete. Examining one order at the time||possible also. Table's sorting still unable, because of jQuery import
from Google?!
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/16a458b86469d47626ad51177af074ee047085a0

[COMMIT MESSAGE]:Getting orders from database works at last.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0de19f7bb81ee072796a20b6c7cad3d6cb70a86f

[COMMIT MESSAGE]:Fixed MIFOS-6060: Stack trace appears during apply payment from savin…||…gs account
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/af8acae56cc1b99e2093be2568689f7c9474f1ad

[COMMIT MESSAGE]:MIFOS-5753: Added advanced options to Search functionality||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3f893c7e1cdeeff615e92dda560c8348cd6a9ea5

[COMMIT MESSAGE]:MIFOS-5626: Add possibility to Unblacklist a Client||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/88404cb71e1463ca5abe9bfe2236b4b95d334f2d

[COMMIT MESSAGE]:MIFOS-5916: Added possibility to attach files during Client creation||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/410affc78c4f9ce4bdbe2c6f4dca17f3dba69c3b

[COMMIT MESSAGE]:MIFOS-3534: add permissions to update client details||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c5312e0b461ce787ab0467aee13897c47bdf8cdd

[COMMIT MESSAGE]:MIFOS-3534 adding the possibility to edit clients created by the user||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b45c4ba7160901b48c40b9ae251635a48cabd762

[COMMIT MESSAGE]:MIFOS-3534 Add permission for "Edit client" in "pending approval" state||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ccd27d874a4b000f5c25f8035f19cd386690d135

[COMMIT MESSAGE]:Revert "Merge pull request #29 from lwyszomi/MIFOS-3534-branch"||This reverts commit 25011ff, reversing
changes made to b5f73e4.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ccd27d874a4b000f5c25f8035f19cd386690d135

[COMMIT MESSAGE]:Revert "Merge pull request #29 from lwyszomi/MIFOS-3534-branch"||This reverts commit 25011ff, reversing
changes made to b5f73e4.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4cb15cf50f52d71e8d4b318be59bb7fc8a5df259

[COMMIT MESSAGE]:MIFOS-3534: add permissions to update client details||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/035b6b7ea8eb839416925ec7bb5f109c44226994

[COMMIT MESSAGE]:MIFOS-3534 adding the possibility to edit clients created by the user||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b10800fb7321a5e12e7c90038fd255a7cb88c50d

[COMMIT MESSAGE]:MIFOS-3534 Add permission for "Edit client" in "pending approval" state||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/13f1d61ffe60bd9fabdf15a6c8df807d3b45a598

[COMMIT MESSAGE]:MIFOS-5456: Ability to make payments from a savings account||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/77f8f016689a1e3feed5878a5eba91f43169c0ab

[COMMIT MESSAGE]:FIXED MIFOS-5231: Added methods to retrieve charges for Groups and Ce…||…nters.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c200f0869f0f01a5b16839cf2bec8d716a500750

[COMMIT MESSAGE]:FIXED MIFOS-5151: Added getClientChargesByNumber method.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ed7e0e9502be346a3fe4317a51bd3927ebdb4730

[COMMIT MESSAGE]:MIFOS-5111 : Ability to add/view and edit client photo||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0cab50e5e14292d83039d65eb756b6204a6a5741

[COMMIT MESSAGE]:MIFOS-4507: add spring security around services for group and client …||…creation
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/41ffaa1eece7fe6918e2e7b1d666433776d4a86e

[COMMIT MESSAGE]:MIFOS-4190: add service facades for client transfer and adding back g…||…roup membership for client
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f1ed4a021489d98846335b73dca5b2504a7fbc80

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client MFI det…||…ails.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5ee476ffdb61cc663f617c3171afa5658059d1c5

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client family …||…details.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/90d9f9fbf52d2a300471b257f4078c0a79468112

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client persona…||…l information.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ca9c938ed0cb89884d13af8fe28eef9d9b0efe00

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0bdb564bd341cb3ba947a6b28b20ee6abf5e6c93

[COMMIT MESSAGE]:reapply reverted commits with changes||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c075efc210ef56753a7c21fc9c1e926a9fee3240

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/a0d2c24c8a0f52142c615f8d6c2fd0c69c10b34f

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client family details."||Attempting to fix the build by revert to last know working version

This reverts commit 8e62c60.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/37efb2e9e90bb7545526d2de0aa13ffa5752b82d

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client creation."||This reverts commit 54e3f1d.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/f682fdd106d57e7ee88507b41f1a229869e649fc

[COMMIT MESSAGE]:Revert "MIFOS-4190: fix failing acceptance tests"||This reverts commit 3f47848.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3f478483e5e411c3fac9b692b1d6d5fd28ba5d97

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/54e3f1dddc08dee599594fb00968419915d76ae7

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8e62c608f98f588eb94247f77dfcb865d52129e8

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=38&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("denyAll()")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.username) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.username == #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.id, #vacationRequest) ) " +
+ @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.username, #vacationRequest) ) " +
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == #employee.email")
- @PreAuthorize("#workTime.employee.id == principal?.id")
+ @PreAuthorize("#workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or (isAuthenticated() and #id == principal.id)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("isAuthenticated() and @travelExpenseEventHandler.canCreate(principal.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canEdit(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canDelete(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(isAuthenticated() and @reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal.id)) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #comment.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(#sickDays.employee.id == principal.id and isAuthenticated()) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(isAuthenticated() and #sickDays.employee.id == principal.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == #vacationRequest.employee.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @vacationRequestEventHandler.employeeCanDeleteRequest(principal.id, #vacationRequest) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @vacationRequestEventHandler.employeeCanDeleteRequest(principal?.id, #vacationRequest)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == #employee.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
- @PreAuthorize("#workTime.employee.id == principal.id")
+ @PreAuthorize("#workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/d61f2a7574deb346d7b60cbd293cc546e126c269

[COMMIT MESSAGE]:TRACKR-163 - Add revenue reporting||Modified the data to be more interesting
Added a date converter for milliseconds
Added function to find all invoices between to dates
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/d526285eeb45c2b583e3d116f481fcff2956d9c1

[COMMIT MESSAGE]:TRACKR-104 - Search for an invoice by identifier||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/c8d371fd90e0a07c46a1bb66fb7e4134f3beb9fd

[COMMIT MESSAGE]:TRACKR-106 - List all invoices||Added security for GET methods.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/4257681a13b9ead6715a84e97caefcb776417390

[COMMIT MESSAGE]:TRACKR-101 - Add invoice||Added all base classes and basic tests for invoices.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=39&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/30fd86e91ecb861249f758ed226b32bf1962f092

[COMMIT MESSAGE]:FIX paginacion. Al seleccionar el filtro no limpiaba la grilla.||
=========================================================

- @PreAuthorize("hasRole('PERM_LIST_ROLES')")
+ @PreAuthorize("hasRole('PERM_LIST_ROLES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/ee660d348407cbd86f2dae82146b967175722531

[COMMIT MESSAGE]:Se termina el manejo con estado del history para el form del alta y e…||…dicion de roles.
=========================================================

+ @PreAuthorize("hasRole('PERM_LIST_ROLES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/fb2c26588a383f9ee13a2cbfb22fd3edd53bf84a

[COMMIT MESSAGE]:pequeño refactor y funcionalidad de eliminacion de roles.||
=========================================================

+ @PreAuthorize("hasRole('PERM_REMOVE_ROLES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/420611566299da541cda9c781ea81991adf9c04f

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('PERM_LIST_ROLES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/4879b9a01533f56dbea35a8f8a95828c97c38c6b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('PERM_UPDATE_ROLES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/8703fdca5876e3d0e5a4d2bcb3b8615b48ad03e7

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('PERM_CREATE_ROLES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/2af7a23f95a9bf087adb54b579b969b2a868e5b2

[COMMIT MESSAGE]:Added get account count api to management||
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/9d5a7598bbd6bb6aa9946b41f0bca0fd64939232

[COMMIT MESSAGE]:Added API's for editing the application||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/511da85c4ad4a426319fc1cb0e5be405f1bb2d9c

[COMMIT MESSAGE]:Issue #4 : Create API's in management controller which will return sp…||…ecific account and application
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/511da85c4ad4a426319fc1cb0e5be405f1bb2d9c

[COMMIT MESSAGE]:Issue #4 : Create API's in management controller which will return sp…||…ecific account and application
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/357826231e9b84a3ffda3815459b58b127100e07

[COMMIT MESSAGE]:Issue #6 : New REST API's required for deletion of Account and Applic…||…ation
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/357826231e9b84a3ffda3815459b58b127100e07

[COMMIT MESSAGE]:Issue #6 : New REST API's required for deletion of Account and Applic…||…ation
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/33bb2f28c45855bb2dde11cdbba6031918f35af4

[COMMIT MESSAGE]:Added security layer to Daas using oauth 2 spec||
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jimomulloy/Customer-Support-v21/commit/a9e070690f05b1db1fb2c01c3974465615eb4939

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKET')")
+ @PreAuthorize("#ticket.id == 0 and hasAuthority('CREATE_TICKET')")
+ @PreAuthorize("(authentication.principal.equals(#ticket.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_TICKET')")
+ @PreAuthorize("hasAuthority('VIEW_COMMENTS')")
+ @PreAuthorize("#comment.id == 0 and hasAuthority('CREATE_COMMENT')")
+ @PreAuthorize("(authentication.principal.equals(#comment.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_COMMENT')")
+ @PreAuthorize("hasAuthority('VIEW_ATTACHMENT')")
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#message.user) and " +
+ @PreAuthorize("hasAuthority('VIEW_CHAT_REQUESTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/e11114ce770be5cd0242cf15b30833b3b692282e

[COMMIT MESSAGE]:SEC-1023: Add hasPermission() support to SecurityExpressionRoot||http://jira.springframework.org/browse/SEC-1023.

hasPermission() now delegates to a PermissionEvaluator interface, with a default implementation provided by the Acl module. The contacts sample now uses expressions on the ContactManager interface. The permission-evaluator element on global-method-security can be used to set the instance to an AclPermissionEvaluator. If not set, all hasPermission() expressions will evaluate to 'false'.
=========================================================

+@PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=40&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/938e04e00e223111598568637dc4886080dc874c

[COMMIT MESSAGE]:lukituksen refaktorointia||Refaktoroitu Suoritustapa käyttämään geneerisempää lukitussysteemiä.
=========================================================

+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/ba9b7c37f4a7959e7182d078a6b5634c4096aa22

[COMMIT MESSAGE]:oppiaineen lukitus||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/70d49f0c3c13a723f5f7602020d3eebe9d873689

[COMMIT MESSAGE]:MIFOS-5439: added mobile version of the clients and accounts page||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/84e3ed016c27928a87218f6d466069d9d6edc2cd

[COMMIT MESSAGE]:Merge remote-tracking branch 'origin/g-maint'||Conflicts:
	appdomain/src/main/java/org/mifos/application/servicefacade/PersonnelServiceFacadeWebTier.java
	serviceInterfaces/src/main/java/org/mifos/application/admin/servicefacade/PersonnelServiceFacade.java
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5b487cba3d639f18734178e0ae336e6ac0b26d45

[COMMIT MESSAGE]:MIFOS-5177 REST method with refactorization.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5ea99ef072a480f17526510733e98993ed00ce94

[COMMIT MESSAGE]:converting jsp to ftl for change locale dialog||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/fd9d8b00456f9e1d05ac85cd0c31931a6231b9fa

[COMMIT MESSAGE]:fix conflicts from 5d92ffc||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5d92ffc5b2452dfa67948f4c5b1b87599a97dc11

[COMMIT MESSAGE]:MIFOS-4385: remove persistence usage from personnel, initialize langu…||…age supported entity when fetching personnel details
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/fc5b51a7cc817d18e801fd789bccdd909ce988de

[COMMIT MESSAGE]:MIFOS-4385: refactoring of PersonAction||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/65f74d19d649ec29d538b1c1f7f3aa0733de5a27

[COMMIT MESSAGE]:MIFOS-4385: service facade for updating user settings.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/bc333d9c84e062a53d374c4cf9b4e8ad7534e141

[COMMIT MESSAGE]:Revert "MIFOS-4385: service facade for updating user settings."||This reverts commit 650162d.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/875297d9193642203f068da635880012cb2de068

[COMMIT MESSAGE]:Revert "MIFOS-4385: refactoring of PersonAction"||This reverts commit 2c68589.
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/537a1244304c48dffa8897d2a0bfe9225e86b1a4

[COMMIT MESSAGE]:Revert "MIFOS-4385: remove persistence usage from personnel, initiali…||…ze language supported entity when fetching personnel details"

This reverts commit 5d92ffc.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/5d92ffc5b2452dfa67948f4c5b1b87599a97dc11

[COMMIT MESSAGE]:MIFOS-4385: remove persistence usage from personnel, initialize langu…||…age supported entity when fetching personnel details
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2c685891d959bd75726b2836a56a5d118415b9cc

[COMMIT MESSAGE]:MIFOS-4385: refactoring of PersonAction||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/650162d0bf0d2514d18316d5d58243f01e4fd51a

[COMMIT MESSAGE]:MIFOS-4385: service facade for updating user settings.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/38d6834cd44dcd313b491763be10047822ad9419

[COMMIT MESSAGE]:MIFOS-3316: add service facade for update and make struts action use it.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/48cdaf0cb62c4bba6924fcac7f9f39460ca1df22

[COMMIT MESSAGE]:MIFOS-3316: view system users search and paging||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/6ed44333041d28b91733bed20c30b9fb8c1e5b56

[COMMIT MESSAGE]:Added service facade for view/define system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/21b321e68980c624b98068a16380acfa1ee9bcca

[COMMIT MESSAGE]:Added files to commit of adding service facade for view system users||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matejkv1/MusicLibraryPA165/commit/4d2bc5a2d6317b544e8f7af30b2d12267ef90662

[COMMIT MESSAGE]:Service authentication and authorization added. REST is working too.||
=========================================================

+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN') or hasRole('USER')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/micros-uz/javamicros/commit/68b459dc72bc675bc0d72897f0db73ae11477763

[COMMIT MESSAGE]:Added: security samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/8980a44a43630e2b826d72af8a112047bf469c53

[COMMIT MESSAGE]:javaee: Reddit: downvoting||
=========================================================

+ @PreAuthorize("hasPermission(#submission, 'vote')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/819ed4b9605b6cea24d86302532a889bf92ac595

[COMMIT MESSAGE]:javaee: Reddit: głosowanie (upvote), generowanie metamodelu JPA||
=========================================================

+ @PreAuthorize("hasPermission(#submission, 'vote')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/231d7cb6f92cae77f66a53d0c57f15f447baac26

[COMMIT MESSAGE]:javaee: Reddit: usunięcie niepotrzebnej roli 'user'||
=========================================================

- @PreAuthorize("hasRole('user')")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('user')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/72b7fc1146cbf8613a33e84f96149726c5abcd02

[COMMIT MESSAGE]:javaee: Reddit: możliwość edycji tylko swoich własnych linków||
=========================================================

- @PreAuthorize("hasRole('user')")
+ @PreAuthorize("hasPermission(#submission, 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/543cbe2ed4c7dc456e5fdb1265abed14a015a336

[COMMIT MESSAGE]:javaee: Reddit: rejestracja, zapamiętywanie użytkownika który dodał l…||…ink, Mockito
=========================================================

+ @PreAuthorize("hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/ff4ac4e15292676bc70d510b4e378a1256a81b4c

[COMMIT MESSAGE]:javaee: Reddit: zmiana nazwy użytkownika 'admin' na 'administrator'||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('administrator')")
- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/61697a26dea44424ea44c866293685dbbb25f0b2

[COMMIT MESSAGE]:javaee: Reddit: użycie Criteria API, dodanie pakietu mdettla.reddit.r…||…epository
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/31230825cff5a50f54ae83894e3a92fbd60929e7

[COMMIT MESSAGE]:javaee: Reddit: dodanie roli administratora||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HughP/mdettla/commit/97c8e96cb35985f590118f57a5f0c0305fa591e9

[COMMIT MESSAGE]:javaee: Reddit: użycie Spring Security||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thiagoandrade6/security-acl/commit/84d6f4ad0738b3aad02624f956c67493e804256c

[COMMIT MESSAGE]:some improvements on acl||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/auntaru/jtelmon/commit/4c4d9bb456ffbe712b71d301c494cb1ee2708ebb

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKET')")
+ @PreAuthorize("#ticket.id == 0 and hasAuthority('CREATE_TICKET')")
+ @PreAuthorize("(authentication.principal.equals(#ticket.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_TICKET')")
+ @PreAuthorize("hasAuthority('VIEW_COMMENTS')")
+ @PreAuthorize("#comment.id == 0 and hasAuthority('CREATE_COMMENT')")
+ @PreAuthorize("(authentication.principal.equals(#comment.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_COMMENT')")
+ @PreAuthorize("hasAuthority('VIEW_ATTACHMENT')")
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#message.user) and " +
+ @PreAuthorize("hasAuthority('VIEW_CHAT_REQUESTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/geiner/quipucamayoc2014/commit/8504bdd7a97e4200e1089a36e47f73a7c7b46b3b

[COMMIT MESSAGE]:subiendo proyecto||subiendo
=========================================================

+ @PreAuthorize("hasAnyRole('admin')")
+// @PreAuthorize("hasRole('user')")
+ @PreAuthorize("hasAnyRole('admin')")
+// @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ // @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasAuthority('userperfil')")
+ @PreAuthorize("hasRole('userperfil')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/e1edb9fd0b823d1727d36a3a25e3579659f6911d

[COMMIT MESSAGE]:s6-v1||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.username == #username")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.id == #id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=41&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/95578655536308b97232a668745c5fda6eb71e1c

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PreAuthorize("hasAnyRole('GROUP_ADMINISTRATORS', 'BLOG_CONTRIBUTORS')")
+ @PreAuthorize("hasAnyRole('SITE_MEMBERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/3c64567642d3ef3b666c67423cfccaa7c0275546

[COMMIT MESSAGE]:Way more stuff.||
=========================================================

+ @PreAuthorize("hasRole('SITE_MEMBERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/81ec53bb9f23c4c97eb26d41c010a3f64cc5ebb2

[COMMIT MESSAGE]:News group||
=========================================================

- @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
+ @PreAuthorize("hasAnyRole('GROUP_ADMINISTRATORS', 'BLOG_CONTRIBUTORS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/c38e6393182ff8200d83e033fec9c1d4aeed9879

[COMMIT MESSAGE]:More move around.||
=========================================================

- @PreAuthorize("hasRole('SYSTEM_ADMINISTRATORS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/f7be98bf39edf9f051fdb34098931e2b0eb30f06

[COMMIT MESSAGE]:Merged ads and resources.||
=========================================================

- @PreAuthorize("hasRole('SYSTEM_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('SYSTEM_ADMINISTRATORS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/e261dd06ba9ae3968b1f1f39bad153477d6ded67

[COMMIT MESSAGE]:Back-end for ads.||
=========================================================

+ @PreAuthorize("hasRole('SYSTEM_ADMINISTRATORS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/565507dcceaecc7f05451b230f79d7e5020ae08a

[COMMIT MESSAGE]:Finished up news.||
=========================================================

+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/86565ea1e02eeb3f419464265a595c0c75b582e8

[COMMIT MESSAGE]:News!||
=========================================================

+ @PreAuthorize("hasRole('SITE_MEMBERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/0e63029cc6f9ff6ae3d74d6c60db887c8ae88138

[COMMIT MESSAGE]:Massive security update.||
=========================================================

- @PreAuthorize("hasRole('ROLE_BASIC_USER')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
- @PreAuthorize("hasRole('ROLE_BASIC_USER')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('SYSTEM_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")
+ @PreAuthorize("hasRole('GROUP_ADMINISTRATORS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/dad03b5f273fd056cecfa1164dd686a81ca803ff

[COMMIT MESSAGE]:Added DAO layer to get method-based Spring security working. Some cli…||…ent page changes.
=========================================================

+ @PreAuthorize("hasRole('ROLE_BASIC_USER')")
+ @PreAuthorize("hasRole('ROLE_BASIC_USER')")
+ @PreAuthorize("hasRole('ROLE_BASIC_USER')")
- @PreAuthorize("hasRole('ROLE_BASIC_USER')")
- @PreAuthorize("hasRole('ROLE_BASIC_USER')")
- // @PreAuthorize("hasRole('ROLE_BASIC_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/e1edb9fd0b823d1727d36a3a25e3579659f6911d

[COMMIT MESSAGE]:s6-v1||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.username == #username")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.id == #id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/ddf2e91c4fc1e591880ca365400eed2e89619920

[COMMIT MESSAGE]:s6-v2||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.username == #username")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.id == #id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/908e47eab3a79947231a81c553829c4192bb26e0

[COMMIT MESSAGE]:s6-v3||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.username == #username")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal.id == #id")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8beccd3b26bf1f10b74e7640a416027a7d5e3cde

[COMMIT MESSAGE]:MIFOS-3040: fix failing acceptance tests for funds and add spring sec…||…urity for view and create fund service facade methods
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/de12522d301fd52e3f42af29d1bc9417983f803d

[COMMIT MESSAGE]:MIFOS-3040: hook in viewFunds.ftl in place of old implementation||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/f91e6b5bfb2bad6c839f9903d64a1f3e68894d8a

[COMMIT MESSAGE]:오류 수정||
=========================================================

- @PreAuthorize("hasRole('MASTER')")
+ @PreAuthorize("hasRole('MASTER,CENTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/0c64eb1324d4369171ab8967b80ba925f0ed24a4

[COMMIT MESSAGE]:ddd||
=========================================================

+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/ac349534996728e937d9bea8c7d0bfffa861e8de

[COMMIT MESSAGE]:Merge remote-tracking branch 'origin/JangHyeon' into hy||Conflicts:
	HACO_System/.settings/org.eclipse.jdt.core.prefs
	HACO_System/pom.xml
	HACO_System/src/main/java/kr/co/haco/Controller/AccountController.java
	HACO_System/src/main/java/kr/co/haco/Controller/ManagementController.java
	HACO_System/src/main/java/kr/co/haco/DAO/AccountDAO.java
	HACO_System/src/main/java/kr/co/haco/Mybatis/sqlmapper/Acount.xml
	HACO_System/src/main/java/kr/co/haco/Service/AccountService.java
	HACO_System/src/main/java/kr/co/haco/Service/AccountServiceImpl.java
	HACO_System/src/main/webapp/resources/js/upload.js
=========================================================

+ @PreAuthorize("hasAnyRole('GUEST','STUDENT')")
+ @PreAuthorize("hasAnyRole('GUEST','STUDENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/92325a7261ffaa5cb67164605fb84bb9da36e72e

[COMMIT MESSAGE]:hyo!||
=========================================================

+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+@PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/9a67d3f3f41a99e4373b59f0b38721bd0d2b0e24

[COMMIT MESSAGE]:hodorrr||
=========================================================

+ @PreAuthorize("hasAnyRole('GUEST','STUDENT')")
+ @PreAuthorize("hasAnyRole('GUEST','STUDENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/e151d7fbcc09c6774e6d943e22e9ff126721679d

[COMMIT MESSAGE]:Revert "dtd"||This reverts commit 145dc78.
=========================================================

- @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
- @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
- @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/145dc78c99bbee969a09150363bfd147098f161c

[COMMIT MESSAGE]:dtd||
=========================================================

+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JangHyeon/HACO/commit/2d19f1107f6f2ac3e230e49314e0974c19a04dc4

[COMMIT MESSAGE]:new setting||
=========================================================

+ @PreAuthorize("hasRole('MASTER')")
+ @PreAuthorize("hasAnyRole('TEACHER','MANAGER','CENTER','MASTER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#article.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#article.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#comment.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#comment.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=42&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/peengtao123/pt/commit/c73a815b3d628a569f36401839d7576c2b7f008b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectId, 'isAccessibleProjectId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayId, 'isAccessibleAssayId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('SUBMITTER')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#originalUser.id == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=43&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/javasparx/BoilerplateSpringGwtBootstrap/commit/8a15dfe5e368aa81e02d9e63e4e62184664506a4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/peengtao123/pt/commit/c73a815b3d628a569f36401839d7576c2b7f008b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/5a64b721003be14e18dc828857b689b8e6e74db1

[COMMIT MESSAGE]:Connection Status program added, source clean||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/afe959a4e13a7e4e9232b9cd2f61b071a58e7efd

[COMMIT MESSAGE]:Add delete log record, add the account lock off, clean source||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/234771f25ab558cef86488e80fc38ae26a5e03fa

[COMMIT MESSAGE]:Development of log history||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/22eec7f73d61bc140d0658d84ed49d01b32e7b51

[COMMIT MESSAGE]:Add error handling, session timeout more||
=========================================================

- //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")// 유효한 인증된 사용자만이 접근
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
+ @PreAuthorize("#user.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#user.email == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/a5141bfbbb2343be7f3b10d92c400eec3353aacd

[COMMIT MESSAGE]:method secutiry check added||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근

=========================================================
[CODE-CHANGE-URL]:https://github.com/tony78it/homir/commit/016dcf40defb249d61983511d42522bc154c54ae

[COMMIT MESSAGE]:start on security config||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/peterarsentev/Spring-Security-Acl-MongoDB/commit/18b8fc5fb4300c9fee927488a7bfe8c5c5ed5c8a

[COMMIT MESSAGE]:added the login page, client page, create client dialog||
=========================================================

+ @PreAuthorize("hasPermission(#t, 'create')")
+ @PreAuthorize("hasPermission(#t, 'update')")
+ @PreAuthorize("hasPermission(#t, 'delete')")
- @PreAuthorize("hasPermission(#pet, 'create')")
- @PreAuthorize("hasPermission(#pet, 'update')")
- @PreAuthorize("hasPermission(#pet, 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Milan26/music-library/commit/2dda9e52ee6c907063bc0adb80bae00066466b81

[COMMIT MESSAGE]:services are now secured with spring Pre-Post annotations||
=========================================================

+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("authentication.principal.username.equals(#userDto.email) or hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('VIEW')")
+ @PreAuthorize("hasAuthority('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TuukkaP/springtyovuoro/commit/bea0c9421d87577571bafcfdfe345ab0484a82a8

[COMMIT MESSAGE]:Vuorojen vahvistus lisatty seka vuorokasittelija rooli||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_PHARMACY', 'ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ORDERADMIN', 'ROLE_PHARMACY', 'ROLE_ADMIN')")
- @PreAuthorize("authentication or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TuukkaP/springtyovuoro/commit/9667c264e0d4c4b8c60ef775e47a5a6df51bc7ce

[COMMIT MESSAGE]:Spring security ja roolitukset||
=========================================================

- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("hasRole('ROLE_MODERATOR')")
+// @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("authentication or hasRole('ROLE_ADMIN') or #username == authentication.name")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("authentication or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("hasRole('ROLE_ADMIN') or #user.username == authentication.name")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN') or #user.username == authentication.name")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("authentication or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TuukkaP/springtyovuoro/commit/f00d9cd7ccda1d99fd247f270416736563ea5dd0

[COMMIT MESSAGE]:Spring security ja ToDo||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("#contact.name == authentication.name")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=44&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/antoinecarton/play/commit/9c35994d4fa274dac0465d846cf0b84c973bcdd0

[COMMIT MESSAGE]:Modification annotations sécurisation||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
-@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/antoinecarton/play/commit/800ad6d2688eb51334ada7665a836ba034b49bfc

[COMMIT MESSAGE]:Ajout d'annotations pour sécuriser les services||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/honzikm/wpa/commit/d7e71706a1d172b6e58180f39fddb03b6a0d1e44

[COMMIT MESSAGE]:wpa semestralka||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/490d7096a6b7258624d5a2786c32360187ed0779

[COMMIT MESSAGE]:Fixed whitelisting approach to AccountService.||
=========================================================

+@PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/94b06176439385e78dca18647655727f6444ed2e

[COMMIT MESSAGE]:Added Account functionality.||
=========================================================

+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/78081a712634d66f72d0c4367485c42c9294dc09

[COMMIT MESSAGE]:Added 002-securing-views.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/30b6b8d6c2fc853976740125cd2808c3557517e1

[COMMIT MESSAGE]:Added 003-securing-web-resources.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/a79dc2dde57d34fe478c83e01a9fef7fe67941d9

[COMMIT MESSAGE]:Added 004-method-authorization-using-acls.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("(hasPermission(#message, write) and #message.visible) or hasPermission(#message, admin)")
+ @PreAuthorize("hasPermission(#message, admin)")
+ @PreAuthorize("hasPermission(#message, delete)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/1ca75a3cb5f864a58533b1d1eebb44b61a98f928

[COMMIT MESSAGE]:Added 005-view-authorization-using-acls||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("(hasPermission(#message, write) and #message.visible) or hasPermission(#message, admin)")
+ @PreAuthorize("hasPermission(#message, admin)")
+ @PreAuthorize("hasPermission(#message, delete)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/133bc4917e21b8d860f0fed72f4b54b8fc2ac47c

[COMMIT MESSAGE]:Added Message Deletion functionality.||
=========================================================

+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/bb0b88fddf6f9f99610566154eae56c0f9b77819

[COMMIT MESSAGE]:Added block/unblock message functionality.||
=========================================================

+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/a28b60478509d94bd68e22dd25cf35e035ba6c38

[COMMIT MESSAGE]:Added Edit Message Functionality.||
=========================================================

+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/20f1a95615c6268aff8627410a63b2d0db177df9

[COMMIT MESSAGE]:Added Message Posting functionality.||
=========================================================

+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/bf37c8348209921bdf7e2b1c8d060cf1e7fb9235

[COMMIT MESSAGE]:001-securing-service methods work in progress.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/78081a712634d66f72d0c4367485c42c9294dc09

[COMMIT MESSAGE]:Added 002-securing-views.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=45&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/78081a712634d66f72d0c4367485c42c9294dc09

[COMMIT MESSAGE]:Added 002-securing-views.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/30b6b8d6c2fc853976740125cd2808c3557517e1

[COMMIT MESSAGE]:Added 003-securing-web-resources.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sip1code/commit/0c107d74c510f4dc9c3ace38d2e14e7cf318867b

[COMMIT MESSAGE]:首次更新||同步源代码到一个库下
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/747de19e8e390f91ca74ad5d28b8abf258493086

[COMMIT MESSAGE]:Bugfix: update index when changing the permission||
=========================================================

-@PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#object,'ADMINISTRATION'))")
-@PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#entity,'ADMINISTRATION'))")
+@PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#entity,'ADMINISTRATION'))")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/9f186fdbace60cecada0d35b805d9ae819785fcb

[COMMIT MESSAGE]:new simpler permission system||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+@PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','READ')")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#object,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/824496b5f23044714ee850b673d78c5ee9f32c1d

[COMMIT MESSAGE]:Enhancement: Improve performance of PhenotypeDetailView||The PhenotypeDetailView requires to load a deep domain graph in oder to display
the Histogram and the GeoChart. (Trait -> ObsUnit -> Stock -> Passport ->
Locality/Allele->AlleleAssay.

This lead to many SQL queries (N+1 problem). To improve performance two things
were done:

1.) Create a View (view_phentoype_statistics) and corresponding JPA2 entities
(TraitStats,TraitStatsRepository) to load all necessary information with one
select. Instead of Trait,TraitStats is used in the PhenotypeDetailView.

2.) Add BatchSize and FetchMode (JOIN) to the involved entities (Passport, ObsUnit
This will improve performance in the BasicStudyWizard where TraitStats can't be
used because Study expects Trait instances.

This closes #17
=========================================================

+ @PreAuthorize("hasPermission(#phenotypeId,'com.gmi.nordborglab.browser.server.domain.phenotype.TraitUom','READ')")
+ @PreAuthorize("hasPermission(#phenotypeId,'com.gmi.nordborglab.browser.server.domain.phenotype.TraitUom','READ')")
+ @PreAuthorize("hasPermission(#phenotypeId,'com.gmi.nordborglab.browser.server.domain.phenotype.TraitUom','READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=46&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/lintubongarit/sulka/commit/08818d3ca6a153fa65a444cc59688c42f13c6786

[COMMIT MESSAGE]:fix tests, rename all addRecovery => addRecoveries||
=========================================================

- @PreAuthorize("hasAnyRole('USER')")
+ @PreAuthorize("hasAnyRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lintubongarit/sulka/commit/cf6eeed7a369fe7f8110de3ca1316855a91aec3b

[COMMIT MESSAGE]:merge HomeController and AddRingingContoller||
=========================================================

- @PreAuthorize("hasAnyRole('USER')")
+ @PreAuthorize("hasAnyRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/giacomomarciani/mapily/commit/06eb1ac6f73fa52b84ed644889882241e17416e9

[COMMIT MESSAGE]:Spots and Bids||
=========================================================

- @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
- @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/giacomomarciani/mapily/commit/06eb1ac6f73fa52b84ed644889882241e17416e9

[COMMIT MESSAGE]:Spots and Bids||
=========================================================

- @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
- @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_SPOTTER')")
+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/42632c58c6e74e9326e7adc439e764ccf15577c5

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dissdoc/ptm/commit/1ce80b3a5f5b0d8c818d42785d012922b21d2d3c

[COMMIT MESSAGE]:update source code from bitbucket||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/8beccd3b26bf1f10b74e7640a416027a7d5e3cde

[COMMIT MESSAGE]:MIFOS-3040: fix failing acceptance tests for funds and add spring sec…||…urity for view and create fund service facade methods
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/de12522d301fd52e3f42af29d1bc9417983f803d

[COMMIT MESSAGE]:MIFOS-3040: hook in viewFunds.ftl in place of old implementation||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=47&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f3b148d21220c444d469139803fb362f32c134cc

[COMMIT MESSAGE]:Implemented the User image upload. All images uploaded here are placed||into a img taggable directory aka they are not secured.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tibetjungle/security/commit/e21ef98ff9285a33bb04e59613c0c49daad568b5

[COMMIT MESSAGE]:init repository||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#domainObject, admin)")
+ @PreAuthorize("hasPermission(#domainObject, admin)")
+ @PreAuthorize("hasPermission(#domainObject, 'delete') or hasPermission(#domainObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jackieLiu/contact/commit/1e421b905c9823611b307730120378ae88865cff

[COMMIT MESSAGE]:init||初始化
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/00341f1eeaf499805d1ffd3165c867db2535032a

[COMMIT MESSAGE]:check read permissions on messages||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/faab5c1c774af6e9912c32f5975f344583605774

[COMMIT MESSAGE]:adding status resource||
=========================================================

+@PreAuthorize("denyAll")
- //@PreAuthorize("hasPermission('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/javasparx/SpringGwt/commit/f76871e0d61d30209cc72655caa0b4526a40bb00

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=48&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/metadata-stores/commit/0b0571c93a67bfbeff011cfec159a75164201b81

[COMMIT MESSAGE]:Updates with improvements and permissions for the search service.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("hasRole('ROLE_STAFF')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/arunprabu317/RepoGap/commit/f7cfbf9794bc4db958c06ed551827102aa22fea8

[COMMIT MESSAGE]:anular spring||some changes angular spring
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/krao4/spring-sec-aop-jpa-mysql-mongo-int---App/commit/014277af4cf8d8983ea7fa2b5187c5813d931241

[COMMIT MESSAGE]:chained the SOAP and REST services for Spring Integration; Added comm…||…ents and removed redundant code
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/krao4/spring-sec-aop-jpa-mysql-mongo-int---App/commit/78de8489b4dc256c7fa425894d94f03b1722fe6a

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/9fc47bd6e1818055800301759d602f5d931ecd81

[COMMIT MESSAGE]:APPWEB150: Added roles screen to Eclipselink GWT showcase||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/1b76a4e5875d39a592a0e0fa527a0b99c4e7a934

[COMMIT MESSAGE]:Added ROLE dependency (collection) to show collections management wit…||…h hibernate (work in progress)
=========================================================

-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND hasRole('ROLE_ROLE_DISABLE')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND ( (#role.id == 0 AND hasRole('ROLE_ROLE_CREATE')) OR (#role.id != 0 AND hasRole('ROLE_ROLE_EDIT')) )")
+@PreAuthorize("hasRole('ROLE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/f87cf80e65cba08cadd899102fd321252a448188

[COMMIT MESSAGE]:Added ROLE dependency (collection) to show collections management wit…||…h hibernate (work in progress)
=========================================================

+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND hasRole('ROLE_ROLE_DISABLE')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND ( (#role.id == 0 AND hasRole('ROLE_ROLE_CREATE')) OR (#role.id != 0 AND hasRole('ROLE_ROLE_EDIT')) )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ms40866/sapient/commit/014277af4cf8d8983ea7fa2b5187c5813d931241

[COMMIT MESSAGE]:chained the SOAP and REST services for Spring Integration; Added comm…||…ents and removed redundant code
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ms40866/sapient/commit/78de8489b4dc256c7fa425894d94f03b1722fe6a

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/myguel/task-java-advance/commit/7f6552ac139eb57fbf2550ced44a67e397e52c3c

[COMMIT MESSAGE]:add configuracion y auditoria||
=========================================================

+ @PreAuthorize("hasAnyRole('ROL_ADMINISTRADOR', 'ROL_DIRECTOR','ROL_USER')")
+ @PreAuthorize("hasAnyRole('ROL_ADMINISTRADOR', 'ROL_DIRECTOR')")
+ @PreAuthorize("hasAnyRole('ROL_ADMINISTRADOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=49&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/krao4/spring-sec-aop-jpa-mysql-mongo-int---App/commit/014277af4cf8d8983ea7fa2b5187c5813d931241

[COMMIT MESSAGE]:chained the SOAP and REST services for Spring Integration; Added comm…||…ents and removed redundant code
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/krao4/spring-sec-aop-jpa-mysql-mongo-int---App/commit/78de8489b4dc256c7fa425894d94f03b1722fe6a

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/9fc47bd6e1818055800301759d602f5d931ecd81

[COMMIT MESSAGE]:APPWEB150: Added roles screen to Eclipselink GWT showcase||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")
+ @PreAuthorize("hasRole('ROLE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/1b76a4e5875d39a592a0e0fa527a0b99c4e7a934

[COMMIT MESSAGE]:Added ROLE dependency (collection) to show collections management wit…||…h hibernate (work in progress)
=========================================================

-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND hasRole('ROLE_ROLE_DISABLE')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+@PreAuthorize("hasRole('ROLE_ROLE')")
-@PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND ( (#role.id == 0 AND hasRole('ROLE_ROLE_CREATE')) OR (#role.id != 0 AND hasRole('ROLE_ROLE_EDIT')) )")
+@PreAuthorize("hasRole('ROLE_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/f87cf80e65cba08cadd899102fd321252a448188

[COMMIT MESSAGE]:Added ROLE dependency (collection) to show collections management wit…||…h hibernate (work in progress)
=========================================================

+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND hasRole('ROLE_ROLE_DISABLE')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') OR hasRole('ROLE_APP_ACCESS')")
+ @PreAuthorize("hasRole('ROLE_APP_ADMIN_CONSOLE_ACCESS') AND ( (#role.id == 0 AND hasRole('ROLE_ROLE_CREATE')) OR (#role.id != 0 AND hasRole('ROLE_ROLE_EDIT')) )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ms40866/sapient/commit/014277af4cf8d8983ea7fa2b5187c5813d931241

[COMMIT MESSAGE]:chained the SOAP and REST services for Spring Integration; Added comm…||…ents and removed redundant code
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ms40866/sapient/commit/78de8489b4dc256c7fa425894d94f03b1722fe6a

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/d37ec900db3bc5bb3ff8a14dfbfb2477dbb97f90

[COMMIT MESSAGE]:Enhancement: Add support for permissions to AlleleAssay DTO||ACL permissions were added to the AlleleAssay DTO. In addition a new
Permission ("Run") was added to the CustomPermission class. Some additional
tests and a security bugfix for lack of permission check  of the CdvService
findAlleleAsssaysWithStats function were added.
=========================================================

+ @PreAuthorize("hasPermission(#phenotypeId,'com.gmi.nordborglab.browser.server.domain.phenotype.TraitUom','READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/a6b75b29568a6254b2d71b2de53cac2bfa99c0fa

[COMMIT MESSAGE]:Feature: Display of GWAS status was enhanced.||* Instead of displaying the GWAS status below the analysis details, it is displayed next to it.
* Instead of a horizontal ProgressBar a circular ProgressBar (CircularProgressBar.java) is
 used
 * The action dropdown button (Run on HPC) and the status label (N/A, Finished) are
  collapsed into one  DropDownButton. Furthermore additional actions are enabled:
    - Status = 'Error' -> Delete/Re-run
    - Status = 'Finished' -> Delete
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/cac529eb8f83730455a6e3b5aad4461ef7a5e3c6

[COMMIT MESSAGE]:Display phenotype, study and analysis list based on elasticsearch. Th…||…is allows for filtering and searching
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/dfaea8487bc567b92f7725c13e1f4d277188dcc3

[COMMIT MESSAGE]:Introduction of AclManager and refactoring of service methods||
=========================================================

+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasPermission(#gwasResultId,'com.gmi.nordborglab.browser.server.domain.util.GWASResult','READ')")
- @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'edit')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'EDIT')")
- @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'edit')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'EDIT')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ') ")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/11a1a9f1630c3a98ba65c770dc310cbb64310daa

[COMMIT MESSAGE]:Version for playing||
=========================================================

- @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/87f8d12b29cb2b6b8da911d00a7784f53220fae3

[COMMIT MESSAGE]:added core competencies||
=========================================================

+ @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/79d80fe44b6c957877df0f8930b4b0e7927fa8d0

[COMMIT MESSAGE]:in the middle of something||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=50&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/7fb62e8d557e14bbdbb68bff7ddb166882cac1ab

[COMMIT MESSAGE]:laaja-alaisen osaamisen lukitus||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/f9c8e4507d1b573cd333f3889ac4d50155bbd838

[COMMIT MESSAGE]:Uusia rajapintoja ja korjattu bugi perustelistauksen linkkien generoi…||…nnissa
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/78bc0bed8e1564bd2ad758ec246a2662489c11e0

[COMMIT MESSAGE]:Lisätty rajapinta koko perusopetuksen perusteen hakemiseen sisältöineen||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/7fb62e8d557e14bbdbb68bff7ddb166882cac1ab

[COMMIT MESSAGE]:laaja-alaisen osaamisen lukitus||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/490222013d458b57cf596712c33ae389b4363c58

[COMMIT MESSAGE]:perusteen korjaus julkaisun jälkeen||Lisättu KORJAUS-oikeus update-palveluihin (WIP)
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.dto.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#viiteId, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#tov.id, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/2837a31d6ff0a1857bd904d2daf00633819484f6

[COMMIT MESSAGE]:oikeustarkistelukorjauksia||
=========================================================

- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','LUKU')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")
- @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId,'peruste','MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/5450e0174c28788e910686295f437b018e397d42

[COMMIT MESSAGE]:perusopetuksen tekstiosien muokkaus.||
=========================================================

+ @PreAuthorize("hasPermission(#peruste,'peruste','MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/b5e98533104c9452c7c73267d1cd3da83f44074d

[COMMIT MESSAGE]:laaja-alaisten osaamisten CRUD.||Laaja-alaisten osaamisten CRUD. Lisäksi lisätty HTML-merkkauksen validointeja ja tekstikappaleiden UTF8-normalisointi.
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/80694232d168e85a2b4f1c30114ab10cfa157bfd

[COMMIT MESSAGE]:YL perusteen tietomalli ja palvelut, WIP||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/cf45ceb07932d899676540c7a247e315ae04c1e6

[COMMIT MESSAGE]:Adding user message services||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/d37ec900db3bc5bb3ff8a14dfbfb2477dbb97f90

[COMMIT MESSAGE]:Enhancement: Add support for permissions to AlleleAssay DTO||ACL permissions were added to the AlleleAssay DTO. In addition a new
Permission ("Run") was added to the CustomPermission class. Some additional
tests and a security bugfix for lack of permission check  of the CdvService
findAlleleAsssaysWithStats function were added.
=========================================================

+ @PreAuthorize("hasPermission(#phenotypeId,'com.gmi.nordborglab.browser.server.domain.phenotype.TraitUom','READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/a6b75b29568a6254b2d71b2de53cac2bfa99c0fa

[COMMIT MESSAGE]:Feature: Display of GWAS status was enhanced.||* Instead of displaying the GWAS status below the analysis details, it is displayed next to it.
* Instead of a horizontal ProgressBar a circular ProgressBar (CircularProgressBar.java) is
 used
 * The action dropdown button (Run on HPC) and the status label (N/A, Finished) are
  collapsed into one  DropDownButton. Furthermore additional actions are enabled:
    - Status = 'Error' -> Delete/Re-run
    - Status = 'Finished' -> Delete
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/cac529eb8f83730455a6e3b5aad4461ef7a5e3c6

[COMMIT MESSAGE]:Display phenotype, study and analysis list based on elasticsearch. Th…||…is allows for filtering and searching
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/dfaea8487bc567b92f7725c13e1f4d277188dcc3

[COMMIT MESSAGE]:Introduction of AclManager and refactoring of service methods||
=========================================================

+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','EDIT') or hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ')")
+ @PreAuthorize("hasPermission(#gwasResultId,'com.gmi.nordborglab.browser.server.domain.util.GWASResult','READ')")
- @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'edit')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'EDIT')")
- @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'edit')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#gwasResult,'EDIT')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') AND hasPermission(#studyId,'com.gmi.nordborglab.browser.server.domain.cdv.Study','READ') ")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/11a1a9f1630c3a98ba65c770dc310cbb64310daa

[COMMIT MESSAGE]:Version for playing||
=========================================================

- @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/87f8d12b29cb2b6b8da911d00a7784f53220fae3

[COMMIT MESSAGE]:added core competencies||
=========================================================

+ @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/79d80fe44b6c957877df0f8930b4b0e7927fa8d0

[COMMIT MESSAGE]:in the middle of something||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/prosdl/simmft/commit/1d77ec8d5a52a50bdaaa50ef08a9b679aa94a05e

[COMMIT MESSAGE]:ReadFile implemented.||
=========================================================

+ @PreAuthorize("hasRole('mft:storage:read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/prosdl/simmft/commit/174bfc21413f80842b9548e7c3e4e2fd35f1afdb

[COMMIT MESSAGE]:Added StorageService.||
=========================================================

+ @PreAuthorize("hasRole('mft:storage:write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/8980a44a43630e2b826d72af8a112047bf469c53

[COMMIT MESSAGE]:javaee: Reddit: downvoting||
=========================================================

+ @PreAuthorize("hasPermission(#submission, 'vote')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/819ed4b9605b6cea24d86302532a889bf92ac595

[COMMIT MESSAGE]:javaee: Reddit: głosowanie (upvote), generowanie metamodelu JPA||
=========================================================

+ @PreAuthorize("hasPermission(#submission, 'vote')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/231d7cb6f92cae77f66a53d0c57f15f447baac26

[COMMIT MESSAGE]:javaee: Reddit: usunięcie niepotrzebnej roli 'user'||
=========================================================

- @PreAuthorize("hasRole('user')")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('user')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/72b7fc1146cbf8613a33e84f96149726c5abcd02

[COMMIT MESSAGE]:javaee: Reddit: możliwość edycji tylko swoich własnych linków||
=========================================================

- @PreAuthorize("hasRole('user')")
+ @PreAuthorize("hasPermission(#submission, 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/543cbe2ed4c7dc456e5fdb1265abed14a015a336

[COMMIT MESSAGE]:javaee: Reddit: rejestracja, zapamiętywanie użytkownika który dodał l…||…ink, Mockito
=========================================================

+ @PreAuthorize("hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/ff4ac4e15292676bc70d510b4e378a1256a81b4c

[COMMIT MESSAGE]:javaee: Reddit: zmiana nazwy użytkownika 'admin' na 'administrator'||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('administrator')")
- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/61697a26dea44424ea44c866293685dbbb25f0b2

[COMMIT MESSAGE]:javaee: Reddit: użycie Criteria API, dodanie pakietu mdettla.reddit.r…||…epository
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/31230825cff5a50f54ae83894e3a92fbd60929e7

[COMMIT MESSAGE]:javaee: Reddit: dodanie roli administratora||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdettlaff/mdettla/commit/97c8e96cb35985f590118f57a5f0c0305fa591e9

[COMMIT MESSAGE]:javaee: Reddit: użycie Spring Security||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=51&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/prosdl/simmft/commit/1d77ec8d5a52a50bdaaa50ef08a9b679aa94a05e

[COMMIT MESSAGE]:ReadFile implemented.||
=========================================================

+ @PreAuthorize("hasRole('mft:storage:read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/prosdl/simmft/commit/174bfc21413f80842b9548e7c3e4e2fd35f1afdb

[COMMIT MESSAGE]:Added StorageService.||
=========================================================

+ @PreAuthorize("hasRole('mft:storage:write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mitreid-connect/trust-framework/commit/c7b0cc495ed0e89310df85b3d443095e5c9398a6

[COMMIT MESSAGE]:added openid-connect authentication layer in front of cards.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sangeeth/springworks/commit/d906fb76c1c19e499884dbe518b1324b63605e20

[COMMIT MESSAGE]:Spring Security Samples using Maven & Eclipse instead of Gradle||https://github.com/SpringSource/spring-security/tree/master/samples/
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/razbomi/boxing-spring-boot/commit/5529952140175ce237cc234d1782df4a5f3b89b5

[COMMIT MESSAGE]:initial commit||Greeting service and file uploads, playing
=========================================================

+ // @PreAuthorize("permitAll")
+//@PreAuthorize("denyAll")
+ // @PreAuthorize("hasRole('ROLE_USER')")
+ // @PreAuthorize("hasPermission(#id, read)")
+ // @PreAuthorize("hasPermission(#id, 'au.org.boxing.boxing.Application', read)")
+ // @PreAuthorize("hasRole('ROLE_USER')")
+ // @PreAuthorize("true")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/b7d0766f4402de605b037a710b6aaea17e1dfa5d

[COMMIT MESSAGE]:Lisätty REST-API ohjeiden hallintaan||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/28dabd65abdbf598096a71e0c106aa6cb4e86979

[COMMIT MESSAGE]:lisää kirjautuneen käyttäjän tietojen API||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/21ed3ccc7b563d8b4f2844c4b98f1f4940ccccb4

[COMMIT MESSAGE]:Lisätty service käyttäjän tietojen hakemiseen ja otettu se käyttöön k…||…ommenttien yhteydessä
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/c9e46653b3c17f045c922b432328d9bf389927e4

[COMMIT MESSAGE]:lisää tuki tekstikappaleen lukitukselle||
=========================================================

+ @PreAuthorize("hasPermission(#ctx.opsId,'opetussuunnitelma','luku')")
+ @PreAuthorize("hasPermission(#ctx.opsId,'opetussuunnitelma','muokkaus')")
+ @PreAuthorize("hasPermission(#ctx.opsId,'opetussuunnitelma','muokkaus')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/47b166173c0cc0c97f8c48f3e2f1331c2020de25

[COMMIT MESSAGE]:Lisätty toiminnallisuus tekstikappaleiden päivittämiseen||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/3799ab9b3c572fb350fc7a22482d7a67234c08c7

[COMMIT MESSAGE]:Lisätty tekstikappalepuu ja metodeja sen muokkaamiseen||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/186e187e3f90d9c35b481c07f18be957b10efd52

[COMMIT MESSAGE]:Lisätty oikeustarkastelut koodisto- ja organisaatioserviceille||
=========================================================

- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/3657b5210ed3a79d470d4266336e0a9a2a7a9939

[COMMIT MESSAGE]:Lisätty REST-controlleri ulkopuolisille palveluille||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/abhishek333/ted-young/commit/903aef6134b523727a04ee6fd83cc361a8bc2ce3

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#document, 'WRITE')")
+ @PreAuthorize("#document.owner.name = principal.name")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=52&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/erick485/ERP_Quipucamayoc/commit/314a8791256fe4712c0e0afca3330a6aeafd1980

[COMMIT MESSAGE]:Gran cambio||
=========================================================

+ @PreAuthorize("hasAnyRole('admin')")
+// @PreAuthorize("hasRole('user')")
+ @PreAuthorize("hasAnyRole('admin')")
+// @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ // @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('userperfil')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasAuthority('userperfil')")
+ @PreAuthorize("hasRole('userperfil')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ssherwood/symptom-mgmt-spring/commit/d4d0b02ceb0dd61b709a6487a0bdbd2085a2a058

[COMMIT MESSAGE]:Initial check-in||
=========================================================

+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/7ee9fa38ad5a4d519dd75c892c03682557d098fc

[COMMIT MESSAGE]:notFound exception and formatted all files||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#learningGoal, 'DELETE') or hasPermission(#learningGoal, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#learningGoal, 'DELETE') or hasPermission(#learningGoal, 'ADMINISTRATION')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')") @Transactional(propagation = Propagation.REQUIRED)
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/a8a375ed5b47ff53c1044d8966561c48bffec680

[COMMIT MESSAGE]:Modificados los botones de CSV y añadidos los permisos de forma masiva||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')") @Transactional(readOnly=false)
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/a7acaa3313efc6f755eea52ca9d861813ae819a9

[COMMIT MESSAGE]:Eliminados comentarios y renombrado los metodos de los controller.||Desde Admin se pueden ver los student por un lado y los professor por otro
Arreglado el botón home de las paginas de error

Implementado el borrado unitario de profesores de un grupo pero
 No mapping found for HTTP request with URI [/dalgs/academicTerm/1/course/1/group/1/user/5/delete.htm]

con
@RequestMapping(value = "/academicTerm/{academicId}/course/{courseId}/group/{groupId}/user/${userId}/delete.htm",method = RequestMethod.GET)

no se porque coge dalgs---
=========================================================

- @PreAuthorize("hasPermission(#academicTerm, 'WRITE') or hasPermission(#academicTerm, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#academicTerm, 'ADMINISTRATION')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#academicTerm, 'DELETE') or hasPermission(#academicTerm, 'ADMINISTRATION')" )
+ @PreAuthorize("hasPermission(#academicTerm, 'ADMINISTRATION')" )
-// @PreAuthorize("hasPermission(returnObject, 'DELETE') or hasPermission(returnObject, 'ADMINISTRATION')" )
- @PreAuthorize("hasPermission(#academicTerm, 'WRITE') or hasPermission(#academicTerm, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#academicTerm, 'ADMINISTRATION')")
-// @PreAuthorize("hasRole('ROLE_USER')")
-// //@PreAuthorize("hasPermission(returnObject, 'DELETE') or hasPermission(returnObject, 'ADMINISTRATION')" )
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#competence, 'DELETE') or hasPermission(#competence, 'ADMINISTRATION')" )
+ @PreAuthorize("hasPermission(#competence, 'ADMINISTRATION')" )
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#competence, 'WRITE') or hasPermission(#competence, 'ADMINISTRATION')")
+// @PreAuthorize("hasPermission(#competence, 'WRITE') or hasPermission(#competence, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#competence, 'ADMINISTRATION')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#competence, 'WRITE') or hasPermission(#competence, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#competence, 'ADMINISTRATION')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_USER')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#degree, 'DELETE') or hasPermission(#degree, 'ADMINISTRATION')" )
+ @PreAuthorize("hasPermission(#degree, 'DELETE') or hasPermission(#degree, 'ADMINISTRATION')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
- // @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/798ae21b509ac85c2af20cf6e5433d0694eed666

[COMMIT MESSAGE]:Diferenciados e implementados professor y coordinador y sus actuacion…||…es sobre group y course respectivamente.

Papelera en group.
Modificadas todos los metods de actividades y funcionando con acls
Arreglado el view de usuarios y añadido un nuevo campo fullname para el checkbox de profesores
Añadido metido en cal para eliminar las autorizaciones de los profesores una vez que se eliminen de un grupo

TODO
Implementar la función del repositorio para eliminar a un profesor de un grupo y el restore y a su vez quitarles el permiso sobre el objeto
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasPermission(#course, 'ADMINISTRATION')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasPermission(#course, 'ADMINISTRATION') or hasPermission(#group, 'ADMINISTRATION') ")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasPermission(#course, 'ADMINISTRATION') or hasPermission(#group, 'ADMINISTRATION') ")
-// @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasPermission(#course, 'ADMINISTRATION') or hasPermission(#group, 'ADMINISTRATION') ")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasPermission(#course, 'ADMINISTRATION') or hasPermission(#group, 'ADMINISTRATION') ")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")
+ @PreAuthorize("hasPermission(#course, 'ADMINISTRATION')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#course, 'ADMINISTRATION') or hasPermission(#group, 'ADMINISTRATION') ")
+ @PreAuthorize("hasPermission(#group, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#group, 'ADMINISTRATION')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#degree, 'WRITE') or hasPermission(#group, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#group, 'WRITE') or hasPermission(#group, 'ADMINISTRATION')")
- @PreAuthorize("hasPermission(#degree, 'DELETE') or hasPermission(#group, 'ADMINISTRATION')" )
+ @PreAuthorize("hasPermission(#group, 'DELETE') or hasPermission(#group, 'ADMINISTRATION')" )
- // @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/691c8663273f5f332ce4c736bfbdcabb87abb5ff

[COMMIT MESSAGE]:Add Users and Professors to a Group Working!||
=========================================================

+ @PreAuthorize("hasPermission(#group, 'WRITE') or hasPermission(#group, 'ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/28e0a19e1ea4a8b3630da0859765058d683dc2df

[COMMIT MESSAGE]:detected failures (see README.md)||Changes in group for adding professors (NOT FINISHED)
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasPermission(#degree, 'WRITE') or hasPermission(#degree, 'ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#degree, 'WRITE') or hasPermission(#group, 'ADMINISTRATION')")
+ @PreAuthorize("hasPermission(#degree, 'DELETE') or hasPermission(#group, 'ADMINISTRATION')" )
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/2d1b7b650117e4538a6823c9480dc20a9bfaf1d4

[COMMIT MESSAGE]:Renombrado proyecto.||Reorganizacion de los módulos.

Funcionando.

TODO
Next Step ---- Poner todos en todos los services de los módulos el estilo del de academic term (se deben pasar los objetos)
=========================================================

-// @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_PROFESSOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/springinpractice/sip07/commit/d656ea1a0dfb8f919aa7a42d084a41d8e15f5b8b

[COMMIT MESSAGE]:Moving classes from SVN to git.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=53&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/francarl/MonProvv/commit/b62eb676e8587da9394168bf09054f431d23e37f

[COMMIT MESSAGE]:Implementazione sicurezza||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'modifica')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#id, 'modifica')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adriangonz/SORception/commit/f168c1bb18b852fe734b47c2b3fccff7751c8645

[COMMIT MESSAGE]:Empiezo con autorizaciones||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAnonymous() || hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/xfcjscn/infra-server/commit/ad3074f0741abc3d99d87f5e64925d877d78b987

[COMMIT MESSAGE]:add SSChecker||
=========================================================

+ @PreAuthorize("hasPermission(#target, #method)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/prafulmantale/MobileDevelopment/commit/fceb5dfe6211c3261da55a6b56c345cfb17930b9

[COMMIT MESSAGE]:dhpn||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/drinkit/drinkIt/commit/85e74934f527135121f412f15ad9b695dcbfc299

[COMMIT MESSAGE]:moving to mongodb: restructure||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ShiraazMoollatjie/spring-security-sessions/commit/cb7357a808dce5814853701a44cbfb3676e260af

[COMMIT MESSAGE]:* Finally got the method level security to work.||* Removed the Interface for Method Level Security
* The In Memory Authentication Provider uses a role_user instead of a role_admin now.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ShiraazMoollatjie/spring-security-sessions/commit/984dff15fe49891dff0cd09d62b9e3f3bde5e298

[COMMIT MESSAGE]:* Playing with Spring method level security, does not work at the mom…||…ent if i add <global-method-security/>. The MethodLevelSecurityController is split into an interface and an implementation so far.

* Removing all the default templating added with IntelliJ on new files.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ahmadrgb/EWS-interview/commit/c8516052b417642a713a953a221ab81a8477063f

[COMMIT MESSAGE]:added our project||this is our project
=========================================================

+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKETS')")
+ @PreAuthorize("hasAuthority('VIEW_TICKET')")
+ @PreAuthorize("#ticket.id == 0 and hasAuthority('CREATE_TICKET')")
+ @PreAuthorize("(authentication.principal.equals(#ticket.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_TICKET')")
+ @PreAuthorize("hasAuthority('VIEW_COMMENTS')")
+ @PreAuthorize("#comment.id == 0 and hasAuthority('CREATE_COMMENT')")
+ @PreAuthorize("(authentication.principal.equals(#comment.customer) and " +
+ @PreAuthorize("hasAuthority('DELETE_COMMENT')")
+ @PreAuthorize("hasAuthority('VIEW_ATTACHMENT')")
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#user) and " +
+ @PreAuthorize("authentication.principal.username.equals(#message.user) and " +
+ @PreAuthorize("hasAuthority('VIEW_CHAT_REQUESTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/359c3bbdc19b248c88c59c23ccf0333426b9e924

[COMMIT MESSAGE]:Added delete and update to Tour.||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/11f9a4a07454c45b70cdc7dfee6590c101b5e9fc

[COMMIT MESSAGE]:SQL Changes:||-location_lat/location_long are now decimal(16,8) up from float
-artist_name is now varchar(200) up from 100
-title is now varchar(100) up from 50
-description is now varchar(10000) up from 255
-tags are now varchat(512) up from 300
-ALL varchar(50) upgraded to varchar(100)

JavaChanges:
-Updated ArtObjEntity and POJO to use BigDecimal rather than float for lat/long
-Added resource for list upload JSON in resource/services
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/b2c0159a72d1082c63f5e01b0f4a07de1da35787

[COMMIT MESSAGE]:Image upload fully implemented for art objects.||
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#artObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/377b8970112c9a4ec48cb65464b1f60164f79abc

[COMMIT MESSAGE]:Splitting up PublicArtBackend||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=54&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/359c3bbdc19b248c88c59c23ccf0333426b9e924

[COMMIT MESSAGE]:Added delete and update to Tour.||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/11f9a4a07454c45b70cdc7dfee6590c101b5e9fc

[COMMIT MESSAGE]:SQL Changes:||-location_lat/location_long are now decimal(16,8) up from float
-artist_name is now varchar(200) up from 100
-title is now varchar(100) up from 50
-description is now varchar(10000) up from 255
-tags are now varchat(512) up from 300
-ALL varchar(50) upgraded to varchar(100)

JavaChanges:
-Updated ArtObjEntity and POJO to use BigDecimal rather than float for lat/long
-Added resource for list upload JSON in resource/services
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/b2c0159a72d1082c63f5e01b0f4a07de1da35787

[COMMIT MESSAGE]:Image upload fully implemented for art objects.||
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#artObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/377b8970112c9a4ec48cb65464b1f60164f79abc

[COMMIT MESSAGE]:Splitting up PublicArtBackend||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3189da64f3ee3d31364b55366d948f7809596573

[COMMIT MESSAGE]:[MIFOS-4220] Displaying unapplied contraction scripts in system prope…||…rties
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/38629af3a0c2dcca0bfad00c8e89d80c92287701

[COMMIT MESSAGE]:FIX MIFOS-3478: Make Mifos Database Version a link to a page that dis…||…plays rows in applied_upgrades

Also removed number formatting in system info page for database version
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/126a747bca7428bdaf514e73c4c28d5dfa41fab6

[COMMIT MESSAGE]:MIFOS-4552: fix checklist functionality for edit and create||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8aecdd343972e376090d12612f4091e90d00d03b

[COMMIT MESSAGE]:MIFOS-4385: service facades around update of checklist||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9a4afe3fcd8920b1225cd3c2645554fe52c31188

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for creation of check lists||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3016add2b18c4ff27fedd83f6a0fc978df21e0b8

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3fd114346c44167fca5e8691fb38614e954a2339

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=55&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danhuru/Notifier/commit/e70f159d7b93549422c76acb68d319df82696396

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_CUSTOMER')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_REPORT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:EXPORT_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("!#this.this.incident.finished || hasRole('ROLE:ENT:ADMIN_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:SEND_INCIDENT_NOTIFICATION')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_DASHBOARD')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENTS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_INCIDENT_MIR')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USERS')")
+ @PreAuthorize("hasRole('ROLE:ENT:VIEW_USER')")
+ @PreAuthorize("hasRole('ROLE:ENT:EDIT_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3189da64f3ee3d31364b55366d948f7809596573

[COMMIT MESSAGE]:[MIFOS-4220] Displaying unapplied contraction scripts in system prope…||…rties
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/38629af3a0c2dcca0bfad00c8e89d80c92287701

[COMMIT MESSAGE]:FIX MIFOS-3478: Make Mifos Database Version a link to a page that dis…||…plays rows in applied_upgrades

Also removed number formatting in system info page for database version
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/126a747bca7428bdaf514e73c4c28d5dfa41fab6

[COMMIT MESSAGE]:MIFOS-4552: fix checklist functionality for edit and create||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/8aecdd343972e376090d12612f4091e90d00d03b

[COMMIT MESSAGE]:MIFOS-4385: service facades around update of checklist||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/9a4afe3fcd8920b1225cd3c2645554fe52c31188

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for creation of check lists||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3016add2b18c4ff27fedd83f6a0fc978df21e0b8

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3fd114346c44167fca5e8691fb38614e954a2339

[COMMIT MESSAGE]:MIFOS-4385: service facade refactoring for check lists||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/spring-test-example/commit/572e290ec3f67ab97585a498420155e1cdd449bf

[COMMIT MESSAGE]:Added EmployeeEventHandler||Renamed parameter for findOne
Added MethodSecurity to the dispatcher servlet
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and #employeeId == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and #id == principal.id )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/bc1486e77c8b95b0b8c0ff872f7d9ce46d4a7289

[COMMIT MESSAGE]:Feature: Candidate gene list enrichment analysis added||Now it is possible to run candidate gene list enrichment analysis for a set of
gwas-results or a set of candidate gene lists. The analysis is done by sending a
message to the message-broker. The celery worker will run it. Furthermore it is
now possible to display the list of enrichments on the Experiment/Phenotype
and Study level.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','READ'))")
+ @PreAuthorize("hasPermission(#entity,'READ')")
+ @PreAuthorize("hasPermission(#entity,'READ')")
+ @PreAuthorize("hasPermission(#entity,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/8e84f6d625200218d2640cbac9b471f7d23c266d

[COMMIT MESSAGE]:Feature: Upload functionality added to candidate gene list||Users can now upload csv containing one column with gene ids. They will be added to the
 candidate gene list.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','EDIT') or hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/79a74b3fd1d7b875b3272ebf54cc2f1915e9fe5c

[COMMIT MESSAGE]:Candidate gene list||Basic functionality for creating candidate gene lists was added. Users can create new lists, add genes and share with other users.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#candidateGeneList.id == null or hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")
+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','READ')")
+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.util.CandidateGeneList','READ')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#candidateGeneList,'EDIT') or hasPermission(#candidateGeneList,'ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/0e9e572fe8860eaa37d764aba12ef442f5274bea

[COMMIT MESSAGE]:adicionado teste de controle de acesso para recursos de Accountmanager||
=========================================================

+ @PreAuthorize("hasPermission(#accountId, 'Account.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/edf74a845868265c577b3e69d4b2b82ec565ebd4

[COMMIT MESSAGE]:adicionado testes para controle de acesso a recursos de conta e siste…||…ma de contas. algumas refatoracoes foram feitas
=========================================================

+ @PreAuthorize("hasPermission(#account, 'Account.read')")
+ @PreAuthorize("hasPermission(#profile, 'Profile.read')")
+ @PreAuthorize("hasPermission(#id, 'AccountSystem.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/677eb0110a676f2117242f0d13f37c77b84e9218

[COMMIT MESSAGE]:adicionada camada de seguranca de controle de acesso do spring. verif…||…icacao de acesso ao conta implementada. falta outras verificacoes
=========================================================

+ @PreAuthorize("hasPermission(#accountId, 'Account.read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=56&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/loki2302/spring-security-experiment/commit/4ecd75c1ece4b4e0de04029f29a7183a608c1744

[COMMIT MESSAGE]:Added a NoteService and related tests to check what it looks like in …||…more realistic scenarios
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and #note.owner.equals(principal)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/attilacsanyi/pizzashop-security/commit/6c400a050d76077b9551f4f4dcac18f567473b1f

[COMMIT MESSAGE]:Apply security features with scenarios||
=========================================================

+ @PreAuthorize("!(authentication.name == 'tim'" +
+ @PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/050e14cea6a62061358382bd41d0297cff93a450

[COMMIT MESSAGE]:MIFOS-4190: add service facades for retrieving change logs for center||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/6015c4e0cdbde9b043281bb0844596d41e3ba516

[COMMIT MESSAGE]:MIFOS-4190: add service facades around applying charges and reverting…||… charges on customer accounts.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/einherjer-uy/spring-security-sample/commit/03b7347f63e5926a0ad92e71c500440119d33ccd

[COMMIT MESSAGE]:fixes||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated")
- @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/einherjer-uy/spring-security-sample/commit/890ef695973affc2df0a52d3c979f4345f977f73

[COMMIT MESSAGE]:first draft||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhihaoXian/pluggable/commit/416b94dd88b0024a6f7fe039c7baabd90672c34a

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chavesrodolfo/adminApp/commit/d919e8ef51b86645a9500e4566c3b3c3e22a4b90

[COMMIT MESSAGE]:Base64Service, AuthenticationService||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=57&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/nguyenkhadl/SpringMVC-Hibernate-Bootstrap-AngularJS/commit/d2f10d143e2386e41dacd78661977c6be784f89f

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/ab2a98580f8ac2e53384d19c353ddeb2f415b6dd

[COMMIT MESSAGE]:added TarnsferApplication Resource||cleaning getMyUser
=========================================================

+ @PreAuthorize("hasPermission(#transferApplication, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#transferApplication, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#transferApplication, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/64464cd74047449e8ad9444ad9a48c6cb5bb4367

[COMMIT MESSAGE]:merge Restful Core Authorities||added function to get lists by application id for coursework
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#activity, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#activity, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#activity, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#application, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#application, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#child, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#child, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#child, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#coursework, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#coursework, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#coursework, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#employment, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#employment, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#employment, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#scholarship, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#scholarship, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#scholarship, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#university, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#university, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#university, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/51197e74e487e95c6e125ad088bb37b9a4f31578

[COMMIT MESSAGE]:Added functionality to return List of applications with file names in…||…cluded

Fixed logical problems for generating pdfs
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#activity, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#activity, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#activity, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#application, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#application, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#application, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#award, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#child, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#child, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#child, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#coursework, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#coursework, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#coursework, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#employment, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#employment, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#employment, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#scholarship, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#scholarship, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#scholarship, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#university, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#university, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#university, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#volunteer, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/e7f8b3bc074bcd997e68d52295ea712590304ca4

[COMMIT MESSAGE]:Possible to find by borrower||
=========================================================

- @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jluigonz/angular_bootstrap_spring/commit/77dc5515332a50b043578c4b314d63eb19a2723b

[COMMIT MESSAGE]:Primer commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=58&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/e34537c98e96781344cc9405e8d48fb1951f50eb

[COMMIT MESSAGE]:updates||
=========================================================

+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/081485c8bcd15bf167af5e7f045e652147ae07d2

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/0980c9dd51db337ead4843c071e4c050576c976a

[COMMIT MESSAGE]:No commit message||
=========================================================

-@PreAuthorize("denyAll")
+//@PreAuthorize("denyAll")
- @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+ @PreAuthorize("hasRole('AUTHORITY_USER')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/7199a7726919c44ba639a93b44b3c47388b2c7f0

[COMMIT MESSAGE]:updates||
=========================================================

-@PreAuthorize("denyAll")
- @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/elvis9xu/xjd-note/commit/c10ca5e09ccef99329ef7c64a3434e9da533fa1f

[COMMIT MESSAGE]:auth tmp finish||auth部分先进行到这，后期需要改进:
1. 使用token机制
2. 安全cookie支持
4. 使用spring-security
5. 支持OAuth2.0

马上要进行的是研究一个富客户端, 然后创建web应用
=========================================================

+ @PreAuthorize("test")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/f3b148d21220c444d469139803fb362f32c134cc

[COMMIT MESSAGE]:Implemented the User image upload. All images uploaded here are placed||into a img taggable directory aka they are not secured.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vishnumanohar7/dcCore/commit/abca8df4e8c45743f34768e6d08f95edb61b895f

[COMMIT MESSAGE]:| Vishnu | added current files to repository||
=========================================================

+ @PreAuthorize("hasRole('user')")
+ @PreAuthorize("hasRole('DC_User')")
+ @PreAuthorize("hasRole('DC_User')")
+ @PreAuthorize("hasRole('DC_User')")
+// @PreAuthorize("hasRole('user')")
+// @PreAuthorize("hasRole('user')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=59&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dminarik/Webbox/commit/cfca64757fcb10de378bcff6ba33f192a7e2f7df

[COMMIT MESSAGE]:Added basic spring security||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/az-ss/Spring-Security-Example/commit/0df533a340b840b51a64c6754c5a2fcb997509c5

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atais/PP-JSON/commit/89c35bb33f65d3b8fb789ef0acbf951647f2c078

[COMMIT MESSAGE]:Hack for transactions||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atais/PP-JSON/commit/1fd0c5b5a9c507b1c3ef100e8285e117790bc368

[COMMIT MESSAGE]:huge||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e08b2fabc7e37ff747c444cabeee17e5bd32deba

[COMMIT MESSAGE]:Kielitarjonta||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e4cef47e296700e427c1de7d6339bf5d32bdf9f1

[COMMIT MESSAGE]:Lisätty endpoint ja toteutus ops:n tilasiirtymille||
=========================================================

+ @PreAuthorize("hasPermission(#id, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/921723964ef4e0927615e6a734e3a702160ced0d

[COMMIT MESSAGE]:lisää oikeustarkistelu||Oikeustarkistelun ensimmäinen keskeneräinen versio.
=========================================================

- @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("(#tyyppi == T(fi.vm.sade.eperusteet.ylops.domain.Tyyppi).OPS and hasPermission(null, 'opetussuunnitelma', 'LUKU')) || " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/f34792710aa06d43c3a7e9e38a43624c53cc9b65

[COMMIT MESSAGE]:palauta vain suppea muoto opslistauksissa||
=========================================================

- @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/5fd86d8187702ad1367979b870de29931687fbfe

[COMMIT MESSAGE]:Poistettu duplikaattimetodi REST-apista||
=========================================================

- @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/ae8a7c733a864b8c97c3f6cf916cdf24018fa173

[COMMIT MESSAGE]:poista turhia luokkia||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/103420c5ddd1340c09654b643d8d3c1ec176c5d9

[COMMIT MESSAGE]:lisää API laajaalaisille osaamisille||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/d128be557da0320b4074952a56fea3a0f79448fe

[COMMIT MESSAGE]:Lisätty REST-rajapintaan metodi jolla hakea voimassaolevat perusopetu…||…ksen perusteet
=========================================================

+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/subhrajitroy/motech-virgo/commit/eaa7262c4e388aa1301ae7201b66d7de6b226ded

[COMMIT MESSAGE]:Merged security||Change-Id: I25ca4b858abea5df545592e47361918fe495494f
=========================================================

- @PreAuthorize("hasAnyRole('viewSecurity', 'updateSecurity')")
- @PreAuthorize("hasRole('updateSecurity')")
- @PreAuthorize("hasRole('addUser')")
- @PreAuthorize("hasRole('activateUser')")
- @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("hasRole('editUser')")
- @PreAuthorize("hasRole('manageUser')")
- @PreAuthorize("hasRole('deleteUser')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bartosz25/library-sample-project/commit/3cb1e6d5e612ad81359dd9a79f3b90c277ec7535

[COMMIT MESSAGE]:Maven project structure, pom.xml and one new todo||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ // @PreAuthorize("(#subscriber.login == principal.username) or (#subscriber.login == #user.username) or (#subscriber.login == 'bartosz') or (#subscriber.getLogin() == principal.username)")
+ // OK : @PreAuthorize("'bartosz' == principal.username")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ // OK too : @PreAuthorize("hasAuthority('SUBSCRIBER_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOKCOPY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CHAT_CONSULT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CHAT_CONSULT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'EXPORT_DO')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ // @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'SUBSCRIBER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'NEWSLETTER_WRITE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'NEWSLETTER_WRITE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'QUESTION_READ')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_EDIT')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_DELETE')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITERLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_DELETE')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'BOOK_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.bookingNb > 0")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.id == subscriber.id")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORYLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'CATEGORY_ADD')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'PENALTY_ACCEPT')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'QUESTION_READ')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'REPLY_ADD')")
+ @PreAuthorize("isAnonymous() or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("(#subscriber.login == principal.username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("(#subscriber.login == principal.username) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'PAYMENT_ACCEPT')")
+ @PreAuthorize("hasRole('ROLE_USER') and principal.id == subscriptionTransfer.subscriptionTransferPK.idGiver")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITERLANG_ADD')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'WRITER_ADD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mohchi/spring-security-request-mapping/commit/d954a79b2d1707faaeb900757ec2f991b9392de8

[COMMIT MESSAGE]:Added support for path variables in security expressions||
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("authentication.name == #name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mohchi/spring-security-request-mapping/commit/bcf03622b4f4cb83dd6423d60f895dd72af56499

[COMMIT MESSAGE]:Added sample maven managed web project||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=60&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/jaxenter-showcase/commit/5f177da55b40ab2af0c45f896351e4331eacfd52

[COMMIT MESSAGE]:Step 3: Add security for POST, PUT and DELETE||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/trungtuan/motech/commit/29823e12a8ce60651a757d883177e69a3ae035d1

[COMMIT MESSAGE]:SDUI: Add Security tab to field definition||https://trello.com/c/0LFwZLfl

* Added 'Security' tab to object definition, as for now motech do not
support security settings for particular fields. User can specify who
can interact with objects (everyone, creator, owner, specific users,
specific roles). For last two options user must specify the list of
users/roles. If after selecting users/roles list he changes access
settings to another, lets say to 'everyone', the users/roles list
will be cleared.
* corrected 'advancedHistroy' typo
* removed some duplicates from messagess.properties

Change-Id: Ifab579ce04d2cf99d97c620da3396235fd0bd6b8
=========================================================

- @PreAuthorize("hasRole('manageUser')")
+ @PreAuthorize("hasAnyRole('manageUser', 'viewUser')")
+ @PreAuthorize("hasAnyRole('manageRole', 'viewRole')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stondofitz/thegains/commit/290c1058483e2cf3fba93dd61f4f6a12faaf18c5

[COMMIT MESSAGE]:Messing with security crap||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/valdy89/stavebniStroje/commit/a8b5b9fea0f1dec433c8c9ec91d029e985c4e30b

[COMMIT MESSAGE]:Access privilegies corrected||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yerganat/crmextjs/commit/5e81493ab862684ec0826a0e8def66fa3cb99a67

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/d2b9967d87b1e3b9d0fbf8192b32a42f1c00c604

[COMMIT MESSAGE]:Lisätty oikeustarkastelut tekstikappaleviiteservicelle||
=========================================================

- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=61&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/e0e075f1ae584fa2e2f832c4eb3b7e9efe35e70c

[COMMIT MESSAGE]:Fixes to multiple issues including indexing study errors and binder p…||…ages with study (requires reindexing said study) and moving parts of error to separate json files.
=========================================================

- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1063e940ce682f9820163c9f9b2f37dc91d891ab

[COMMIT MESSAGE]:Added studies with errors query. Provided straight access to Referenc…||…ePath parsing so that UI can provide custom references to be parsed. This basically supersedes the normal options request since building of both is very similar and both can address the basic request but path request provides additional functionality.
=========================================================

+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/cc625e0056834ad382ceb5419ef2e45dd895e2f5

[COMMIT MESSAGE]:Restriction validation framework is mostly done disregarding bugs and…||… some obscure features.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectId, 'isAccessibleProjectId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayId, 'isAccessibleAssayId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('SUBMITTER')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#originalUser.id == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectId, 'isAccessibleProjectId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayId, 'isAccessibleAssayId') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('SUBMITTER')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+// @PreAuthorize("hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#assayAccession, 'isAccessibleAssayAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("hasPermission(#projectAccession, 'isAccessibleProjectAccession') or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#originalUser.id == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#email == principal.username or hasRole('ADMINISTRATOR')")
+ @PreAuthorize("#userId == principal.id or hasRole('ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/soscs/heumpage/commit/5a23ae863f7b9398ee450fb02fcf2b9e477b0c56

[COMMIT MESSAGE]:sitemesh, mybatis,bootstrap 설치||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/ebe86ee960b2f0d11370236de6d688fcbe6545ff

[COMMIT MESSAGE]:Loads of fixes||
=========================================================

- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")
- @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master') or hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/6478dd1de499157a4b7632e99025cd3963e1c571

[COMMIT MESSAGE]:Able to remove comments and ratings||
=========================================================

+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")
+@PreAuthorize("hasRole('user') or hasRole('master')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/olliwer/game_database/commit/4a90bd57dda218daa24d3194f1da051a87ed0498

[COMMIT MESSAGE]:Logging out works now||
=========================================================

+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
+ @PreAuthorize("hasRole('user') or hasRole('master')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=62&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/6a61d471c7eb47d4801f768ccf17ef4ad60a3bb4

[COMMIT MESSAGE]:OrderForm adds user to order. Admin can register new company||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/50913ded2e84c2697f72e10f71b83e8fc77bb2ae

[COMMIT MESSAGE]:Service and dao example||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/3ab106349b049534013532832a325ed154a59f71

[COMMIT MESSAGE]:Added nextDestination validations||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Scionar/TiPi/commit/38ed92a6aa356d4d820c20309ce8e7775ebd0c7e

[COMMIT MESSAGE]:Order updating for user. Not yet working 100%. Problems in DAO||parameters.
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ypujari/spring-security_examples/commit/3d73ab80a3924104c5409933295868323e7c385e

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/krao4/spring-sec-aop-jpa-mysql-mongo-int---App/commit/014277af4cf8d8983ea7fa2b5187c5813d931241

[COMMIT MESSAGE]:chained the SOAP and REST services for Spring Integration; Added comm…||…ents and removed redundant code
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/krao4/spring-sec-aop-jpa-mysql-mongo-int---App/commit/78de8489b4dc256c7fa425894d94f03b1722fe6a

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=63&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ouar/trunk/commit/947c2541beb7b5ce8a8eab5463b2d3f41ae39f7c

[COMMIT MESSAGE]:structure v2 du quiz-web à refactoriser||
=========================================================

+ //@PreAuthorize("hasRole('Administrateur')")
+ //@PreAuthorize("hasRole('Administrateur')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/a683417a7a949789d4f2c77baee48f8b089060dd

[COMMIT MESSAGE]:adicionado testes de controle de acesso aos recursos de transcoes||
=========================================================

+ @PreAuthorize("hasPermission(#originAccountId, 'Account.read') and hasPermission(#destAccountId, 'Account.read')")
+ @PreAuthorize("hasPermission(#rootAccountId, 'Account.read')")
+ @PreAuthorize("hasPermission(#txId, 'AccountTransaction.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/865864210d6df57fc07d053c06e0d1264f713d3b

[COMMIT MESSAGE]:poprawka do Nawigacji i inne drobne rzeczy||
=========================================================

-// @PreAuthorize("hasRole('ADMIN')")
+ // @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/c54b04fa1fbd040004abddd88c155288ddbb2beb

[COMMIT MESSAGE]:ajax jquery nawigacja||
=========================================================

- @PreAuthorize("hasRole('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/46253500e88e07f2e5502e27733deab437e99358

[COMMIT MESSAGE]:poprawki. Wreszcie zaczyna to jakoś wyglądać.||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/d861424f3c35a369906a78b82e40a3fa3c9a54e7

[COMMIT MESSAGE]:spring security metody, zmiana pobierania deklaracji, dodałem filtr h…||…ibernate
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/5cbcd920ff9d5bed6aa69549cf1d1f3aff1064fa

[COMMIT MESSAGE]:Testy||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ms40866/sapient/commit/014277af4cf8d8983ea7fa2b5187c5813d931241

[COMMIT MESSAGE]:chained the SOAP and REST services for Spring Integration; Added comm…||…ents and removed redundant code
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ms40866/sapient/commit/78de8489b4dc256c7fa425894d94f03b1722fe6a

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') OR hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/honzikm/wpa/commit/d7e71706a1d172b6e58180f39fddb03b6a0d1e44

[COMMIT MESSAGE]:wpa semestralka||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/studerw/spring-security-custom-db/commit/9eb328f1ed39b9e13509bfe573249101449b9920

[COMMIT MESSAGE]:adding new files||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("denyAll()")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.username) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.username == #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.id, #vacationRequest) ) " +
+ @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.username, #vacationRequest) ) " +
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == #employee.email")
- @PreAuthorize("#workTime.employee.id == principal?.id")
+ @PreAuthorize("#workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or (isAuthenticated() and #id == principal.id)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("isAuthenticated() and @travelExpenseEventHandler.canCreate(principal.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canEdit(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canDelete(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(isAuthenticated() and @reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal.id)) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #comment.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(#sickDays.employee.id == principal.id and isAuthenticated()) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(isAuthenticated() and #sickDays.employee.id == principal.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == #vacationRequest.employee.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @vacationRequestEventHandler.employeeCanDeleteRequest(principal.id, #vacationRequest) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @vacationRequestEventHandler.employeeCanDeleteRequest(principal?.id, #vacationRequest)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == #employee.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
- @PreAuthorize("#workTime.employee.id == principal.id")
+ @PreAuthorize("#workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e0c9ab7ed6615e9a60cd2c88a6806274ccf8c3d3

[COMMIT MESSAGE]:TRACKR-123 - Implement address book||Added an address book controller.
=========================================================

+ @PreAuthorize("hasRole('ROLE_EMPLOYEE')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=64&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/idamai/wonderlust/commit/fb7eddf4525800eb9472e09722d9c3801120fb19

[COMMIT MESSAGE]:Merge branch 'master' of https://github.com/idamai/wonderlust.git||Conflicts:
	src/main/webapp/WEB-INF/views/dashboard.jsp
	src/main/webapp/resources/js/app.js
=========================================================

-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/idamai/wonderlust/commit/b9ccdfe5ab6d013975a08c75b8e2ac888fe06a41

[COMMIT MESSAGE]:Added home controller||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/darrenhamilton/Woflow/commit/2b24059cf553e6bb33d291d6c01a35fa9b8ef455

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/2198e08c80014f68c3c6a56471e62f75236d87bc

[COMMIT MESSAGE]:make projects open access after embargo period||run automatically via quartz job every 24 hours
or manual via embargo settings page
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thomasdarimont/spring-data-bugs/commit/6ab365c203c699865d2bb2a957e1ff9df9caf419

[COMMIT MESSAGE]:Added minimal example for Proxy in Proxy scenario.||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thomasdarimont/spring-data-bugs/commit/548a59a04aef64d80cd7977a371312796afef067

[COMMIT MESSAGE]:Added example for “double” proxying.||If Spring Data Repositories are used in combination with @GlobalMethodSecurity with proxyTargetClass=true and @Pre/Post Security annotations are used on repository finder methods, then Spring framework tries to create a cglib-proxyclass for the repository instance which is a JDK Proxy.

This is a problem that puzzles a lot of beginners.

This project contains a shadowed version of AbstractAutoProxyCreator that is able to detect an already Avoided target instance and instead of generating a new class - simply registers the additional advise.
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gleant/wadi_harjotustyo/commit/1ba32161f92dad7e1e98a4ae2257fcedb5c18141

[COMMIT MESSAGE]:Viimeinen versio||
=========================================================

+ @PreAuthorize("hasRole('opettaja')")
+ @PreAuthorize("hasRole('opettaja')")
+ @PreAuthorize("hasRole('opettaja')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gleant/wadi_harjotustyo/commit/dc5b4c66c8688ba4db59bb35c47509566eb2fc28

[COMMIT MESSAGE]:Viestijono||
=========================================================

+ @PreAuthorize("hasRole('opettaja')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nocode2k/spring3-mvc-example/commit/c96f66e9a7cf48296ee9be666acd57d4639e8708

[COMMIT MESSAGE]:Security 적용||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#article.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#article.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#comment.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#comment.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("#email == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eric2323223/springlab/commit/6ea6160255c4dea916161741f5014610ba4c7050

[COMMIT MESSAGE]:add more files||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=65&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/v5developer/maven-framework-project/commit/78beef294e208518607d0cd58088359a512990ef

[COMMIT MESSAGE]:spring3 security example||
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dimarzio/restmock/commit/042a6a69cbba652894988fd7214d895ea6518871

[COMMIT MESSAGE]:Added security to REST service||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nguyenngoc92/diary.com/commit/15d5e2660ce734cc196e8c4de19e6cc54ffde496

[COMMIT MESSAGE]:diary update||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/alvarodr/spring3.1/commit/5e0300b8a860ff9231b340c148645aa76003fe9a

[COMMIT MESSAGE]:Ejemplo spring 3.1||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cmacmillan3/DMIT225-/commit/a29e1c745058c0caae6105afe2caf381515493e3

[COMMIT MESSAGE]:Finished all exercises.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chrisp-cbh/BricksAndMortarDynamicWebAndMaven/commit/c89f08d79c945a6eba16b25d0c6cfb647858da20

[COMMIT MESSAGE]:adding spike to check out spring security method validation||
=========================================================

+ @PreAuthorize("hasPermission('Product', 'get')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/voronenko-da/feetapp/commit/e909b51934480b789b1a2d65b70637df380da988

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/supermy/myweb-core/commit/64a272a24621e82271359d4a0e1df69befe7f0cd

[COMMIT MESSAGE]:完成web的分离和测试||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPERVISOR')")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR')")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR')")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davilj/projectman/commit/7f49c03f6939e531770e9a2a6fd3a29bab1104e4

[COMMIT MESSAGE]:Initialize git||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=66&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/changit/vaadin-spring-sec/commit/29b6439cfc5f011c85fd26067d8998463ae70347

[COMMIT MESSAGE]:added project||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Proactum/arti-initial/commit/139947cbab7f270007dcd6b5ee3eac24ca78b2b0

[COMMIT MESSAGE]:Code brought over from Metka. Most clear major changes done. Removed …||…HTML-code from inside java since it's smarter to develope the site as a separate entity.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission(#id, '" + PermissionCheck.Values.REMOVE_SEARCH + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_INDEX_INFO +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_MANUALLY_INDEX_CONTENT +"', 'PERMISSION')")
+ /*@PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/b1fb52f3436b9ea1a94d80bd589df7d5ba833d6d

[COMMIT MESSAGE]:Korjattu lukkojen omistajien nimien esittäminen||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#k.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("hasPermission(null, 'perusteprojekti', 'LUONTI')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'TILANVAIHTO')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/490222013d458b57cf596712c33ae389b4363c58

[COMMIT MESSAGE]:perusteen korjaus julkaisun jälkeen||Lisättu KORJAUS-oikeus update-palveluihin (WIP)
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.dto.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#viiteId, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#tov.id, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/a08fdbf591a7abb70c84d54e1b843df4e5f69148

[COMMIT MESSAGE]:Termistön hallinta backendissä||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/cd8cc3fbf6c67185881a456afe5e04b12d594bd2

[COMMIT MESSAGE]:delete last Game||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/b98eb07da4a19df3d2bbf321a200c9650d7cf959

[COMMIT MESSAGE]:enable secure urls||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ // @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/4daa5245aa82ce6f958e9ba64d81dffd3d36bbd6

[COMMIT MESSAGE]:Finalized the organization add change. Some prework for fixing study …||…errors and generally making read only status smarter and easier to control.
=========================================================

+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_ADD_ORGANIZATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_ADD_ORGANIZATIONS +"', 'PERMISSION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8a29cc5bce5afc545e487f5d51929e2cdbede7df

[COMMIT MESSAGE]:Moved prev/next commands to RevisionController and unified them to 'a…||…djacent' request. Moved json-export to RevisionController and made it into an ajax call similar to DDI-export. Moved DDI export and import to StudyController. Removed GeneralService since all methods were either removed or moved elsewhere.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_IMPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_IMPORT_REVISION+"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1063e940ce682f9820163c9f9b2f37dc91d891ab

[COMMIT MESSAGE]:Added studies with errors query. Provided straight access to Referenc…||…ePath parsing so that UI can provide custom references to be parsed. This basically supersedes the normal options request since building of both is very similar and both can address the basic request but path request provides additional functionality.
=========================================================

+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=67&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jormaral/SLdirect/commit/f04b5bb214bc0c50c9d0bffd6cc58ccf8f403807

[COMMIT MESSAGE]:Alejandro Sanchez Acosta <asanchez@neurowork.net>||Subida version 0.1
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mleyvag/TutoriasFisi/commit/1504fe3b406e761f8f29ee55a63b8013664f2791

[COMMIT MESSAGE]:1ercomit||yayaya mi primer commit
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/venkateshragi/RolesAndPermissions/commit/1eaa44c6b262d0b2229805469351344adb0a976e

[COMMIT MESSAGE]:Create, assign users, roles||
=========================================================

- @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('CREATE_RESOURCE')")
+ @PreAuthorize("hasRole('CREATE_ROLE')")
+ @PreAuthorize("hasRole('CREATE_USER')")
+ @PreAuthorize("hasRole('CREATE_USER')")
+ @PreAuthorize("hasRole('ASSIGN_ROLE')")
+ @PreAuthorize("hasRole('ASSIGN_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/venkateshragi/RolesAndPermissions/commit/f68be6d7c2e6066a528daa082cd1cb1c881b0b65

[COMMIT MESSAGE]:Controller, jsp, service, dao impl||
=========================================================

+ @PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/NelsonRosenberg/Spring-Example/commit/4e283b86256780426cfe6d530e221bb2dbe478de

[COMMIT MESSAGE]:Package as War default||
=========================================================

+@PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bolkimen/SiteCore/commit/630019d08ebe1ed0ea192a0ce60df100d31b3e61

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'Post', 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'PostsThread', 'READ')")
+ @PreAuthorize("hasPermission(#poststhread, 'WRITE')")
+ @PreAuthorize("hasPermission(#poststhread, 'DELETE')")
+ @PreAuthorize("hasPermission(#poststhr, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JetBrains/idea-templates/commit/16697933a87adc360f2262b2696b02d5816d8dba

[COMMIT MESSAGE]:Spring Security template||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MordechaiTamam/Spring-Security-based-on-AspectJ-and-addtional-ordered-aspects-/commit/3b1d720169879a49a9869393000998173b7e20ef

[COMMIT MESSAGE]:Adding a project that demonstrates the aspects ordering||This project is an example how to order the aspects invocation in case
that you have several Pointcuts on the same execution point.
This project demonstrates how to add an aspect before and after Spring's
security aspect .
The project is based on Spring-Boot and AspectJ
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/geiner/formularioUTP/commit/319e6b7469b6272c9824326f684f49fa4c67fcce

[COMMIT MESSAGE]:primer commit||primero
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kazamage/sample2/commit/fe44e6a98f4968368dc326f972afa233dcf5bedb

[COMMIT MESSAGE]:add.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vlcekmi3/cvut-wpa-forum/commit/f9851aef27653ef7c2ec731d4ebbc5992504d991

[COMMIT MESSAGE]:editing&refactoring||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ //@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(['ROLE_ADMIN'])")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=68&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kazamage/sample2/commit/fe44e6a98f4968368dc326f972afa233dcf5bedb

[COMMIT MESSAGE]:add.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/venkateshragi/RolesAndPermissions/commit/1eaa44c6b262d0b2229805469351344adb0a976e

[COMMIT MESSAGE]:Create, assign users, roles||
=========================================================

- @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('CREATE_RESOURCE')")
+ @PreAuthorize("hasRole('CREATE_ROLE')")
+ @PreAuthorize("hasRole('CREATE_USER')")
+ @PreAuthorize("hasRole('CREATE_USER')")
+ @PreAuthorize("hasRole('ASSIGN_ROLE')")
+ @PreAuthorize("hasRole('ASSIGN_ROLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/venkateshragi/RolesAndPermissions/commit/f68be6d7c2e6066a528daa082cd1cb1c881b0b65

[COMMIT MESSAGE]:Controller, jsp, service, dao impl||
=========================================================

+ @PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/NelsonRosenberg/Spring-Example/commit/4e283b86256780426cfe6d530e221bb2dbe478de

[COMMIT MESSAGE]:Package as War default||
=========================================================

+@PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/geiner/formularioUTP/commit/319e6b7469b6272c9824326f684f49fa4c67fcce

[COMMIT MESSAGE]:primer commit||primero
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bolkimen/SiteCore/commit/630019d08ebe1ed0ea192a0ce60df100d31b3e61

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'Post', 'WRITE')")
+ @PreAuthorize("hasPermission(#id, 'PostsThread', 'READ')")
+ @PreAuthorize("hasPermission(#poststhread, 'WRITE')")
+ @PreAuthorize("hasPermission(#poststhread, 'DELETE')")
+ @PreAuthorize("hasPermission(#poststhr, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doles/spring-boot-autowired-sample/commit/b0d52c0cd51552599a58e330643c16954170b99f

[COMMIT MESSAGE]:updated to working configuration / added tests||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aelingold/sgsp-core/commit/b7dd764298bb313a55c505c2d2d51b431308e3e4

[COMMIT MESSAGE]:deshabitar usuarios, pagina error||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=69&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jjane717/HIE/commit/1603ec306f8a5373c529395361fd90f03ff89ddc

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole(ROLE_USER)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=70&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jjane717/HIE/commit/1603ec306f8a5373c529395361fd90f03ff89ddc

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole(ROLE_USER)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doles/spring-boot-autowired-sample/commit/b0d52c0cd51552599a58e330643c16954170b99f

[COMMIT MESSAGE]:updated to working configuration / added tests||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=71&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/aelingold/sgsp-core/commit/b7dd764298bb313a55c505c2d2d51b431308e3e4

[COMMIT MESSAGE]:deshabitar usuarios, pagina error||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/djboy71/sip07/commit/c09ba6cae5c39f6fb1a8df69412446c69f415911

[COMMIT MESSAGE]:Initial Commit and completed recipe 7.1||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/camiloporto/cloudfinance/commit/cdbf16ad6a62eab9bdfcec90f39dc6127cf4aa24

[COMMIT MESSAGE]:adicionado controle de acesso aos recursos de transacao e relatorios||
=========================================================

+ @PreAuthorize("hasPermission(#accountId, 'Account.read')")
+ @PreAuthorize("hasPermission(#a, 'Account.read')")
+ @PreAuthorize("hasPermission(#rootAccountId, 'Account.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/a78abbc3e98a46fe436ee31df106495eacb1ddf8

[COMMIT MESSAGE]:Added support for retrieving events based on importance||
=========================================================

+ @PreAuthorize("hasPermission(#domain, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/d1fd98f75dc09568b4a467ebd0d853f0c51ce126

[COMMIT MESSAGE]:Improved recurrence handling in Core.||
=========================================================

+ @PreAuthorize("hasPermission(#entity, 'delete')")
+ @PreAuthorize("hasPermission(#entity, 'delete')")
+ @PreAuthorize("hasPermission(#entity, 'save')")
+ @PreAuthorize("hasPermission(#entity, 'save')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/711cdd6e4eff800e70c9097c78ded4bb71d28db6

[COMMIT MESSAGE]:Added QueryDSL support.||Changed Tasks to have duration instead of timestamps.
Fixed typo in Event type.
=========================================================

+ @PreAuthorize("hasPermission(#domain, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/c5e12311f1aac85693d9b7db11a06d660c6cba8c

[COMMIT MESSAGE]:Lots of work on CORS and details that make things start to work on mo…||…bile.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or @relationService.isRelated(principal.person, #domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or @relationService.isRelated(principal.person, #domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/977cbdaf3ae8d66caeb617883e4c8a80c93b8239

[COMMIT MESSAGE]:vuosiluokkakokonaisuuden revisiot ja updatedto||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=72&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Varno/JavaStudy/commit/5fa5b9b07cb85f838be28bc2175986f999dd2f5d

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/a78abbc3e98a46fe436ee31df106495eacb1ddf8

[COMMIT MESSAGE]:Added support for retrieving events based on importance||
=========================================================

+ @PreAuthorize("hasPermission(#domain, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/d1fd98f75dc09568b4a467ebd0d853f0c51ce126

[COMMIT MESSAGE]:Improved recurrence handling in Core.||
=========================================================

+ @PreAuthorize("hasPermission(#entity, 'delete')")
+ @PreAuthorize("hasPermission(#entity, 'delete')")
+ @PreAuthorize("hasPermission(#entity, 'save')")
+ @PreAuthorize("hasPermission(#entity, 'save')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/711cdd6e4eff800e70c9097c78ded4bb71d28db6

[COMMIT MESSAGE]:Added QueryDSL support.||Changed Tasks to have duration instead of timestamps.
Fixed typo in Event type.
=========================================================

+ @PreAuthorize("hasPermission(#domain, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/c5e12311f1aac85693d9b7db11a06d660c6cba8c

[COMMIT MESSAGE]:Lots of work on CORS and details that make things start to work on mo…||…bile.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or @relationService.isRelated(principal.person, #domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or @relationService.isRelated(principal.person, #domain)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=73&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3d5c50b933c2b24340bad81a91eb5ff7968c2e76

[COMMIT MESSAGE]:MIFOS-3577 Change to read-only batch tasks management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c537dadb0af0f615d89e295a4e4e2c6f7d4c60f5

[COMMIT MESSAGE]:MIFOS-3577 Added privileges for batch jobs management page.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/448226c92bf267453397d67fa49ae789635569db

[COMMIT MESSAGE]:MIFOS-3577 Added reading values from tasks into batch jobs management…||… page
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/e326c524680e56d1a5ddd011e56d3f844a4a221d

[COMMIT MESSAGE]:Added new page for administrator for batch tasks management.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c607241b0d479387b8a233e48309845b9a5406fb

[COMMIT MESSAGE]:MIFOS-3327: Added security settings + cosmetics.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4954bcf9394e44e06a6902340dde085a1d9c193b

[COMMIT MESSAGE]:MIFOS-5992: Added permissions, Pentaho reports parameters and other m…||…inor fixes
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/4dc99242672dceb464a63d2b0ce3ab4be7b810b5

[COMMIT MESSAGE]:MIFOS-5616: added possibility to attach admin documents to payments.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jenshadlich/spring-hibernate-hazelcast-webapp/commit/4c54b94d1a0df51e148fa70bb7b32b9e272abebc

[COMMIT MESSAGE]:update||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security-javaconfig/commit/a3e55050bf2e42b4535b15817d356ff7ef8c5459

[COMMIT MESSAGE]:initial||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#oauth2.clientHasRole('ROLE_CLIENT')")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#object,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dimylik/my_money_flow/commit/92f30497790ee59f881decaf7035f0a2ffcaa908

[COMMIT MESSAGE]:Editing bank account;||
=========================================================

+//@PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=74&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/attic/commit/50e30b1173c0a22cea69f0dfe562461d3cd40d02

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/attic/commit/bbab707e1b03ae5a380eb902daedea453ab91617

[COMMIT MESSAGE]:Moved from playground to attic||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/attic/commit/a300b64edd9f73b374d102a865f8101afbff9e28

[COMMIT MESSAGE]:Add e4ds-template to the attic||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/543298f0e6510d2deb572b8cfd402f88ee0a7488

[COMMIT MESSAGE]:Feature: Backend support for exporting and importing ISA-Tab archives…||… added

IsaTabExporter class was added. It contains functions to export and import
 isa-tab archives. This is related to issue #34 and #29
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/cac529eb8f83730455a6e3b5aad4461ef7a5e3c6

[COMMIT MESSAGE]:Display phenotype, study and analysis list based on elasticsearch. Th…||…is allows for filtering and searching
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/fff3c20bc4cb67510884313cedf4f2c3e4e35f88

[COMMIT MESSAGE]:add support for publications||
=========================================================

+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/9f186fdbace60cecada0d35b805d9ae819785fcb

[COMMIT MESSAGE]:new simpler permission system||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+@PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','READ')")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#object,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/drinkit/drinkit-server/commit/7489cf94a188eb2747cff8b25c532fafe9bacbee

[COMMIT MESSAGE]:extracted from drinkit/drinkIt@dcae852||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=75&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/543298f0e6510d2deb572b8cfd402f88ee0a7488

[COMMIT MESSAGE]:Feature: Backend support for exporting and importing ISA-Tab archives…||… added

IsaTabExporter class was added. It contains functions to export and import
 isa-tab archives. This is related to issue #34 and #29
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/cac529eb8f83730455a6e3b5aad4461ef7a5e3c6

[COMMIT MESSAGE]:Display phenotype, study and analysis list based on elasticsearch. Th…||…is allows for filtering and searching
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#study.id == null or hasPermission(#study,'EDIT') or hasPermission(#study,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'EDIT') or hasPermission(#traitUom,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION')")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT') or hasPermission(#experimentId,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','ADMINISTRATION'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/fff3c20bc4cb67510884313cedf4f2c3e4e35f88

[COMMIT MESSAGE]:add support for publications||
=========================================================

+ @PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','EDIT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/9f186fdbace60cecada0d35b805d9ae819785fcb

[COMMIT MESSAGE]:new simpler permission system||
=========================================================

- @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'EDIT') or hasPermission(#experiment,'ADMINISTRATION'))")
+@PreAuthorize("hasPermission(#id,'com.gmi.nordborglab.browser.server.domain.observation.Experiment','READ')")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#object,'ADMINISTRATION'))")
- @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'EDIT') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER') and (#experiment.id == null or hasPermission(#experiment,'WRITE') or hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#traitUom,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#experiment,'ADMINISTRATION'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER') and (#trait.id != null and (hasPermission(#trait,'WRITE') or hasPermission(#trait,'ADMINISTRATION')))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=76&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/cxf-fediz/commit/31364847e3d5d35273dc5f6498ad9f98cc7dc164

[COMMIT MESSAGE]:[FEDIZ-77] RBAC Support for REST Interface||git-svn-id: https://svn.apache.org/repos/asf/cxf/fediz/trunk@1572730 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_CREATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_DELETE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_LIST')")
+ @PreAuthorize("hasRole('CLAIM_READ')")
+ @PreAuthorize("hasRole('CLAIM_CREATE')")
+ @PreAuthorize("hasRole('CLAIM_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_DELETE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_LIST')")
+ @PreAuthorize("hasRole('ENTITLEMENT_READ')")
+ @PreAuthorize("hasRole('ENTITLEMENT_CREATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_UPDATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_DELETE')")
+ @PreAuthorize("hasRole('IDP_LIST')")
+ @PreAuthorize("hasRole('IDP_READ')")
+ @PreAuthorize("hasRole('IDP_CREATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_DELETE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_LIST')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_DELETE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_LIST')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_READ')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_CREATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/indvamshi/DealsMessanger-Backend/commit/9aa325eff9b276c7b228d261efcfef160c9a7fe5

[COMMIT MESSAGE]:adding security feature||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_MERCHANT')")
+@PreAuthorize("hasRole('ROLE_MERCHANT')")
+@PreAuthorize("hasRole('ROLE_SUPERADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/smolnij/woowtest/commit/72ae22def199e1e805780dc580cdaad0ea9f5ab9

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shumic/spring-finance-manager/commit/d40f9713717c9c6a45336ea7fc4a54e2195f13ab

[COMMIT MESSAGE]:Upgrading to Spring Framework 3.0.0.M3, Spring Web Flow 2.0.7.RELEASE||Initial commit for integration of Spring Security 3.0.0.M1.
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vexdev/VexBookstore-BE/commit/8dfc9fe7d7beb7dfcdfb124befd03c09a48664a4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=77&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/thinkbigthings/give3.org/commit/95b39447ef8589e2fc80a30fa281a3387d1dc606

[COMMIT MESSAGE]:transfer project to github||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/massfords/we99/commit/e764aa533e07f99e18df727fa6072363b002939f

[COMMIT MESSAGE]:- finished refactoring of the experiment service into sub-resources||
=========================================================

- @PreAuthorize("hasRole('PERM_READ_EXPERIMENTS')")
- @PreAuthorize("hasRole('PERM_MODIFY_EXPERIMENTS')")
- @PreAuthorize("hasRole('PERM_MODIFY_EXPERIMENTS')")
- @PreAuthorize("hasRole('PERM_MODIFY_PLATES')")
- @PreAuthorize("hasRole('PERM_READ_PLATES')")
- @PreAuthorize("hasRole('PERM_MODIFY_PLATES')")
- @PreAuthorize("hasRole('PERM_MODIFY_PLATES')")
- @PreAuthorize("hasRole('PERM_READ_PLATES')")
- @PreAuthorize("hasRole('PERM_MODIFY_RESULTS')")
- @PreAuthorize("hasRole('PERM_READ_RESULTS')")
- @PreAuthorize("hasRole('PERM_READ_RESULTS')")
- @PreAuthorize("hasRole('PERM_READ_RESULTS')")
- @PreAuthorize("hasRole('PERM_MODIFY_RESULTS')")
+ @PreAuthorize("hasRole('PERM_READ_EXPERIMENTS')")
+ @PreAuthorize("hasRole('PERM_MODIFY_EXPERIMENTS')")
+ @PreAuthorize("hasRole('PERM_MODIFY_EXPERIMENTS')")
+ @PreAuthorize("hasRole('PERM_READ_EXPERIMENTS')")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")
+ @PreAuthorize("hasRole('PERM_READ_RESULTS')")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")
+ @PreAuthorize("hasRole('PERM_MODIFY_PLATES')")
+ @PreAuthorize("hasRole('PERM_MODIFY_PLATES')")
+ @PreAuthorize("hasRole('PERM_MODIFY_RESULTS')")
+ @PreAuthorize("hasRole('PERM_READ_RESULTS')")
+ @PreAuthorize("hasRole('PERM_MODIFY_RESULTS')")
+ @PreAuthorize("hasRole('PERM_READ_RESULTS')")
+ @PreAuthorize("hasRole('PERM_MODIFY_PLATES')")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/massfords/we99/commit/5adf7b69415545df632ae0978884ee9424801f6d

[COMMIT MESSAGE]:- added settings service to configure the SMTP server and email filter||- added swagger link to the index page
=========================================================

+ @PreAuthorize("hasRole('PERM_READ_SETTINGS')")
+ @PreAuthorize("hasRole('PERM_MODIFY_SETTINGS')")
+ @PreAuthorize("hasRole('PERM_READ_SETTINGS')")
+ @PreAuthorize("hasRole('PERM_MODIFY_SETTINGS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cleverpig/jsfsecurity/commit/1d0e6d2d9e0f2befd816ee52b50af833d9d307e4

[COMMIT MESSAGE]:first import project||
=========================================================

+ // @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+ // @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")
+// @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+// @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SalimR/roborace/commit/fc3a8dabb9bdfbb31938f89dcf53d43cc4f3bc75

[COMMIT MESSAGE]:- refactorings||- battlefield map repository implementation
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CodeSolid/tutorials/commit/77735db607c7b53e7426d3c66cf340e31d08c835

[COMMIT MESSAGE]:Initial commit SpringSecurity1||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CodeSolid/tutorials/commit/159ef61ce65f5b83aacc8368d26931dee7ffe6e3

[COMMIT MESSAGE]:Spring Security 2. JDBC database based auth, basic pages in place to …||…support registrtation
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/e4ds-desktop/commit/36163fa8f6a928bf65ed6784f7ddca95b45497d1

[COMMIT MESSAGE]:Update with DB access, usermanagement and many more.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CodeSolid/SpringSecurity/commit/91c34722553e34514609c8a8dca2b197a25f461b

[COMMIT MESSAGE]:Initial checkin password_jdbc; update project files||
=========================================================

+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=78&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/SalimR/roborace/commit/fc3a8dabb9bdfbb31938f89dcf53d43cc4f3bc75

[COMMIT MESSAGE]:- refactorings||- battlefield map repository implementation
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/e4ds-desktop/commit/36163fa8f6a928bf65ed6784f7ddca95b45497d1

[COMMIT MESSAGE]:Update with DB access, usermanagement and many more.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CodeSolid/SpringSecurity/commit/91c34722553e34514609c8a8dca2b197a25f461b

[COMMIT MESSAGE]:Initial checkin password_jdbc; update project files||
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ssherwood/symptom-mgmt-spring/commit/d4d0b02ceb0dd61b709a6487a0bdbd2085a2a058

[COMMIT MESSAGE]:Initial check-in||
=========================================================

+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")
+ @PreAuthorize("hasRole('ROLE_DOCTOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/e42b388b90b224b23864d325b5d18495dbad2d74

[COMMIT MESSAGE]:[minor] Expert Access + some bugs||Change-Id: I6e3f9fb813cf6fb07e2909f94e839036eacf1c3f
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/8c8da3bbb933ac4726364714d366226a38ea23e9

[COMMIT MESSAGE]:[CRM-23] Task, Job filters added.||Change-Id: Iadb7f5114e38733bddf2382b4d3ac8ebf69731d0
=========================================================

+ @PreAuthorize("hasRole('ROLE_WORKER')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER') or hasPermission(#taskDTO, 'write')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER') or hasPermission(#taskDTO, 'write')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c7d573e65e4eb1a4d1c1643413a1c341e495b7a9

[COMMIT MESSAGE]:[CRM-23] Services server side authorization.||Change-Id: I79ebb863bb13fdf6de0de75a7880480f39409725
=========================================================

+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#projectDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/f198cded3c4e5ce62f1f28cbb4e2fb9497084f1a

[COMMIT MESSAGE]:[CRM-23] Preparation to annotation use.||Change-Id: I66b2b319e4291bb02d6c43aa050e81746c1df01b
=========================================================

+ @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chapita/factoryTicketsGit/commit/33834269eae0eaf2ec7f7bd5a5d66dedf6ffab6c

[COMMIT MESSAGE]:first commit with gradle||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0cab50e5e14292d83039d65eb756b6204a6a5741

[COMMIT MESSAGE]:MIFOS-4507: add spring security around services for group and client …||…creation
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/298103b363e278aeb3bf251a6ee1f40a64fad3d2

[COMMIT MESSAGE]:MIFOS-4507: add spring security around service||
=========================================================

-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3cd888f6d616cd43690ba079eb73da3dfba96284

[COMMIT MESSAGE]:MIFOS-4507: fix failing acceptance tests||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2c03ce24faba81a6113dd59cc11b185cf4f577e7

[COMMIT MESSAGE]:MIFOS-4507: allow for creation of groups with activation date in past.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0fde8efd847a66b00db0b9d3a4f2bdb78f03ea40

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/18d613b0b7a5620b4ed4577bf8d1229858094eab

[COMMIT MESSAGE]:Revert "MIFOS-4190: service facades for customer historical data."||This reverts commit 74b35c0.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/74b35c0f8ec53d2b1de40f62b1126e9f61c50279

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ed6234219bc7c43edc03d0318e55848279f431b6

[COMMIT MESSAGE]:MIFOS-4190: service facade for updating groups||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/830ce0c88c61389cbc1ff1995a48e4d9a37036e5

[COMMIT MESSAGE]:MIFOS-4190: service facade for retrieving group details||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2ff8b1df77e710da043602714b1d1bad666c4b2f

[COMMIT MESSAGE]:MIFOS-4190: service facade around group creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c3e0171cd1ec67fadf95bc2de09b5e5603b71351

[COMMIT MESSAGE]:MIFOS-4190: refactor dto and implementation for group service facade||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview-db/commit/5b60d877f59c4e82e45e7e97eb86d9533ecc723e

[COMMIT MESSAGE]:initial commit for interview-db||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/8f3f50b0d05997510dbad58409c13591c257bce3

[COMMIT MESSAGE]:projektin lisääminen||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/1cc4d8b4b8a75d2380b44318ea1b8b0deb9bbd64

[COMMIT MESSAGE]:* välicommit||
=========================================================

- @PreAuthorize("hasRole('lecturer')")
- @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=79&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/chapita/factoryTicketsGit/commit/33834269eae0eaf2ec7f7bd5a5d66dedf6ffab6c

[COMMIT MESSAGE]:first commit with gradle||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0cab50e5e14292d83039d65eb756b6204a6a5741

[COMMIT MESSAGE]:MIFOS-4507: add spring security around services for group and client …||…creation
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/298103b363e278aeb3bf251a6ee1f40a64fad3d2

[COMMIT MESSAGE]:MIFOS-4507: add spring security around service||
=========================================================

-// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/3cd888f6d616cd43690ba079eb73da3dfba96284

[COMMIT MESSAGE]:MIFOS-4507: fix failing acceptance tests||
=========================================================

- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
+// @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2c03ce24faba81a6113dd59cc11b185cf4f577e7

[COMMIT MESSAGE]:MIFOS-4507: allow for creation of groups with activation date in past.||
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CHANGE_GROUP_ACTIVE_STATE', 'ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE', 'ROLE_CHANGE_GROUP_TO_PARTIAL_APPL_STATE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/0fde8efd847a66b00db0b9d3a4f2bdb78f03ea40

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/18d613b0b7a5620b4ed4577bf8d1229858094eab

[COMMIT MESSAGE]:Revert "MIFOS-4190: service facades for customer historical data."||This reverts commit 74b35c0.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/74b35c0f8ec53d2b1de40f62b1126e9f61c50279

[COMMIT MESSAGE]:MIFOS-4190: service facades for customer historical data.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/ed6234219bc7c43edc03d0318e55848279f431b6

[COMMIT MESSAGE]:MIFOS-4190: service facade for updating groups||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/830ce0c88c61389cbc1ff1995a48e4d9a37036e5

[COMMIT MESSAGE]:MIFOS-4190: service facade for retrieving group details||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/2ff8b1df77e710da043602714b1d1bad666c4b2f

[COMMIT MESSAGE]:MIFOS-4190: service facade around group creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/c3e0171cd1ec67fadf95bc2de09b5e5603b71351

[COMMIT MESSAGE]:MIFOS-4190: refactor dto and implementation for group service facade||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview-db/commit/5b60d877f59c4e82e45e7e97eb86d9533ecc723e

[COMMIT MESSAGE]:initial commit for interview-db||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/8f3f50b0d05997510dbad58409c13591c257bce3

[COMMIT MESSAGE]:projektin lisääminen||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/studentdevs/commit/1cc4d8b4b8a75d2380b44318ea1b8b0deb9bbd64

[COMMIT MESSAGE]:* välicommit||
=========================================================

- @PreAuthorize("hasRole('lecturer')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working

=========================================================
[CODE-CHANGE-URL]:https://github.com/walidBelfadel/upemgur/commit/ca1eb43cc6d1e1ff9dcd6b80ddead2411d81d71b

[COMMIT MESSAGE]:final commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fit-fms/fms/commit/5b57af71638a738ec506fb7f2cd63ba821b95394

[COMMIT MESSAGE]:Kostra||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/carlodrs/Projetos/commit/982c28c6fe29f67acf6b6559302e1d2e14dad787

[COMMIT MESSAGE]:Added spring security project||
=========================================================

+ @PreAuthorize("hasRole('supervisor') or hasRole('teller') and (#account.balance + #amount >= -#account.overdraft)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=80&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/popwar/SpringMvcSample/commit/20fd9fdb00c0f5f757582e2bfc604105ce76bd39

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#resume, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/madhavjava/gkhead/commit/b558861eb8b7fb11c5cce8965400582b6221336c

[COMMIT MESSAGE]:twentyone||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_PENALTY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_PAYMENT_TO_ACCOUNT_USING_SAVINGS_TRANSFER') and hasRole('Can repay loan')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UPDATE_LATENESS_DORMANCY')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_DEFINE_PRODUCT_MIX', 'ROLE_CAN_EDIT_PRODUCT_MIX')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_HIDDEN_MANDATORY_FIELDS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_ACCEPTED_PAYMENT_TYPES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_PRODUCT_CATEGORIES')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT', 'ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT', 'ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_SAVINGS_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_LOAN_PRODUCT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_BATCH_JOBS_CONFIGURATION')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_RUN_BATCH_JOBS_ON_DEMAND')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_DEFINE_CHECKLIST', 'ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_CHECKLIST')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CHART_OF_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DEFINE_LABELS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_DEFINE_FEE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_FEE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SET_MONTH_CLOSING_DATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CREATE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_MODIFY_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_OPEN_SHUTDOWN_PAGE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_SHUT_DOWN_MIFOS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_VIEW_SYSTEM_INFO')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_CLIENTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_IMPORT_SAVINGS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_NEW_CENTER')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MODIFY_CENTER_INFORMATION_AND_CHANGE_CENTER_STATUS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_CLIENT_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and (hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO') or (hasRole('ROLE_CREATE_CLIENT_IN_SAVE_FOR_LATER_STATE') and hasPermission(#clientStatus, 'CLIENT_STATUS') and hasPermission(#loanOfficerId, 'LOAN_OFFICER_ID')))")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_UNBLACKLIST_CLIENT') and hasRole('ROLE_CHANGE_CLIENT_ACTIVE_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CREATE_GROUP_IN_SAVE_FOR_LATER_STATE', 'ROLE_CREATE_GROUP_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#updateStatus, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_LOAN_IN_SAVE_FOR_LATER_STATE', 'ROLE_CAN_CREATE_NEW_LOAN_IN_SUBMIT_FOR_APPROVAL_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REDO_CAN_CREATE_BACKDATED_LOANS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_DISBURSE_LOAN')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_APPROVE_LOANS_IN_BULK', 'ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_APPROVE_LOANS_IN_BULK') and hasPermission(#accountsForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasPermission(#accountForUpdate, 'MAX_LOAN_AMOUNT_FOR_APPROVE')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_REVERSE_LOAN_DISBURSAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CREATE_MULTIPLE_LOAN_ACCOUNTS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CLOSE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_MAKE_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_UPDATE_SAVINGS_ACCOUNT')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_NEXT_SAVINGS_DEPOSIT_DUE_AMOUNT')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_WAIVE_OVER_DUE_SAVINGS_DEPOSITS')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasAnyRole('ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_APPROVAL_STATE', 'ROLE_CAN_CREATE_NEW_SAVINGS_ACCOUNT_IN_SAVE_FOR_LATER_STATE')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_TRANSFER_FUNDS')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_ADJUST_SAVINGS_DEPOSIT_OR_WITHDRAWAL')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_MIFOS_LOGO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/58121755985af804282053506fba3ff26dafc58a

[COMMIT MESSAGE]:Revert 5fff358..ec89ff6||This rolls back to commit 5fff358.
=========================================================

+@PreAuthorize("hasRole('ROLE_BOSS')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/58121755985af804282053506fba3ff26dafc58a

[COMMIT MESSAGE]:Revert 5fff358..ec89ff6||This rolls back to commit 5fff358.
=========================================================

+@PreAuthorize("hasRole('ROLE_BOSS')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/ec89ff661cbe682f04a2208460cb379b2594fbdb

[COMMIT MESSAGE]:Revert d00b41d..c9df3df||This rolls back to commit d00b41d.
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_BOSS','ROLE_CATERER','ROLE_MANAGER')")
+@PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/ec89ff661cbe682f04a2208460cb379b2594fbdb

[COMMIT MESSAGE]:Revert d00b41d..c9df3df||This rolls back to commit d00b41d.
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_BOSS','ROLE_CATERER','ROLE_MANAGER')")
+@PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/d00b41db0ec42e96b047dd92bc10e146de4c3b89

[COMMIT MESSAGE]:manual merge of master||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_BOSS','ROLE_CATERER','ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/ec89ff661cbe682f04a2208460cb379b2594fbdb

[COMMIT MESSAGE]:Revert d00b41d..c9df3df||This rolls back to commit d00b41d.
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_BOSS','ROLE_CATERER','ROLE_MANAGER')")
+@PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/c9df3dfffc28b6b2075ee1e8ff57e19207da6ab5

[COMMIT MESSAGE]:Revert "Revert "Revert "Revert c1201ff..2809487"""||This reverts commit cdc7d22.
=========================================================

-@PreAuthorize("hasRole('ROLE_BOSS')")
-@PreAuthorize("hasRole('ROLE_BOSS')")
-@PreAuthorize("hasAnyRole('ROLE_CATERER','ROLE_BOSS')")
-@PreAuthorize("hasRole('ROLE_BOSS')")
-@PreAuthorize("hasAnyRole('ROLE_LEADER','ROLE_BOSS')")
-@PreAuthorize("hasAnyRole('ROLE_BOSS','ROLE_CATERER','ROLE_MANAGER')")
-@PreAuthorize("hasAnyRole('ROLE_MANAGER','ROLE_BOSS')")
-@PreAuthorize("hasAnyRole('ROLE_BOSS','ROLE_SENDER','ROLE_RECEIVER')")
-@PreAuthorize("hasAnyRole('ROLE_EMPLOYEE','ROLE_BOSS')")
+@PreAuthorize("hasRole('ROLE_CATERER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swp-dummy/swp-demo-1/commit/9f677e5485e4bde092bb0e45376f8ffe861bcc55

[COMMIT MESSAGE]:duplicate for loop removed from CateringDataInitializer||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_BOSS','ROLE_CATERER','ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/569dcf163b126df1eb226e37e488c3aa09445929

[COMMIT MESSAGE]:Revert "Revert "MIFOS-5429: Added ability to remove fees if fee is ne…||…ver used or loan product with attached fee is not applied to account""

This reverts commit 07ca7e8.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/07ca7e85742749d1edc7793e56e601602caa222e

[COMMIT MESSAGE]:Revert "MIFOS-5429: Added ability to remove fees if fee is never used…||… or loan product with attached fee is not applied to account"

This reverts commit 12dd49a.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mifos/head/commit/12dd49a927849d506f5499a7d2d3ec8d13145000

[COMMIT MESSAGE]:MIFOS-5429: Added ability to remove fees if fee is never used or loan…||… product with attached fee is not applied to account
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jtonic/handson-springsecurity/commit/a98d0dda39a22b88cf4a4bd56b4e2d57845fb7f2

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/linyuanxianyu/springSecurity/commit/e6072781848b1b106a81d432bfed890e3d81d248

[COMMIT MESSAGE]:security||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/linyuanxianyu/springSecurity/commit/f2e0cc19faf9976fa67e88338fca4046d8eed9b7

[COMMIT MESSAGE]:security||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=81&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/danielajgrout/dashreports/commit/94d45d4f471d913361642b5ef3d6284404d08b4c

[COMMIT MESSAGE]:work on enhancement issue 76 - added the re-encrpytion utility needs …||…testing

also some design stuff for the website is included here.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/galasso/cas-pac4j-saml2-demo/commit/6355e19ad551546c4122db6e5e78b8290bca285b

[COMMIT MESSAGE]:test2||
=========================================================

+ @PreAuthorize("hasRole('S') ")
+@EnableAspectJAutoProxy //@PreAuthorize("hasRole('S') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/galasso/cas-pac4j-saml2-demo/commit/c08f82625277fcf2dfd73970eadf4c1f01b8e8f3

[COMMIT MESSAGE]:info||
=========================================================

+ @PreAuthorize("hasRole('S') ")
+@EnableAspectJAutoProxy //@PreAuthorize("hasRole('S') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ae6af5d73ce77f93926379f96371e84b1e9401f1

[COMMIT MESSAGE]:SEC-2915: Updated Java Code Formatting||
=========================================================

- @PreAuthorize("denyAll")
+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/388a4dd9db8c566ee628ea8a33a2c8737a2213af

[COMMIT MESSAGE]:SEC-2194: Add Java Config samples||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ostacus/home_sync_arlm5/commit/cd2db8919bdabca4935c888e92bb1c9bad2faec4

[COMMIT MESSAGE]:Last fixing||
=========================================================

+ @PreAuthorize("hasRole('IS_CONTACT_ADD')")
+ @PreAuthorize("hasRole('IS_CONTACT_DELETE')")
+ //@PreAuthorize("IS_CONTACT_DELETE")
+ @PreAuthorize("loadAuthorities('CONTACT') and hasAuthority('CONTACT_VIEW')")
+ @PreAuthorize("hasAuthority('CONTACT_ADD')")
+ @PreAuthorize("hasAuthority('CONTACT_DELETE')")
+ @PreAuthorize("hasPermission(#secure,'test')")
+ @PreAuthorize("hasSystemAuthority('TEST_VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartekRO/Invoices/commit/e034503fbf0f1a8aa34541cd22f5f4b14ccbe5c1

[COMMIT MESSAGE]:Modyfying invoice||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartekRO/Invoices/commit/1be2f1787e58ac1396ff726feedfb34326b60c3d

[COMMIT MESSAGE]:Security improvements.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=82&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/officiallysingh/homework/commit/430ea13309de2946a1e04e0050f37d074d0bf651

[COMMIT MESSAGE]:adding spring template projects||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/micros-uz/javamicros/commit/68b459dc72bc675bc0d72897f0db73ae11477763

[COMMIT MESSAGE]:Added: security samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/micros-uz/javamicros/commit/68b459dc72bc675bc0d72897f0db73ae11477763

[COMMIT MESSAGE]:Added: security samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Iteam-Bolivia/asfi_ws/commit/9f20a89a32bd96fdc52dad15d552825264c74481

[COMMIT MESSAGE]:primera semana||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/carlodrs/Projeto3/commit/982c28c6fe29f67acf6b6559302e1d2e14dad787

[COMMIT MESSAGE]:Added spring security project||
=========================================================

+ @PreAuthorize("hasRole('supervisor') or hasRole('teller') and (#account.balance + #amount >= -#account.overdraft)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/grupocibertec/GProfesor/commit/07f1a501573ee9a13754f8b9fe1effe02ec14279

[COMMIT MESSAGE]:Se Arreglo la parte de Auditoria brindada por Jonathan. Saludos||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irfani/e4ds-template/commit/622bb70b2f49af4a9b47de6d2e7ee1f0d8cc1f76

[COMMIT MESSAGE]:Revert "Update"||This reverts commit f37e979.
=========================================================

-@PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
-@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irfani/e4ds-template/commit/f37e979e550084f7fcff19dfc3abd4aad8803984

[COMMIT MESSAGE]:Update||
=========================================================

+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=83&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhihaoXian/pluggable/commit/3338eb725d559725d2f91cb789601684306d764c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_WECHAT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/carlodrs/Projeto3/commit/982c28c6fe29f67acf6b6559302e1d2e14dad787

[COMMIT MESSAGE]:Added spring security project||
=========================================================

+ @PreAuthorize("hasRole('supervisor') or hasRole('teller') and (#account.balance + #amount >= -#account.overdraft)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/296ebe880482ebcd493dc091d04de5c9caa95a39

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ldapVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ldapVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain = principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #user.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_DOMAIN_ADMIN') or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #user.domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username and #user.username == principal.username)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain) ")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain and #user.account!=null")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AltroCoin/controllerPrototype/commit/213b6e2f047597b90167102c28f8b8434ee1bcf3

[COMMIT MESSAGE]:Initial construct of Java Controller||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wiltro/security-demo/commit/0be299520e244d923f73647b799fd25c859945b6

[COMMIT MESSAGE]:preparation LorraineJug||
=========================================================

+ @PreAuthorize("hasPermission(#oneObject, 'READ') and hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")
+ @PreAuthorize("ROLE_MANAGER")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/enghen10/spring-mvc/commit/150e488f534b9b896ce54d37d4c9210d0b6fb89b

[COMMIT MESSAGE]:Updated||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/johncastillo79/ws-swi/commit/ac8df3a28ab639b4d1861f29b46dae6a98a5de32

[COMMIT MESSAGE]:beta version||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRADOR')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=84&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kremnef/ems/commit/33a5487f285ea111c6c7c74fcde57f34dca4c9a8

[COMMIT MESSAGE]:first commit||
=========================================================

+// @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MattKing11/TeamProject/commit/a97156adde25c673ae51097ec228476c2b4071ff

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/85858a502a299d6d14c066efbede1b49021558bf

[COMMIT MESSAGE]:fixed SampleObjectService||
=========================================================

- @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/7392c16d46f0b877085bc6d8ff68cb9932a3b282

[COMMIT MESSAGE]:Added file upload functionality to sampleObject||New log back configuration to log into separate files
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=85&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tpindel/spectre/commit/ba494aeb092911fb37f676192d6fc3769ffc41e9

[COMMIT MESSAGE]:spectre acceptance test configuration: JBehave, Selenium||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/peengtao123/pt/commit/c73a815b3d628a569f36401839d7576c2b7f008b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/186e187e3f90d9c35b481c07f18be957b10efd52

[COMMIT MESSAGE]:Lisätty oikeustarkastelut koodisto- ja organisaatioserviceille||
=========================================================

- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/1358ec35b9ce4f71368d4042b48b4c1f47650eb3

[COMMIT MESSAGE]:Poistettu kaksi metodia OrganisaatioServicestä||
=========================================================

- @PreAuthorize("permitAll()")
- @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/f4de11eac3f4befdfafeeeb45f38753df93df663

[COMMIT MESSAGE]:Lisätty peruskoulujen haku oidin perusteella||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e09cb90557cb3745c0186d14241c2b14f159a3a7

[COMMIT MESSAGE]:Lisätty peruskoulutoimijoiden haku kuntien mukaan||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/46b112cbebde1db31dc6f6d14186d1799a8caa90

[COMMIT MESSAGE]:Hae kuntien ja koulujen nimet koodi-URIn ja oid:n perusteella||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/204fa85f54acec632d9f8d93078ee6d4ddc01456

[COMMIT MESSAGE]:Lisätty peruskoulujen haku organisaatiopalvelusta||
=========================================================

+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/3657b5210ed3a79d470d4266336e0a9a2a7a9939

[COMMIT MESSAGE]:Lisätty REST-controlleri ulkopuolisille palveluille||
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/4fb80761a94c866b8083bcb7d5afaeea4daeed46

[COMMIT MESSAGE]:Authorization mostly on service layer||
=========================================================

+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('REVISIONER')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE')")
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "
+ @PreAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/oshingc/CodecomparatorServer/commit/2f950ce07f691d22fa912a6903c9d79c7647421d

[COMMIT MESSAGE]:Todos los archivos de codecomparator, proyecto inicial SpringSecurity||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mononokehime/restaurantfinder/commit/1e42b13936ee17b4defa21f2d16b07e87b269c87

[COMMIT MESSAGE]:First commit of the code||
=========================================================

+// @PreAuthorize("#memberRelation.name == principal.id")
+// @PreAuthorize("#fromId == principal.id")
+// @PreAuthorize("#initiatorId == principal.id")
+// @PreAuthorize("#fromId == principal.id")
+// @PreAuthorize("#fromId == principal.id")
+// @PreAuthorize("#id == authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#todo.assignee == authentication.name")
+ @PreAuthorize("@permissionChecker.isPermitedToCloseTodo(#todo, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mleyvag/TutoriaFisi/commit/d77aec01a7c5eafcab98138457ab013790d4856a

[COMMIT MESSAGE]:...||1ercomit
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=86&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ouahabi/opencms/commit/5ff60cd8bd98eac01af83333099769c034d167c5

[COMMIT MESSAGE]:- First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+//@PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/ad3dee213b000e8ca279ee11410c2c1b81ac2e29

[COMMIT MESSAGE]:move content settings to /settings/content||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/7a1a36acd4052db25332affaabdd8d0a7b91dc71

[COMMIT MESSAGE]:s/^M//g||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("#animal.project.global or hasPermission(#animal.project, 'read')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#dataFile.project, 'read')")
- @PreAuthorize("hasPermission(#dataFile.project, 'write')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'read')")
+ @PreAuthorize("hasPermission(#dataFile.project, 'write')")
- @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("hasPermission(#project, 'write')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#project, 'manage')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'manage')")
- @PreAuthorize("permitAll")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#project.global or hasPermission(#project, 'read')")
- @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("#searchQuery.project.global or hasPermission(#searchQuery.project, 'read')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/uq-eresearch/oztrack/commit/356368cef6c03cc3e8c4c3a16065876921f1f6c9

[COMMIT MESSAGE]:integrated spring security, esp PreAuthorize||
=========================================================

+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#project, 'write')")
+ @PreAuthorize("hasPermission(#animal.project, 'write')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("#project.global or hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasPermission(#project, 'read')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/giacomomarciani/umac/commit/fba94f4cb875d898f4b46626fc50df5509bd87ae

[COMMIT MESSAGE]:User creation||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasAuthority('ROLE_ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atais/PP-JSON/commit/89c35bb33f65d3b8fb789ef0acbf951647f2c078

[COMMIT MESSAGE]:Hack for transactions||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wwpass/cas-server-support-wwpass/commit/fb3882bf64964c9e1d07802f45d9fbb22d60dd8d

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/b2b2c95cce039c789219b07c810765b0297e2bcd

[COMMIT MESSAGE]:Reinstated brand read services needing specific perm||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-uk/commit/2f6755dd6c4bfa257e7151676ab6fb8326d36d41

[COMMIT MESSAGE]:Added brands search service for use in autocomplete widget||
=========================================================

+ @PreAuthorize("permitAll")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=87&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/cxf-fediz/commit/31364847e3d5d35273dc5f6498ad9f98cc7dc164

[COMMIT MESSAGE]:[FEDIZ-77] RBAC Support for REST Interface||git-svn-id: https://svn.apache.org/repos/asf/cxf/fediz/trunk@1572730 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_CREATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_DELETE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_LIST')")
+ @PreAuthorize("hasRole('CLAIM_READ')")
+ @PreAuthorize("hasRole('CLAIM_CREATE')")
+ @PreAuthorize("hasRole('CLAIM_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_DELETE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_LIST')")
+ @PreAuthorize("hasRole('ENTITLEMENT_READ')")
+ @PreAuthorize("hasRole('ENTITLEMENT_CREATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_UPDATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_DELETE')")
+ @PreAuthorize("hasRole('IDP_LIST')")
+ @PreAuthorize("hasRole('IDP_READ')")
+ @PreAuthorize("hasRole('IDP_CREATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_DELETE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_LIST')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_DELETE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_LIST')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_READ')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_CREATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/cxf-fediz/commit/31364847e3d5d35273dc5f6498ad9f98cc7dc164

[COMMIT MESSAGE]:[FEDIZ-77] RBAC Support for REST Interface||git-svn-id: https://svn.apache.org/repos/asf/cxf/fediz/trunk@1572730 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_LIST')")
+ @PreAuthorize("hasRole('APPLICATION_CREATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_DELETE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('APPLICATION_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_LIST')")
+ @PreAuthorize("hasRole('CLAIM_READ')")
+ @PreAuthorize("hasRole('CLAIM_CREATE')")
+ @PreAuthorize("hasRole('CLAIM_UPDATE')")
+ @PreAuthorize("hasRole('CLAIM_DELETE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_LIST')")
+ @PreAuthorize("hasRole('ENTITLEMENT_READ')")
+ @PreAuthorize("hasRole('ENTITLEMENT_CREATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_UPDATE')")
+ @PreAuthorize("hasRole('ENTITLEMENT_DELETE')")
+ @PreAuthorize("hasRole('IDP_LIST')")
+ @PreAuthorize("hasRole('IDP_READ')")
+ @PreAuthorize("hasRole('IDP_CREATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_DELETE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('IDP_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_LIST')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_CREATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_DELETE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('ROLE_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_LIST')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_READ')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_CREATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_UPDATE')")
+ @PreAuthorize("hasRole('TRUSTEDIDP_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/DayOfServiceBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/albertinizao/juego-asalto-a-windows/commit/c8ab83e5c3334716eae17c7816907b3e95ad3d57

[COMMIT MESSAGE]:editar perfil funcionando||
=========================================================

+ @PreAuthorize("#usuario.nick == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/41ffaa1eece7fe6918e2e7b1d666433776d4a86e

[COMMIT MESSAGE]:MIFOS-4190: add service facades for client transfer and adding back g…||…roup membership for client
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_UPDATE_GROUP_MEMBERSHIP_OF_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/b7afabf23d13986bfc4b3bf582a37ed88ab4b484

[COMMIT MESSAGE]:MIFOS-4190: add service facade for group membership transfers||
=========================================================

+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_REMOVE_CLIENT_FROM_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_CHANGE_CENTER_MEMBERSHIP_OF_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/f1ed4a021489d98846335b73dca5b2504a7fbc80

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client MFI det…||…ails.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_PERSONAL_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_EDIT_CLIENT_MFI_INFO')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/5ee476ffdb61cc663f617c3171afa5658059d1c5

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client family …||…details.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/90d9f9fbf52d2a300471b257f4078c0a79468112

[COMMIT MESSAGE]:MIFOS-4190: add service facades for edit and update of client persona…||…l information.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/ca9c938ed0cb89884d13af8fe28eef9d9b0efe00

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/0bdb564bd341cb3ba947a6b28b20ee6abf5e6c93

[COMMIT MESSAGE]:reapply reverted commits with changes||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/c075efc210ef56753a7c21fc9c1e926a9fee3240

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/a0d2c24c8a0f52142c615f8d6c2fd0c69c10b34f

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client family details."||Attempting to fix the build by revert to last know working version

This reverts commit 8e62c60.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/37efb2e9e90bb7545526d2de0aa13ffa5752b82d

[COMMIT MESSAGE]:Revert "MIFOS-4190: add service facades around client creation."||This reverts commit 54e3f1d.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/f682fdd106d57e7ee88507b41f1a229869e649fc

[COMMIT MESSAGE]:Revert "MIFOS-4190: fix failing acceptance tests"||This reverts commit 3f47848.
=========================================================

- @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/3f478483e5e411c3fac9b692b1d6d5fd28ba5d97

[COMMIT MESSAGE]:MIFOS-4190: fix failing acceptance tests||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/54e3f1dddc08dee599594fb00968419915d76ae7

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client creation.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/8e62c608f98f588eb94247f77dfcb865d52129e8

[COMMIT MESSAGE]:MIFOS-4190: add service facades around client family details.||
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vorburger/mifos-head/commit/195ee2548d1ab46969069b37ad9412904024354e

[COMMIT MESSAGE]:MIFOS-4190: add service facade for retrieving client data for client …||…creation.
=========================================================

+ @PreAuthorize("isFullyAuthenticated()")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")
- @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_CAN_EDIT_GROUP')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swaroopboddu/SecureBankingSystem/commit/6fbcedff8dee46f38ddd430a5cda8d93d6622e58

[COMMIT MESSAGE]:First time replication for all good||This is a project with Spring
=========================================================

+ @PreAuthorize("hasPermission(#user, '*;DEPT_SALES')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_SALES')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("isFullyAuthenticated()")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_MANAGER;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_HR')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'ROLE_ADMIN;DEPT_SYSADMIN')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, 'EXTERNAL_USER;EXTERNAL_USER')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS:ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS:ROLE_OFFICIAL;*')")
+ @PreAuthorize("hasPermission(#user, '*;DEPT_TRANS:ROLE_OFFICIAL;*')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/6527cba45b548bc90a93dffb55b2f2abbb9f200d

[COMMIT MESSAGE]:Added brand rest endpoint||
=========================================================

+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=88&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/68ce409736572a25438a0f66e8c55c934bf84fd9

[COMMIT MESSAGE]:can view task,can edit task||
=========================================================

- @PreAuthorize("isAnonymous()")
- @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jeff83/xcore/commit/0cbeb1ed6c4fdf6316deef7a50804748c971950a

[COMMIT MESSAGE]:First commit||
=========================================================

+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidbilge/Scorekeeper/commit/b98eb07da4a19df3d2bbf321a200c9650d7cf959

[COMMIT MESSAGE]:enable secure urls||
=========================================================

+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ @PreAuthorize("hasRole('SCOREADMIN')")
+ // @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('USER')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")
+ @PreAuthorize("hasRole('APPADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oyach/springsecuritydemo/commit/8ed2739fd4617e7cbc4da3e925a2d8d0dc2aea69

[COMMIT MESSAGE]:创建spring security 例子||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oyach/springsecuritydemo/commit/79be0bcc999d261af68c4af9a230b81de9226740

[COMMIT MESSAGE]:增加了jsr250的注解依赖||
=========================================================

- @PreAuthorize("#name=='faith'")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oyach/springsecuritydemo/commit/977feb19d9b801052462b121673af10a855bbb7a

[COMMIT MESSAGE]:增加第二个例子||
=========================================================

+ @PreAuthorize("#name=='faith'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nanfengbobo/eds-deftjs-extjs4-starter/commit/0a8ff5751c69db710a0517162c115fa255f7825d

[COMMIT MESSAGE]:add i18n surpport||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole(ADMIN)")
+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/0b83ab3a1d0e1d1592c204201d18abbc005c8273

[COMMIT MESSAGE]:Changing up all the permissions for SHAPE.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VMA-SHAPEBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blixabargeld/list-spring-mvc/commit/a254cddc045c361e09b4103926e40a18d670a144

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
+ @PreAuthorize("hasRole('Administrator')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=89&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93

