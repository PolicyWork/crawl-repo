
=========================================================
[CODE-CHANGE-URL]:https://github.com/aaldapa/EasyHome-Conta/commit/89f538e1f8c7e8ff3fac8bcb85546371cc3af12b

[COMMIT MESSAGE]:modificaciones||
=========================================================

+ ej: @PreAuthorize("#u.login == principal.username and hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Francis0121/nornenjs.debug/commit/1f5693d8cd3ea0d87c1ed607e30492355f99eb0a

[COMMIT MESSAGE]:Spring security 적용||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Misha1234567890/MyPrepareModules/commit/90a4f57d13c7fc54fb4b02c0a0f662f7a62a5c56

[COMMIT MESSAGE]:fixed some bugs.||
=========================================================

- @PreAuthorize("hasRole('" + Roles.ROLE_GUEST + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Misha1234567890/MyPrepareModules/commit/0e95b5aaabdf36dad021a2d4b35730cd6db6b8c0

[COMMIT MESSAGE]:Add form action while authorize||
=========================================================

+@PreAuthorize("hasRole('" + Roles.ROLE_USER + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Misha1234567890/MyPrepareModules/commit/cbdc98ecd292c726ca797dfac0c87089050d3a53

[COMMIT MESSAGE]:Add preauthorize||
=========================================================

+ @PreAuthorize("hasRole('" + Roles.ROLE_GUEST + "')")
+ @PreAuthorize("hasRole('" + Roles.ROLE_GUEST + "')")
+ @PreAuthorize("hasRole('" + Roles.ROLE_USER + "') and|or hasRole('" + Roles.ROLE_ADMIN + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/c54b04fa1fbd040004abddd88c155288ddbb2beb

[COMMIT MESSAGE]:ajax jquery nawigacja||
=========================================================

- @PreAuthorize("hasRole('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")
+// @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/MMaksymilian/TEST-APP/commit/d861424f3c35a369906a78b82e40a3fa3c9a54e7

[COMMIT MESSAGE]:spring security metody, zmiana pobierania deklaracji, dodałem filtr h…||…ibernate
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=2&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/btpka3/btpka3.github.com/commit/de177fda6ace536ad0d61d788636ec2bfed441fc

[COMMIT MESSAGE]:copy Spring Security ACL samples||
=========================================================

+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
+ @PreAuthorize("hasRole('XROLE_READ_APPOINTMENT')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('XROLE_READ_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/btpka3/btpka3.github.com/commit/f48d2c74145ce76bfa9570b516482e2664349e5e

[COMMIT MESSAGE]:d||
=========================================================

+ @PreAuthorize("hasRole('ROLE_READ_APPOINTMENT')") // 这些权限控制的注解也可以应用到接口上
+ @PreAuthorize("hasRole('ROLE_READ_STAFF')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tomekl007/spitterMVCplusHibernate/commit/56eaf6be846c07a276af1d021b26caa3922a22af

[COMMIT MESSAGE]:add custom login, using plain Text, DB, or ldap||
=========================================================

+ @PreAuthorize("(hasRole('ROLE_SPITTER') and #spittle.text.length()<=140) " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/virgo47/restful-spring-security/commit/ab7ab37f84844b959f2c5ecbddad979978b9cf51

[COMMIT MESSAGE]:mastered security annotations, even ran into problems with role voter…||…s; token manager separated, so far without interface
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpsRJ/l2m/commit/7492ecfa9d81b886ddcd1538b45f0dd2a4ccef91

[COMMIT MESSAGE]:Inicial||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CESNET-Integracni-portal/integracni-portal/commit/8e682653638ea36532e66eb613ae20ff312ac727

[COMMIT MESSAGE]:Implemented basic REST.||
=========================================================

- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CESNET-Integracni-portal/integracni-portal/commit/172f6c546b3b8af62bdfe002f67e3272d4d896c1

[COMMIT MESSAGE]:#18 Basic user login and registration.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=3&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/pashtika/spring-mvc/commit/947982f7a8ff714546162ec483a5116ee1a33cc4

[COMMIT MESSAGE]:SpringSecurity-MongoDB-MVC||
=========================================================

+ @PreAuthorize("hasRole('ROLE_CAMPAIGN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lordmarkm/indgte/commit/969f5535e63f9ecdc83c152ee4683e8ac5e3d9ec

[COMMIT MESSAGE]:bunch of stuff||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/antuansoft/SpringSecurity-MongoDB-MVC/commit/5f389a93f22606b411f03a08afae5ed606922267

[COMMIT MESSAGE]:Comments views and little config changes||
=========================================================

- @PreAuthorize("hasRole('ROLE_CAMPAIGN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/antuansoft/SpringSecurity-MongoDB-MVC/commit/d84666ec60413d95ee8e0e586eb6a79ba7739fc1

[COMMIT MESSAGE]:Initial Import||
=========================================================

+ @PreAuthorize("hasRole('ROLE_CAMPAIGN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Mrshll187/SecurityWebapp/commit/bf9241532c78bcd309ce657cf71beae838b5f7c6

[COMMIT MESSAGE]:Initial commit of project||
=========================================================

+ @PreAuthorize("hasRole('"+RoleConstants.MANAGER+"')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/Leagues/commit/0b48004a59a15b7bd0708f6cf93023cfcedcda64

[COMMIT MESSAGE]:adding some missing files||
=========================================================

-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('admin')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('admin')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('admin')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('admin')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('admin')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('admin')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('user')")
-// @PreAuthorize("hasRole('ROLE_HF_USER')")
+ @PreAuthorize("hasRole('user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/Leagues/commit/67814acfb179b8159066de1819e44c64ba41b8a0

[COMMIT MESSAGE]:adding the ws project ot git||
=========================================================

+// @PreAuthorize("hasRole('ROLE_HF_USER')")
+// @PreAuthorize("hasRole('ROLE_HF_USER')")
+// @PreAuthorize("hasRole('ROLE_HF_USER')")
+// @PreAuthorize("hasRole('ROLE_HF_USER')")
+// @PreAuthorize("hasRole('ROLE_HF_USER')")
+// @PreAuthorize("hasRole('ROLE_HF_USER')")
+// @PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=4&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/xsxjb/ibusiness_wy/commit/bdf8b025848cf09bd39d1fb7aaca4c6100131465

[COMMIT MESSAGE]:v0.0.1工程整体改名||v0.0.1工程整体改名
=========================================================

- <!-- @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/Human-Resource-System/commit/9caf0ac09d867327afd4e0beccfa11767eb05b19

[COMMIT MESSAGE]:initial commit||
=========================================================

+@PreAuthorize("hasRole('" + CustomRole.ADMIN + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+ @PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/f3f7ddab60a7b26e5d4f4fab43194488c7dc4d03

[COMMIT MESSAGE]:Primer ejemplo basico de acceso denegado a un usuario logueado al int…||…entar llamar a un metodo.
=========================================================

- @PreAuthorize("hasRole('PERM_VIEW_REPORTS')")
+ @PreAuthorize("hasRole('PERM_VIEW_REPORTS2')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/damianciocca/gwt-spring-hibernate-maven/commit/0140ad310a76bccbe5942d226e4e0a0a1df72445

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('PERM_VIEW_REPORTS')")
+ Ejemplo1 : @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=5&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/thomasma/springmvc-restful/commit/9a4ae0dc8df4cee592d5b0aedd398e3bc8a5dd97

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('customer')")
+ @PreAuthorize("hasRole('customer')")
+ @PreAuthorize("hasRole('customer')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/didier-mycontrib/soa-ws-examples/commit/3709e30381a80b7efaa2ef9175e1b0c900472029

[COMMIT MESSAGE]:initial||
=========================================================

+ pour tenir compte de @PreAuthorize("hasRole('supervisor') or hasRole('teller')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/WeijianHuang/sardine/commit/db7c8bdf6abbc67c998d7cbbd67af3b620d6cb5c

[COMMIT MESSAGE]:基本的已经完成。大致可用。需待完善||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ <!--开启 security AOP 在每个方法执行前 先验证权限 方法上面要加 @PreAuthorize("hasRole('ROLE_USER')")-->

=========================================================
[CODE-CHANGE-URL]:https://github.com/xsxjb/ibusiness_zs/commit/f4d319c86920bcf5a990da23fd8003bae92490db

[COMMIT MESSAGE]:v0.0.1装饰公司管理平台||v0.0.1装饰公司管理平台
=========================================================

+ <!-- @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/zollder/app/commit/1161a254ff638f1cb0e8da7bc5db6f2d86220c69

[COMMIT MESSAGE]:security: - added advanced http security handling and enabled basic a…||…uthentication; - enabled custom implementation of the Spring's UserDetailsService; - enabled simple role-based constraints (with annotations);
=========================================================

+ Example: @PreAuthorize("hasAuthority('ROLE_TELLER')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=6&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/0980c9dd51db337ead4843c071e4c050576c976a

[COMMIT MESSAGE]:No commit message||
=========================================================

-@PreAuthorize("denyAll")
+//@PreAuthorize("denyAll")
- @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+ @PreAuthorize("hasRole('AUTHORITY_USER')")
+ @PreAuthorize("hasRole('AUTHORITY_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/muazcisse/quicktickets-dashboardJPA/commit/7199a7726919c44ba639a93b44b3c47388b2c7f0

[COMMIT MESSAGE]:updates||
=========================================================

-@PreAuthorize("denyAll")
- @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mohchi/spring-security-request-mapping/commit/bcf03622b4f4cb83dd6423d60f895dd72af56499

[COMMIT MESSAGE]:Added sample maven managed web project||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kurochenko/E-commerce-in-cloud/commit/71b2242393a8e1e280e322b3c6d9376c7b20462c

[COMMIT MESSAGE]:styles added||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mashkovsky/pa165-airport/commit/0029631def0dd5c81ab9d1fe05ee61be78d9ee55

[COMMIT MESSAGE]:Spring security support added.||
=========================================================

+@PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+@PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+@PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")
+@PreAuthorize("hasRole('" + CustomRole.LOGGED + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lounesag/testC/commit/8675eabfd7aedd319327c669375fa2cac4e96cca

[COMMIT MESSAGE]:add colis to user manytomany & dao, service, controller crud to be co…||…ntinued
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasAnyRole('ADMIN','ROLE_SPECIAL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lounesag/testC/commit/84f118224e2a66125c25739aacf2b0ac9e6437cc

[COMMIT MESSAGE]:implement a basic authentication system to be ameliored||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/xsxjb/txActiviti/commit/3a29b07bc3f278ded6f2b07b09ecf919e99bbc6e

[COMMIT MESSAGE]:v0.0.1基础模块spring security部分1||v0.0.1基础模块spring security部分1
=========================================================

+ <!-- @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/7c99361c260dc34df2203fa781483feb3d5bcfb6

[COMMIT MESSAGE]:Reduce length of long lines in the reference manual.||Some are too long for the PDF version.
=========================================================

- application)<programlisting> @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- about:<programlisting> @PreAuthorize("hasPermission(#contact, 'admin')")
+ @PreAuthorize("hasPermission(#contact, 'admin')")
- <programlisting> @PreAuthorize("#contact.name == principal.name)")
+ @PreAuthorize("#contact.name == principal.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/30b70008755b5bc162aa4ce2fadc84acb063f4b6

[COMMIT MESSAGE]:SEC-1178: Updates to EL docs||
=========================================================

+ application)<programlisting> @PreAuthorize("hasRole('ROLE_USER')")
+ about:<programlisting> @PreAuthorize("hasPermission(#contact, 'admin')")
+ <programlisting> @PreAuthorize("#contact.name == principal.name)")
+ example:<programlisting> @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/cd6711d21a0b372e9d120bc992a2129c26f20b4c

[COMMIT MESSAGE]:Doc updates.||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasAuthority('ROLE_TELLER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/30b70008755b5bc162aa4ce2fadc84acb063f4b6

[COMMIT MESSAGE]:SEC-1178: Updates to EL docs||
=========================================================

+ application)<programlisting> @PreAuthorize("hasRole('ROLE_USER')")
+ about:<programlisting> @PreAuthorize("hasPermission(#contact, 'admin')")
+ <programlisting> @PreAuthorize("#contact.name == principal.name)")
+ example:<programlisting> @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/cd6711d21a0b372e9d120bc992a2129c26f20b4c

[COMMIT MESSAGE]:Doc updates.||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasAuthority('ROLE_TELLER')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=7&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/wanchun2012/EJournalSystem/commit/ecc328b5ed3e380bbac350cf0a3003956345fe66

[COMMIT MESSAGE]:COM6514 - Group Project EJournal System||
=========================================================

+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_AUTHOR')) && (hasPermission(#authorName,'sameID'))")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_AUTHOR')) && (hasPermission(#authorName,'sameID'))")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_AUTHOR')")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')) && (hasPermission(#editorName,'sameID'))")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')) && (hasPermission(#editorName,'sameID'))")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')) && (hasPermission(#reviewerName,'sameID'))")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')) && (hasPermission(#reviewerName,'sameID'))")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wanchun2012/EJournalSystem/commit/ecc328b5ed3e380bbac350cf0a3003956345fe66

[COMMIT MESSAGE]:COM6514 - Group Project EJournal System||
=========================================================

+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_AUTHOR')) && (hasPermission(#authorName,'sameID'))")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_AUTHOR')) && (hasPermission(#authorName,'sameID'))")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_AUTHOR')")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')) && (hasPermission(#editorName,'sameID'))")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')) && (hasPermission(#editorName,'sameID'))")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')) && (hasPermission(#reviewerName,'sameID'))")
+ @PreAuthorize("(hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')) && (hasPermission(#reviewerName,'sameID'))")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sHlyoMa/SS-TC/commit/a4e605bce7f44f3194f02f1600deb02dd53ab5f2

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'View issues')")
+ @PreAuthorize("hasPermission(#user, 'View issues')")
+ @PreAuthorize("hasPermission(#user, 'View issues')")
+ @PreAuthorize("hasPermission(#user, 'Delete issue')")
+ @PreAuthorize("hasPermission(#user, 'Add issue')")
+ @PreAuthorize("hasPermission(#user, 'Add issue')")
+ @PreAuthorize("hasPermission(#user, 'Edit issue')")
+ @PreAuthorize("hasPermission(#user, 'Edit issue')")
+ @PreAuthorize("hasPermission(#user, 'View issues')")
+ @PreAuthorize("hasPermission(#user, 'Add comment')")
+ @PreAuthorize("hasPermission(#user, 'Assign to')")
+ @PreAuthorize("hasPermission(#user, 'Assign to me')")
+ @PreAuthorize("hasPermission(#user, 'Start progress')")
+ @PreAuthorize("hasPermission(#user, 'Resolve issue')")
+ @PreAuthorize("hasPermission(#user, 'Close issue')")
+ @PreAuthorize("hasPermission(#user, 'Reopen issue')")
+ @PreAuthorize("hasPermission(#user, 'Reset issue')")
+ @PreAuthorize("hasPermission(#user, 'Blocked')")
+ @PreAuthorize("hasPermission(#user, 'View projects')")
+ @PreAuthorize("hasPermission(#user, 'View projects')")
+ @PreAuthorize("hasPermission(#user, 'Add project')")
+ @PreAuthorize("hasPermission(#user, 'Add project')")
+ @PreAuthorize("hasPermission(#user, 'Edit project')")
+ @PreAuthorize("hasPermission(#user, 'Edit project')")
+ @PreAuthorize("hasPermission(#user, 'Delete project')")
+ @PreAuthorize("hasPermission(#user, 'Delete project')")
+ @PreAuthorize("hasPermission(#user, 'View roles')")
+ @PreAuthorize("hasPermission(#user, 'Add role')")
+ @PreAuthorize("hasPermission(#user, 'Add role')")
+ @PreAuthorize("hasPermission(#user, 'Delete role')")
+ @PreAuthorize("hasPermission(#user, 'Edit role')")
+ @PreAuthorize("hasPermission(#user, 'Edit role')")
+ @PreAuthorize("hasPermission(#user, 'View roles')")
+ @PreAuthorize("hasPermission(#user, 'View users')")
+ @PreAuthorize("hasPermission(#user, 'View users')")
+ @PreAuthorize("hasPermission(#user, 'View users')")
+ @PreAuthorize("hasPermission(#user, 'Add user')")
+ @PreAuthorize("hasPermission(#user, 'Add user')")
+ @PreAuthorize("hasPermission(#user, 'Delete user')")
+ @PreAuthorize("hasPermission(#user, 'Edit user')")
+ @PreAuthorize("hasPermission(#user, 'Edit user')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=8&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-mvc-test-examples/commit/2ff381e14a38eb0fd41df386c7185ed75839e691

[COMMIT MESSAGE]:First implementation||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/6adef5b91e3d61c2197835cf30257686478d9638

[COMMIT MESSAGE]:Work started||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/1b9c84415807e744b5865da44cd28a01f18af033

[COMMIT MESSAGE]:First commit of criteria example||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/b3069e40c5b1bcca3a1a07a6befc1944756ea60e

[COMMIT MESSAGE]:First implementation||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'search')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/f737fa3173e0cb3b52e280242b50a221c11d9387

[COMMIT MESSAGE]:Wrote backend implementation for pagination the query results of quer…||…y methods
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkainulainen/spring-data-solr-examples/commit/427341e7697c1b58a9ac2d4bc4e10c6f372fa3f1

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/joanluk/spring-data-rest/commit/aa64f7a09f7f7de8d7bf32080579c5eb2d7c14b6

[COMMIT MESSAGE]:include code project||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=9&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Purushottam2005/spring-data-rest/commit/aa64f7a09f7f7de8d7bf32080579c5eb2d7c14b6

[COMMIT MESSAGE]:include code project||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/b7f28c7862a292b01032372883c7406f98b95634

[COMMIT MESSAGE]:sss||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/linian365boy/lanyuan/commit/3bdc87c0940c3bba8f635790f1782aa3e3affa98

[COMMIT MESSAGE]:456||
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/linian365boy/lanyuan/commit/3bdc87c0940c3bba8f635790f1782aa3e3affa98

[COMMIT MESSAGE]:456||
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/lanyuancom/lanyuan/commit/5c6b63e191cdcdeeacca1880b6b3ea60acaf99cc

[COMMIT MESSAGE]:2013-12-08||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/lanyuancom/lanyuan/commit/1d08118f6a62c266fa426324db940ab0d43ed89d

[COMMIT MESSAGE]:No commit message||
=========================================================

- * @PreAuthorize("hasRole('ROLE_SUPER')")
- @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/lanyuancom/lanyuan/commit/8c33b8a9d13183721a9f47c0a3535c2f1da86007

[COMMIT MESSAGE]:No commit message||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=10&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/wycscau/authority/commit/7b42d684b6ccebb7bdbf9640701618ac1e22e293

[COMMIT MESSAGE]:初步构建环境spring3.2+hibernate4.1+springMVC3.2+spring||security3.1+easyUI1.31+Highcharts3.06+plupload2.0+ueditor1.2.6.1+My97DatePicker4.8
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/wycscau/authority/commit/7b42d684b6ccebb7bdbf9640701618ac1e22e293

[COMMIT MESSAGE]:初步构建环境spring3.2+hibernate4.1+springMVC3.2+spring||security3.1+easyUI1.31+Highcharts3.06+plupload2.0+ueditor1.2.6.1+My97DatePicker4.8
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/sugarlisu/sp_security/commit/ebd0d0aabc000ebb9aae3797ec2f4bdc041db5a9

[COMMIT MESSAGE]:spring_secuirty||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/sugarlisu/sp_security/commit/ebd0d0aabc000ebb9aae3797ec2f4bdc041db5a9

[COMMIT MESSAGE]:spring_secuirty||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/308306362/test/commit/3de5a717e4bf86d8211d68704c6e3c8bbca610f7

[COMMIT MESSAGE]:git test||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zyw/autho/commit/cc863b60c362368503a860c877a203c96a63b986

[COMMIT MESSAGE]:初始化||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/dylan1108/yilami/commit/427ce0bfe5936fc5d5696c73830953936b8109c5

[COMMIT MESSAGE]:init yilami project by dylan||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/the-ramones/red-mangolin/commit/39e6a3bc789b0bcfd69e5c8ada44f9f93646f00c

[COMMIT MESSAGE]:Copied files from https://github.com/pkshowcase/reports||
=========================================================

+@PreAuthorize("isAuthenticated() and hasRole('ROLE_USER')")
+@PreAuthorize("isAuthenticated() and hasAnyRole('ROLE_USER', 'ROLE_ADMIN')")
+@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/linian365boy/waimai-web/commit/3d3ec16ba877d36e90cb81b89e0f780e7af6ee84

[COMMIT MESSAGE]:permission||permession and something base
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=11&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/pandalin/springmvc/commit/019abc468be55e17cfe8082ad8a3643b6cc05c07

[COMMIT MESSAGE]:springmvc||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/pandalin/springmvc/commit/019abc468be55e17cfe8082ad8a3643b6cc05c07

[COMMIT MESSAGE]:springmvc||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/fengjunjun98/lanyuan/commit/e5b3e775494e0f71ac6356fffea3ac24770617ec

[COMMIT MESSAGE]:系统项目||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pkshowcase/reports/commit/169ae58373f011bace368c81e52fd7a2749fc716

[COMMIT MESSAGE]:Pushed content from local repo||
=========================================================

+@PreAuthorize("isAuthenticated() and hasRole('ROLE_USER')")
+@PreAuthorize("isAuthenticated() and hasAnyRole('ROLE_USER', 'ROLE_ADMIN')")
+@PreAuthorize("isFullyAuthenticated() and hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kenneth-hao/news/commit/d658048fd4c23a0cc0dff45d0ef3ac419ee9c6c4

[COMMIT MESSAGE]:first commit||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')") <!-- 用户是否拥有所请求资源的权限 -->
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/framework/commit/8396f3164b4392f4319b12b5b305d7aa1bec801c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/framework/commit/8396f3164b4392f4319b12b5b305d7aa1bec801c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/framework/commit/8396f3164b4392f4319b12b5b305d7aa1bec801c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bigbomb/bootstrap--springsecurity----/commit/3d4420c9737470bfa81cb2523169922a10e208ac

[COMMIT MESSAGE]:新的bootstrap-lanyuan项目||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=12&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/framework/commit/8396f3164b4392f4319b12b5b305d7aa1bec801c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/framework/commit/8396f3164b4392f4319b12b5b305d7aa1bec801c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tdelesio/framework/commit/8396f3164b4392f4319b12b5b305d7aa1bec801c

[COMMIT MESSAGE]:Initial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")
+@PreAuthorize("hasRole('ROLE_HF_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bigbomb/bootstrap--springsecurity----/commit/3d4420c9737470bfa81cb2523169922a10e208ac

[COMMIT MESSAGE]:新的bootstrap-lanyuan项目||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/rickhan2014/authority/commit/5c6b63e191cdcdeeacca1880b6b3ea60acaf99cc

[COMMIT MESSAGE]:2013-12-08||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/rickhan2014/authority/commit/1d08118f6a62c266fa426324db940ab0d43ed89d

[COMMIT MESSAGE]:No commit message||
=========================================================

- * @PreAuthorize("hasRole('ROLE_SUPER')")
- @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/rickhan2014/authority/commit/8c33b8a9d13183721a9f47c0a3535c2f1da86007

[COMMIT MESSAGE]:No commit message||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zhangjunfang/nsp/commit/f21fcb154a6b339f33e5551543bf84b3dd466651

[COMMIT MESSAGE]:删除svn文件||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/zhangjunfang/nsp/commit/f21fcb154a6b339f33e5551543bf84b3dd466651

[COMMIT MESSAGE]:删除svn文件||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/lanyuancom/lanyuan-2.0/commit/40c28c7b677ab9400e9f6d3a902873ef97a2402a

[COMMIT MESSAGE]:No commit message||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/zhangjunfang/eclipse/commit/029cb3c829ff04cbca2617042ddb11f7e84d6bf9

[COMMIT MESSAGE]:aa||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=13&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/zhangjunfang/eclipse/commit/029cb3c829ff04cbca2617042ddb11f7e84d6bf9

[COMMIT MESSAGE]:aa||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/zhangjunfang/eclipse/commit/029cb3c829ff04cbca2617042ddb11f7e84d6bf9

[COMMIT MESSAGE]:aa||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/huayin0/HunterWeb/commit/e1549f6cfabcc13f633e480087cf37c39c103001

[COMMIT MESSAGE]:update||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。 @PostAuthorize：该注解用来在方法执行完之后进行访问控制检查。
+ @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。 @PostAuthorize：该注解用来在方法执行完之后进行访问控制检查。

=========================================================
[CODE-CHANGE-URL]:https://github.com/huayin0/HunterWeb/commit/e1549f6cfabcc13f633e480087cf37c39c103001

[COMMIT MESSAGE]:update||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。 @PostAuthorize：该注解用来在方法执行完之后进行访问控制检查。
+ @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。 @PostAuthorize：该注解用来在方法执行完之后进行访问控制检查。

=========================================================
[CODE-CHANGE-URL]:https://github.com/freetiger/lanyuan-web/commit/f48549acac0c7f194b95686de2030c4bbaed5b63

[COMMIT MESSAGE]:初次提交||
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/freetiger/lanyuan-web/commit/f48549acac0c7f194b95686de2030c4bbaed5b63

[COMMIT MESSAGE]:初次提交||
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/newdemo/ERP_LanYuan/commit/40c28c7b677ab9400e9f6d3a902873ef97a2402a

[COMMIT MESSAGE]:No commit message||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/sshling/mybatis/commit/7c693e0018e20bfcacbf91ec24c38fc3730c2318

[COMMIT MESSAGE]:Signed-off-by: shaoling <sshling@gmail.com>||
=========================================================

- * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')") <!-- 用户是否拥有所请求资源的权限 -->
- @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ @PreAuthorize：确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，值为真则方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sshling/mybatis/commit/138379fbbb79457d9aed7164bae0e5031bf2b296

[COMMIT MESSAGE]:Signed-off-by: shaoling <sshling@gmail.com>||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=14&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/softgo/Model2/commit/a1efaa7d222180d6c92e94b8605bcfd18cf81e0a

[COMMIT MESSAGE]:second commit||
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/softgo/Model2/commit/a1efaa7d222180d6c92e94b8605bcfd18cf81e0a

[COMMIT MESSAGE]:second commit||
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/b7f28c7862a292b01032372883c7406f98b95634

[COMMIT MESSAGE]:sss||
=========================================================

-@PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/0281a94811fb4bf931d2f8dfc83793f5b22dd16b

[COMMIT MESSAGE]:groovy||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/7cd366e0c2f6ad914e1ad68f486b829700059201

[COMMIT MESSAGE]:home||
=========================================================

+@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/matiaseidis/social.content/commit/f5fea6259fef3d55801ec77cdc2d32caba2a0f21

[COMMIT MESSAGE]:full login||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rooneyp1976/SiA3/commit/f327c169c8ab54b29a4fb7267f0afe00636ffc0c

[COMMIT MESSAGE]:sia||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oradev/sping-in-action-code-examples/commit/8507798cd70b1b8f254aa801cb29062747a2cb8f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sikm31/yuri3/commit/e0766118f5a802446221d89bbaf4f81a58a24d9d

[COMMIT MESSAGE]:spring1||springproject
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=15&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/icefireunicorn/springinaction3rd-demo/commit/3661beb56d7253c83d6faa6c3b9b108cf890229b

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/EricGDW/template/commit/f82fbda7d0ad0f1a1517954e81b729e6f0735e0b

[COMMIT MESSAGE]:权限控制实现||Signed-off-by: guoduanwu <guoduanwu@163.com>
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nazar-art/SpringInAction/commit/f365c09374613f658939706b8d89ebfe2f1452a6

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zliumichael/SpingInAction_SampleCode/commit/76656d40604b1fefd4c87fc34a75304a474f4799

[COMMIT MESSAGE]:add sia||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gitrepo7777/Spring-In-Action-Code-3rd-Edition/commit/4e93b0db94c4c934b19bcdceccede27d84791bc1

[COMMIT MESSAGE]:Spring In Action Code 3rd Edition||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swcho/ex_spring_old/commit/b6752ee9029baf3e8f9c794c11ab3f609ac15dde

[COMMIT MESSAGE]:Spring in Action example||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=16&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/code-examples/sping-in-action-book-third-edition-code-examples/commit/74bf3899498ab67859ead50be838915bb41e9e43

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jonatanvicente/spring/commit/9c2a5eb0d0bb3ee7100b80a1fdfe4063326b35c0

[COMMIT MESSAGE]:Creacion del proyecto||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jazzlly/Notes/commit/894027b9731bd3ef4df0fe420fe81afed5ee4b2f

[COMMIT MESSAGE]:update spring security||
=========================================================

- @PreAuthorize("hasRole('admin')")
- @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tavenli/URACS/commit/5ea7b1e5f482ad71735811999d13075d34aee4e8

[COMMIT MESSAGE]:Signed-off-by: Taven <lixyvip@qq.com>||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/tom87416/SpringInActionSourceCode/commit/49a6436acf379863c0307cc9fa47c2dab172a771

[COMMIT MESSAGE]:download from http://www.manning.com/walls4||http://www.manning.com/walls4/
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/393f54ed1c94c177d6381cf1b91962f303b82707

[COMMIT MESSAGE]:Spring In Action created.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sip1code/commit/0c107d74c510f4dc9c3ace38d2e14e7cf318867b

[COMMIT MESSAGE]:首次更新||同步源代码到一个库下
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/Sheparzo/sia3-code/commit/08a2a0f48f8c615d6dda1305a7aecfd2fb13507e

[COMMIT MESSAGE]:Initial commit of book code provided by publisher at http://manning.c…||…om/walls4/
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gavin-feng/SpringInActionStudy/commit/25dc18bdce6efce993ec3fcf73a681eab5c614e7

[COMMIT MESSAGE]:base src from manning website||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=17&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/springinpractice/sip-blog/commit/5b20f29c7c7b5d242c0ebf69765a61a0830ecb97

[COMMIT MESSAGE]:Updated site||
=========================================================

-@PreAuthorize("hasRole('facultyMember')")
-@PreAuthorize("hasRole('facultyMember') or hasRole('teachingAssistant')")
-@PreAuthorize("hasPermission(#message, write)")
-@PreAuthorize("hasRole('PERM_READ_FACULTY_NEWS')")
+@PreAuthorize("hasRole('facultyMember')")
+@PreAuthorize("hasRole('facultyMember') or hasRole('teachingAssistant')")
+@PreAuthorize("hasPermission(#message, write)")
+@PreAuthorize("hasRole('PERM_READ_FACULTY_NEWS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dineshbabu/spring3-trial/commit/d847648cc947b5c4725b7c02010c6033891088f1

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/heichenhardt/SpringInAction/commit/6bbee367285990831921d0599a5415620ea8b698

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ideng/winter/commit/7eaad2baff3df401d1708691f60ac4ceff3ada17

[COMMIT MESSAGE]:Spring In Action 3 source code||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liqian008/foundation/commit/aed8f69d7a4aa177554221472e3b26ada6ea0542

[COMMIT MESSAGE]:修改package路径||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/filber/JavaRepo/commit/82831db085cadb98415c9ac23d3c36a6ded14760

[COMMIT MESSAGE]:snippets.||
=========================================================

+@PreAuthorize("hasRole('ROLE_SPITTER)")
+@PreAuthorize("hasRole('ROLE_SPITTER)")
+@PreAuthorize("hasRole('ROLE_SPITTER')")
+@PreAuthorize("(hasRole('ROLE_SPITTER') and #spittle.text.length() <= 140)

=========================================================
[CODE-CHANGE-URL]:https://github.com/GGkBand/spring/commit/e8d27407fb6f2c99139b687c69aab8d10cddeb92

[COMMIT MESSAGE]:init spring||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=18&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/springinpractice/sip07/commit/d656ea1a0dfb8f919aa7a42d084a41d8e15f5b8b

[COMMIT MESSAGE]:Moving classes from SVN to git.||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/liqian008/baseAdmin/commit/89b452e2a027c833b16fd325e9936364588869d1

[COMMIT MESSAGE]:修改包路径||
=========================================================

+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/nathan-wolfe-lienhardt/cos576/commit/d2309e07ac8735f532ba52de645a2f7edc1565ef

[COMMIT MESSAGE]:Tried yet again, to commit more SIP examples||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>

=========================================================
[CODE-CHANGE-URL]:https://github.com/sysm1/sysmanage/commit/07a3d70498deda94a83e53b621040c5d4200c359

[COMMIT MESSAGE]:init||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('divisionRead')")
+ @PreAuthorize("hasAnyRole('divisionAdd','divisionEdit')")
+ @PreAuthorize("hasRole('divisionDelete')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasRole('employeeRead')")
+ @PreAuthorize("hasAnyRole('employeeAdd','employeeEdit')")
+ @PreAuthorize("hasRole('employeeDelete')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @Override @PreAuthorize("hasRole('adminPrivilege')")
+ @PreAuthorize("hasAnyRole('adminPrivilege','managerPrivilege')")
+ @PreAuthorize("hasAnyRole('messageEdit','messageAdd')")
+ @PreAuthorize("hasRole('messageDelete')")
+ @PreAuthorize("hasRole('messageRead')")
+ /*@Override @PreAuthorize("hasRole('messagRead')")
+ @Override @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('messageRead')")
+ @PreAuthorize("hasRole('projectPrivilege')")
+ @PreAuthorize("hasRole('projectDelete')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasRole('appPermissionRead')")
+ @Override @PreAuthorize("hasAnyRole('appPermissionAdd','appPermissionEdit')")
+ @Override @PreAuthorize("hasRole('appPermissionDelete')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasRole('appRoleRead')")
+ @Override @PreAuthorize("hasAnyRole('appRoleAdd','appRoleEdit')")
+ @Override @PreAuthorize("hasRole('appRoleDelete')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override /* @PreAuthorize("hasRole('appUserRead')") */
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasRole('appUserRead')")
+ @Override @PreAuthorize("hasAnyRole('appUserAdd','appUserEdit')")
+ @Override @PreAuthorize("hasRole('appUserDelete')")
+ @Override //@PreAuthorize("#appUser.id == 'null'") //No authentication, no any secure logic working
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=19&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/HuberyChen/spring-pratice-project/commit/8fa0d610e125444ba9d60ce709d3eccb9ae0ab03

[COMMIT MESSAGE]:123||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HuberyChen/spring-pratice-project/commit/35ae786f5005c3dabb48dbd2325538d831a8a10b

[COMMIT MESSAGE]:1||
=========================================================

-@PreAuthorize("hasRole('ROLE_SPITTER)")
-@PreAuthorize("hasRole('ROLE_SPITTER)")
-@PreAuthorize("hasRole('ROLE_SPITTER')")
-@PreAuthorize("(hasRole('ROLE_SPITTER') and #spittle.text.length() <= 140)

=========================================================
[CODE-CHANGE-URL]:https://github.com/HuberyChen/spring-pratice-project/commit/27bc595b057e00fc083a330430a4f6bf668e1a16

[COMMIT MESSAGE]:snippets||
=========================================================

+@PreAuthorize("hasRole('ROLE_SPITTER)")
+@PreAuthorize("hasRole('ROLE_SPITTER)")
+@PreAuthorize("hasRole('ROLE_SPITTER')")
+@PreAuthorize("(hasRole('ROLE_SPITTER') and #spittle.text.length() <= 140)

=========================================================
[CODE-CHANGE-URL]:https://github.com/pandalin/finance/commit/cb4f7183e8f2dd71aba7bfea43a7c8db83eaab4a

[COMMIT MESSAGE]:finance||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/pandalin/finance/commit/cb4f7183e8f2dd71aba7bfea43a7c8db83eaab4a

[COMMIT MESSAGE]:finance||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/pandalin/finance/commit/cb4f7183e8f2dd71aba7bfea43a7c8db83eaab4a

[COMMIT MESSAGE]:finance||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/liuxianqiang/spring-in-action/commit/8ae3382f7c0731059af55ad41cf4542e37a12ec8

[COMMIT MESSAGE]:init spring-in-action||all sample code from http://www.manning.com/walls4/
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=20&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/anteam/antmin/commit/45e3995bcb316c2e2bae395b38e5ffb0ecfc9c29

[COMMIT MESSAGE]:修改整体命名规则。||添加新的页面到项目中。
=========================================================

- * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
- @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
+ <!-- 开启支持方法注解的权限控制： @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色

=========================================================
[CODE-CHANGE-URL]:https://github.com/anteam/antmin/commit/8a516ae16d311ebd9a5210ca19896b41bbc6d052

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/varunachar/Trelta/commit/bdf5375ee211cdf635e715d95d1b06037a3dcc43

[COMMIT MESSAGE]:Post maven changes. Reorganized project structure. Changed package names||to com.trelta.**
Converted project for being environment aware.
=========================================================

+ @PreAuthorize("hasPermission(principal.privilege,@privileges['clinic.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.delete'])")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("!principal.registrationComplete and principal.clinicId==#accountId")
+ @PreAuthorize("hasPermission(principal.privilege, @privileges['template.prescription.view']) or hasPermission(principal.privilege, @privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.delete'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view']) or hasPermission(principal.privilege,@privileges['appointment.edit']) or hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view']) or hasPermission(principal.privilege,@privileges['appointment.edit']) or hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.edit'])")
+ @PreAuthorize("isAnonymous()")
+@PreAuthorize("!principal.registrationComplete")
+ @PreAuthorize("hasRole('ADMIN_DOC')")
+ @PreAuthorize("hasRole('NON_ADMIN_DOC')")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.privilege'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.privilege'])")
+@PreAuthorize("principal.registrationComplete")

=========================================================
[CODE-CHANGE-URL]:https://github.com/varunachar/Trelta/commit/bdf5375ee211cdf635e715d95d1b06037a3dcc43

[COMMIT MESSAGE]:Post maven changes. Reorganized project structure. Changed package names||to com.trelta.**
Converted project for being environment aware.
=========================================================

+ @PreAuthorize("hasPermission(principal.privilege,@privileges['clinic.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.delete'])")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("!principal.registrationComplete and principal.clinicId==#accountId")
+ @PreAuthorize("hasPermission(principal.privilege, @privileges['template.prescription.view']) or hasPermission(principal.privilege, @privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.delete'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view']) or hasPermission(principal.privilege,@privileges['appointment.edit']) or hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view']) or hasPermission(principal.privilege,@privileges['appointment.edit']) or hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.edit'])")
+ @PreAuthorize("isAnonymous()")
+@PreAuthorize("!principal.registrationComplete")
+ @PreAuthorize("hasRole('ADMIN_DOC')")
+ @PreAuthorize("hasRole('NON_ADMIN_DOC')")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.privilege'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.privilege'])")
+@PreAuthorize("principal.registrationComplete")

=========================================================
[CODE-CHANGE-URL]:https://github.com/varunachar/Trelta/commit/bdf5375ee211cdf635e715d95d1b06037a3dcc43

[COMMIT MESSAGE]:Post maven changes. Reorganized project structure. Changed package names||to com.trelta.**
Converted project for being environment aware.
=========================================================

+ @PreAuthorize("hasPermission(principal.privilege,@privileges['clinic.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['case.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['template.prescription.delete'])")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("!principal.registrationComplete and principal.clinicId==#accountId")
+ @PreAuthorize("hasPermission(principal.privilege, @privileges['template.prescription.view']) or hasPermission(principal.privilege, @privileges['case.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.edit'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.delete'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['appointment.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view']) or hasPermission(principal.privilege,@privileges['appointment.edit']) or hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.view']) or hasPermission(principal.privilege,@privileges['appointment.edit']) or hasPermission(principal.privilege,@privileges['appointment.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['patient.edit'])")
+ @PreAuthorize("isAnonymous()")
+@PreAuthorize("!principal.registrationComplete")
+ @PreAuthorize("hasRole('ADMIN_DOC')")
+ @PreAuthorize("hasRole('NON_ADMIN_DOC')")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.add'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.privilege'])")
+ @PreAuthorize("hasPermission(principal.privilege,@privileges['user.privilege'])")
+@PreAuthorize("principal.registrationComplete")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vtkdqq/bia.sm/commit/c484c5f2a2828f50dee2794a7130f84d3de962eb

[COMMIT MESSAGE]:dsssssssssssss||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=21&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/cleverpig/springsecurity/commit/cbca4eb9387b283881dd2b754327fa008bacebce

[COMMIT MESSAGE]:first import project||
=========================================================

+// @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+// @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cleverpig/jsfsecurity/commit/1d0e6d2d9e0f2befd816ee52b50af833d9d307e4

[COMMIT MESSAGE]:first import project||
=========================================================

+ // @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+ // @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")
+// @PreAuthorize("hasRole('PERM_ACCESS_ADMIN')")
+// @PreAuthorize("hasAnyRole('PERM_ACCESS_ADMIN','PERM_ACCESS_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/7c99361c260dc34df2203fa781483feb3d5bcfb6

[COMMIT MESSAGE]:Reduce length of long lines in the reference manual.||Some are too long for the PDF version.
=========================================================

- application)<programlisting> @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
- about:<programlisting> @PreAuthorize("hasPermission(#contact, 'admin')")
+ @PreAuthorize("hasPermission(#contact, 'admin')")
- <programlisting> @PreAuthorize("#contact.name == principal.name)")
+ @PreAuthorize("#contact.name == principal.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/cd6711d21a0b372e9d120bc992a2129c26f20b4c

[COMMIT MESSAGE]:Doc updates.||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasAuthority('ROLE_TELLER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/cd6711d21a0b372e9d120bc992a2129c26f20b4c

[COMMIT MESSAGE]:Doc updates.||
=========================================================

+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasAuthority('ROLE_TELLER')")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=22&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=23&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mrjabba/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/diego04/WebsiteImageSharing/commit/447ca44efaaf51b0ddc87765723bfe2e54585e78

[COMMIT MESSAGE]:testing||
=========================================================

+ @PreAuthorize("denyAll")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=24&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-security-DEMO/commit/8c05abf0ef0da9fb9c41721a2ec472c9d6534bf0

[COMMIT MESSAGE]:initial checkins||spring security based example
=========================================================

+ @PreAuthorize("denyAll")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=25&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=26&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/justinedelson/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/14c473960522cef5d2b6d34fdc24199cef4c9d33

[COMMIT MESSAGE]:SEC-1158: Decoupling of Pre/Post annotations implementation from Spri…||…ng EL.
=========================================================

+ @PreAuthorize("someMethod.py")
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=27&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=28&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/nazavoya/bora-backstage/commit/4dfc64e278f22c1f7d59c6fcc40efd6ec1965648

[COMMIT MESSAGE]:提交。||
=========================================================

+ + 如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行.
[NEXT-PAGE-URL]:https://github.com/search?l=xml&p=29&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93

