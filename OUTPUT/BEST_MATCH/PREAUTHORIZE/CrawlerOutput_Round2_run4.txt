
=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/758b246560644682ce1e8bb345f59a623a150d82

[COMMIT MESSAGE]:Toteutettu lainatun vuosiluokkakokonaisuuden kopiointi muokattavaksi||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS') or hasPermission(#opsId, 'opetussuunnitelma', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/fa79066f68f2eacceb2bfc8cd4060b4c898c612b

[COMMIT MESSAGE]:Lisätty ensimmäinen versio OppiaineServicestä||
=========================================================

- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/1ae8e39c2cb27739603b052a59fb7ce9e375b114

[COMMIT MESSAGE]:Lisää vuosiluokkakokonaisuuden käsittely (kesken).||Vuosiluokkakokonaisuus API ja palvelu. Refaktorointia.
=========================================================

- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(null, 'opetussuunnitelma', 'LUONTI')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#ops.id, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'POISTO')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
- @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS') or hasPermission(#opsId, 'opetussuunnitelma', 'KORJAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/7392c16d46f0b877085bc6d8ff68cb9932a3b282

[COMMIT MESSAGE]:Added file upload functionality to sampleObject||New log back configuration to log into separate files
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/PublicArtBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/d891d17cfa248220c2a38f99b36758b9c91ffb03

[COMMIT MESSAGE]:RAVE-341 patch to add security features to WidgetComments||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1207613 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetComment, 'create_or_update')")
+ @PreAuthorize("hasPermission(#id, 'org.apache.rave.portal.model.WidgetComment', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/88ac33daebc75b9c3901e89ef38d0cd39acb49aa

[COMMIT MESSAGE]:Added @Component to all DaoImpl, Service, and Resource. Now, only nee…||…d to register Resource in the DashAppSetup.java

Also, removed mysql jar from WAR by adding a scope provided in the pom.xml
=========================================================

- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_ADMIN_APPROVER')")
- @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_ADMIN_APPROVER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=90&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/d891d17cfa248220c2a38f99b36758b9c91ffb03

[COMMIT MESSAGE]:RAVE-341 patch to add security features to WidgetComments||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1207613 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetComment, 'create_or_update')")
+ @PreAuthorize("hasPermission(#id, 'org.apache.rave.portal.model.WidgetComment', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/08c11f4daf695e9326eff53dd12d6b12978de8c8

[COMMIT MESSAGE]:added new method to update password and get app users||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/e020e0403b5241555029485b93ccd5297cba194e

[COMMIT MESSAGE]:Added GetAccountUsers template||
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bbytes/DAAS/commit/33bb2f28c45855bb2dde11cdbba6031918f35af4

[COMMIT MESSAGE]:Added security layer to Daas using oauth 2 spec||
=========================================================

+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_TENENT_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_TENENT_ADMIN','ROLE_ACCOUNT_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kleskq/Springjs/commit/2a4b6b33a5f3dab67fa0efdb6278e6440ec1df98

[COMMIT MESSAGE]:restapi||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kTT/adjule/commit/11f711e715c0f2e3b69e7f3e7be821224dd43c9b

[COMMIT MESSAGE]:Adds limits form||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/68ce409736572a25438a0f66e8c55c934bf84fd9

[COMMIT MESSAGE]:can view task,can edit task||
=========================================================

- @PreAuthorize("isAnonymous()")
- @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/e92a1f13b44959cc9a9bb9fe1ab1cce49e040f0c

[COMMIT MESSAGE]:Set Permission (Teacher)||Remove Menu (Admin)
Catch Exception at Controller
=========================================================

-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/dbfd7bad3aa302524bda889acedac5673005a9f7

[COMMIT MESSAGE]:Cleaning||
=========================================================

-// @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=91&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ralscha/eds-starter/commit/cbd3685c37df9913e9285ced9122708bc61381d1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+@PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/68ce409736572a25438a0f66e8c55c934bf84fd9

[COMMIT MESSAGE]:can view task,can edit task||
=========================================================

- @PreAuthorize("isAnonymous()")
- @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/e92a1f13b44959cc9a9bb9fe1ab1cce49e040f0c

[COMMIT MESSAGE]:Set Permission (Teacher)||Remove Menu (Admin)
Catch Exception at Controller
=========================================================

-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
+ @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/aukwat/ExamProject/commit/dbfd7bad3aa302524bda889acedac5673005a9f7

[COMMIT MESSAGE]:Cleaning||
=========================================================

-// @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")
-// @PreAuthorize("isAnonymous()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Appverse/appverse-web-showcases/commit/b66dd62920b186556792f0de6a3027556ffe9ba6

[COMMIT MESSAGE]:Added base GWT Hibernate showcase||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER') AND ( (#user.id == 0 AND hasRole('ROLE_USER_CREATE')) OR (#user.id != 0 AND hasRole('ROLE_USER_EDIT')) )")
+ @PreAuthorize("hasRole('ROLE_USER') AND ( (#user.id == 0 AND hasRole('ROLE_USER_CREATE')) OR (#user.id != 0 AND hasRole('ROLE_USER_EDIT')) )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ratlsun/black-cloth/commit/c94579b374a3e5c0607486eda47324eb18e943d7

[COMMIT MESSAGE]:Finished the channel feature.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/BonnerBuzzBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhihaoXian/Silverfox/commit/8822902401a3ebd5f3d40a417dc3e7411d443bee

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#id == principal.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=92&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Auronmatrix/Survive/commit/0469e523e859df36ff20a6a2b006acf24f65e76a

[COMMIT MESSAGE]:Implemented service layer authentication||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+@PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyAuthority('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
- @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Auronmatrix/Survive/commit/3899af6118d1894a008b5baba1d8281e5befa525

[COMMIT MESSAGE]:Added service layer authentication||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST', 'ROLE_GUEST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")
+ @PreAuthorize("hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_REST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adr-wisniewski/inz-sd/commit/2b91274f572e25437b51a7bfa9734c79b7fe661f

[COMMIT MESSAGE]:zmiana nazwy pracy - brak polskich znakow||
=========================================================

+//@PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_VIEW')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+//@PreAuthorize("hasRole('COMMON_ATTACHMENT')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_ADD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_EDIT')")
+ @PreAuthorize("hasRole('CHANGE_RFC_DELETE')")
+ @PreAuthorize("hasRole('CHANGE_RFC_MANAGE')")
+@PreAuthorize("hasRole('CMDB_ATTRIBUTE_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_ADD')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEMCLASS_VIEW')")
+@PreAuthorize("hasRole('CMDB_ITEM_VIEW')")
+@PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_VIEW')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_ADD')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_EDIT')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_DELETE')")
+@PreAuthorize("hasRole('CMDB_RELATIONSHIP_VIEW')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_ADD')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_EDIT')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEMCLASS_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_ADD')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEM_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ITEM_ADD')")
+ @PreAuthorize("hasRole('CMDB_ITEM_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ITEM_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adr-wisniewski/inz-sd/commit/7645256ec2b4128ee271228b8c32d9c1767cb936

[COMMIT MESSAGE]:implementacja rc1||
=========================================================

+ @PreAuthorize("isOwner(#object)")
+ @PreAuthorize("isOwner(#object)")
+ @PreAuthorize("hasRole('CHANGE_RFC_AUTHORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_AUTHORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_AUTHORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_MANAGE')")
+ @PreAuthorize("hasRole('CHANGE_RFC_ASSIGN')")
+ @PreAuthorize("hasRole('CHANGE_RFC_MANAGE')")
+@PreAuthorize("hasRole('CHANGE_RFC_AUTHORITY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_AUTHORITY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_AUTHORITY_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adr-wisniewski/inz-sd/commit/2b91274f572e25437b51a7bfa9734c79b7fe661f

[COMMIT MESSAGE]:zmiana nazwy pracy - brak polskich znakow||
=========================================================

+//@PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_VIEW')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+//@PreAuthorize("hasRole('COMMON_ATTACHMENT')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_ADD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_EDIT')")
+ @PreAuthorize("hasRole('CHANGE_RFC_DELETE')")
+ @PreAuthorize("hasRole('CHANGE_RFC_MANAGE')")
+@PreAuthorize("hasRole('CMDB_ATTRIBUTE_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_ADD')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEMCLASS_VIEW')")
+@PreAuthorize("hasRole('CMDB_ITEM_VIEW')")
+@PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_VIEW')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_ADD')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_EDIT')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_DELETE')")
+@PreAuthorize("hasRole('CMDB_RELATIONSHIP_VIEW')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_ADD')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_EDIT')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEMCLASS_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_ADD')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEM_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ITEM_ADD')")
+ @PreAuthorize("hasRole('CMDB_ITEM_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ITEM_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adr-wisniewski/inz-sd/commit/2b91274f572e25437b51a7bfa9734c79b7fe661f

[COMMIT MESSAGE]:zmiana nazwy pracy - brak polskich znakow||
=========================================================

+//@PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_VIEW')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+ @PreAuthorize("hasRole('COMMON_ANNOUNCEMENT_CRUD')")
+//@PreAuthorize("hasRole('COMMON_ATTACHMENT')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_CATEGORY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_IMPACT_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_PRIORITY_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_RESOLUTION_CRUD')")
+@PreAuthorize("hasRole('CHANGE_RFC_VIEW')")
+ @PreAuthorize("hasRole('CHANGE_RFC_ADD')")
+ @PreAuthorize("hasRole('CHANGE_RFC_EDIT')")
+ @PreAuthorize("hasRole('CHANGE_RFC_DELETE')")
+ @PreAuthorize("hasRole('CHANGE_RFC_MANAGE')")
+@PreAuthorize("hasRole('CMDB_ATTRIBUTE_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_ADD')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ATTRIBUTE_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEMCLASS_VIEW')")
+@PreAuthorize("hasRole('CMDB_ITEM_VIEW')")
+@PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_VIEW')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_ADD')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_EDIT')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIPCLASS_DELETE')")
+@PreAuthorize("hasRole('CMDB_RELATIONSHIP_VIEW')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_ADD')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_EDIT')")
+ @PreAuthorize("hasRole('CMDB_RELATIONSHIP_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEMCLASS_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_ADD')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ITEMCLASS_DELETE')")
+@PreAuthorize("hasRole('CMDB_ITEM_VIEW')")
+ @PreAuthorize("hasRole('CMDB_ITEM_ADD')")
+ @PreAuthorize("hasRole('CMDB_ITEM_EDIT')")
+ @PreAuthorize("hasRole('CMDB_ITEM_DELETE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rooneyp1976/SiA3/commit/f327c169c8ab54b29a4fb7267f0afe00636ffc0c

[COMMIT MESSAGE]:sia||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=93&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/nguyenha/intership/commit/a5bd24ddfdc6f11ee33152c724952b570bbdc506

[COMMIT MESSAGE]:Just add new sample function||
=========================================================

+@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/470857cf849c121303b4b9178cba4f8a22c2fed0

[COMMIT MESSAGE]:Remove imports.||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/VolunteerManagementBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview/commit/b780685fee3de1dab67138359b53b41033816bb4

[COMMIT MESSAGE]:big commit !!!11||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/maciej-kizlich/interview/commit/edb98836ac638d2727ab88e95c572c03d43b9a18

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sip1code/commit/0c107d74c510f4dc9c3ace38d2e14e7cf318867b

[COMMIT MESSAGE]:首次更新||同步源代码到一个库下
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ACCOUNTS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_READ_FORUMS')")
+ @PreAuthorize("hasRole('PERM_CREATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_READ_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_ADMIN_MESSAGES')")
+ @PreAuthorize("hasRole('PERM_DELETE_MESSAGES')")
+all access unless explicitly granted. See the type-level <code>@PreAuthorize("denyAll")</code>
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=94&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/enlightendev/resourceadmin-spring/commit/f984ff814db18bd75bd60a9c1bdacc90121f724c

[COMMIT MESSAGE]:initial entities and their respective rest repository abstractions.||
=========================================================

+ @PreAuthorize("hasRole('search-employee')")
+ //@PreAuthorize("hasRole('search-employee')")
+ @PreAuthorize("hasRole('save-application')")
+ @PreAuthorize("hasRole('save-employee')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/doccz/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/41c0ce0d07cb8322d2e3be61aa46fa83991e7737

[COMMIT MESSAGE]:cong thanh fix||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/liizard/didauvn/commit/7a44406d727351e77f995694a155ab0af6d7a6fc

[COMMIT MESSAGE]:newest||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#image.getId(),'hasImageOwnerRight') or hasPermission(#image.getId(),'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#id,'hasImageOwnerRight') or hasPermission(#id,'hasImageRight'))")
+ @PreAuthorize("hasRole('ROLE_USER') and (hasPermission(#imageId,'hasImageOwnerRight') or hasPermission(#imageId,'hasImageRight')) and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight') )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasNewsOwnerRight') or hasPermission(#id,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#newsId,'hasNewsOwnerRight') or hasPermission(#newsId,'hasNewsRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#paymentMethod.getPlaceId(),'hasPlaceOwnerRight') or hasPermission(#paymentMethod.getPlaceId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#placeId,'hasPlaceOwnerRight') or hasPermission(#placeId,'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getPlace(),'hasPlaceOwnerRight') or hasPermission(#video.getPlace(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#video.getId(),'hasVideoOwnerRight') or hasPermission(#video.getId(),'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#id,'hasVideoOwnerRight') or hasPermission(#id,'hasVideoRight')))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and (hasPermission(#place.getId(),'hasPlaceOwnerRight') or hasPermission(#place.getId(),'hasPlaceRight')))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and hasPermission(#placeId,'hasPlaceOwnerRight'))")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/empt-ak/libmunijava/commit/9066deed7ecbd3736c681413b5d7d7973a9dacd9

[COMMIT MESSAGE]:fix anotacii, webu a gui||
=========================================================

- * @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')") - only logged in user while being an administrator can run this method
+ * @PreAuthorize("hasRole('hasRole('ROLE_ADMINISTRATOR')')") - only logged in user while being an administrator can run this method
- @PreAuthorize("ROLE_ADMINISTRATOR")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
- @PreAuthorize("ROLE_ADMINISTRATOR")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/e42b388b90b224b23864d325b5d18495dbad2d74

[COMMIT MESSAGE]:[minor] Expert Access + some bugs||Change-Id: I6e3f9fb813cf6fb07e2909f94e839036eacf1c3f
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c7d573e65e4eb1a4d1c1643413a1c341e495b7a9

[COMMIT MESSAGE]:[CRM-23] Services server side authorization.||Change-Id: I79ebb863bb13fdf6de0de75a7880480f39409725
=========================================================

+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE', 'ROLE_PROJECTMANAGER')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#projectDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_EXPERT', 'ROLE_ACCOUNTANT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(#userDTO, 'write')")
+ @PreAuthorize("hasRole('ROLE_EXECUTIVE')")
- @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")
+ @PreAuthorize("hasRole('ROLE_WORKER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/f198cded3c4e5ce62f1f28cbb4e2fb9497084f1a

[COMMIT MESSAGE]:[CRM-23] Preparation to annotation use.||Change-Id: I66b2b319e4291bb02d6c43aa050e81746c1df01b
=========================================================

+ @PreAuthorize("hasRole('ROLE_CLIENT')")
+ @PreAuthorize("hasRole('ROLE_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/85858a502a299d6d14c066efbede1b49021558bf

[COMMIT MESSAGE]:fixed SampleObjectService||
=========================================================

- @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/7392c16d46f0b877085bc6d8ff68cb9932a3b282

[COMMIT MESSAGE]:Added file upload functionality to sampleObject||New log back configuration to log into separate files
=========================================================

+ @PreAuthorize("hasPermission(#smapleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/d9a5d8b9c635b90a83c92abe7c79622e366c089c

[COMMIT MESSAGE]:Cleaning out||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/1a386b81ccefe3628071807f10c55199d71aebcf

[COMMIT MESSAGE]:Overwrote the project to bring it up to date and provided a sample||implementation of a basic resource.

-A truncated version of the current VMA backend
-Includes require User Resource and a full implementation of ACLs 
-Added a SampleObject to exibhit how to implement a new resource
-Added the required mySQL table
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'write') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#sampleObject, 'delete') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=95&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/kTT/adjule/commit/9b34a1f234593dd0f88175e79dc1ce0506b1c222

[COMMIT MESSAGE]:Adds filter removing and filter as a url parameter support||
=========================================================

+ @PreAuthorize("hasRole('admin') or principal.username == #username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kTT/adjule/commit/d77b82ec93284d1afcfd17703a4b8f60dd3357d5

[COMMIT MESSAGE]:Adds filter saving||
=========================================================

+ @PreAuthorize("hasRole('admin') or principal.username == #username")
+ @PreAuthorize("hasRole('admin') or principal.username == #username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/atais/PP-JSON/commit/89c35bb33f65d3b8fb789ef0acbf951647f2c078

[COMMIT MESSAGE]:Hack for transactions||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oradev/sping-in-action-code-examples/commit/8507798cd70b1b8f254aa801cb29062747a2cb8f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasPermission(#post, 'WRITE')")
+ @PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ //@PreAuthorize("hasAuthority('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_ADMIN_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_USER_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_USER_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_USER_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('READ_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('WRITE_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('EDIT_PUBLIC_MESSAGE')")
+ @PreAuthorize("hasRole('DELETE_PUBLIC_MESSAGE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sikm31/yuri3/commit/e0766118f5a802446221d89bbaf4f81a58a24d9d

[COMMIT MESSAGE]:spring1||springproject
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JohnathanMarkSmith/SpringWithDojo/commit/275225c423e642c78fbf971b3ebeb520a4b08af9

[COMMIT MESSAGE]:reinitialized||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/massfords/we99/commit/4cb3d79caebbedfbbe7a76a24ca03ebffdd0cfbf

[COMMIT MESSAGE]:Added System Tests for DoseResponseResults||
=========================================================

+ @PreAuthorize("hasRole('PERM_MODIFY_PLATES') and this.experiment.status == T(edu.harvard.we99.domain.ExperimentStatus).UNPUBLISHED")
- @PreAuthorize("hasRole('PERM_MODIFY_PLATES') and this.experiment.status == T(edu.harvard.we99.domain.ExperimentStatus).UNPUBLISHED")
+ //@PreAuthorize("hasRole('PERM_MODIFY_PLATES') and this.experiment.status == T(edu.harvard.we99.domain.ExperimentStatus).UNPUBLISHED")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/massfords/we99/commit/5406210cb25cf293ffc111d7e5a88495b795880e

[COMMIT MESSAGE]:Added initial support for DoseResponses||
=========================================================

+ @PreAuthorize("hasRole('PERM_MODIFY_PLATES') and this.experiment.status == T(edu.harvard.we99.domain.ExperimentStatus).UNPUBLISHED")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")
+ @PreAuthorize("hasRole('PERM_MODIFY_PLATES') and this.experiment.status == T(edu.harvard.we99.domain.ExperimentStatus).UNPUBLISHED")
+ @PreAuthorize("hasRole('PERM_READ_RESULTS')")
+ @PreAuthorize("hasRole('PERM_MODIFY_PLATES') and this.experiment.status == T(edu.harvard.we99.domain.ExperimentStatus).UNPUBLISHED")
+ @PreAuthorize("hasRole('PERM_READ_PLATES')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/b15a7dcf0d819d3b220d309ac16a6fd319b797ff

[COMMIT MESSAGE]:TestController source added||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
+ //@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/afe959a4e13a7e4e9232b9cd2f61b071a58e7efd

[COMMIT MESSAGE]:Add delete log record, add the account lock off, clean source||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/2cb45d174bcb88a1648f44c027c84af84d60d56c

[COMMIT MESSAGE]:jqgrid, ui addedd||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/22eec7f73d61bc140d0658d84ed49d01b32e7b51

[COMMIT MESSAGE]:Add error handling, session timeout more||
=========================================================

- //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")// 유효한 인증된 사용자만이 접근
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_MANAGER','ROLE_USER')")
+ @PreAuthorize("#user.email == principal.username or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#user.email == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/dc29ca9237086a6fc37ca2b8c6968b56c2ac17a0

[COMMIT MESSAGE]:querydsl added||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근
- //@PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/9c5694b911d8b61917357d2232789971f2580b7d

[COMMIT MESSAGE]:password update complete||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근
+ //@PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근

=========================================================
[CODE-CHANGE-URL]:https://github.com/kbtapjm/myHub/commit/a5141bfbbb2343be7f3b10d92c400eec3353aacd

[COMMIT MESSAGE]:method secutiry check added||
=========================================================

+ //@PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')") // 유효한 인증된 사용자만이 접근
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=96&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/brendel/edufarm-soowoowon/commit/855866faa4c61bcedb71992effc479c8f592c4d4

[COMMIT MESSAGE]:Add SanitizeService, SanitazeServiceImpl.||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #article.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #article.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photolog.user.email")

=========================================================
[CODE-CHANGE-URL]:https://github.com/brendel/edufarm-soowoowon/commit/e4b71a72978490e46c845122eed2c9ab793b7db0

[COMMIT MESSAGE]:Add ajax photo upload feature.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or authentication.name == #photo.user.email")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dedocibula/hotel-booking-manager/commit/f8d6b688b8d05d03dea442a6e252ff3ba558c6ea

[COMMIT MESSAGE]:Added method security on service layer, update RegUser fix||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER, ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/3b4309444375b66ecb52b3ad171760ff9017806e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account and #ruleVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ruleVO.domain == principal.domain and #account = principal.account and #id==#ruleVO.id)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #account = principal.account)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/d3b2677966dd5ddacc9fee3c917bb71075e662c2

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/3e766437ab4474111f7a4c8a980f5f2e9574094e

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ruleVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #ruleVO.domain == principal.domain)")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain and #user.account!=null")
+ @PreAuthorize("(hasRole('ROLE_ADMIN') and #domain == user.domain) or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain and #user.account!=null)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain")
+ @PreAuthorize("(hasRole('ROLE_ADMIN') and #domain == #user.domain) or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain and #user.domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")
- @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/d98f7b1c351d3d9382c5e68f4585b9ef5eb72c1b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")
+ @PreAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and #domain == principal.domain")

=========================================================
[CODE-CHANGE-URL]:https://github.com/GregCarter/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dc9dcc7298a0cecc167f530cc861e9095a5fbd1

[COMMIT MESSAGE]:Fixed logic of deleting a user. There was a lot of cross-repository w…||…ork happening in the UserRepository that has been moved to the UserService#deleteUser method.

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1244751 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.Page', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetComment', 'delete')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3392249404e5c0f6dbdfeb214e222f827652ea2a

[COMMIT MESSAGE]:Applying the patch from Venkat for Change security permission on Widg…||…etRating RAVE-350

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1199471 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(#widgetRating.entityId, 'org.apache.rave.portal.model.WidgetRating', 'update')")
- @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'create')")
+ @PreAuthorize("hasPermission(#rating, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/cbc32342d57d0afb1f260deed37d60f34d79d14d

[COMMIT MESSAGE]:RAVE-315: WidgetRating ModelPermissionEvaluator and Service Annotations||Applying patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1195508 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'read')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'create')")
+ @PreAuthorize("hasPermission(new org.apache.rave.portal.security.impl.RaveSecurityContext(#userId, 'org.apache.rave.portal.model.User'), 'org.apache.rave.portal.model.WidgetRating', 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/f8fb5a87a1a3e90648edadb73191bb9d5334ba43

[COMMIT MESSAGE]:adding exercise sets, part 1||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/5329e560b97d8b2c1765184d1564440356de6c40

[COMMIT MESSAGE]:sets can now be removed||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/a76b5eb3130a184b57c16022ee1f0cf41a6ae677

[COMMIT MESSAGE]:exercisesetrepository/service/controller||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/f8fb5a87a1a3e90648edadb73191bb9d5334ba43

[COMMIT MESSAGE]:adding exercise sets, part 1||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pasuuna/haukka/commit/6bf584a59d2247c1ac8272ae8b28e2165a24296e

[COMMIT MESSAGE]:moved @PreAuthorize to controller level, added findByUser to WorkoutS…||…ervice
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=97&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/chapita/factoryTicketsGit/commit/33834269eae0eaf2ec7f7bd5a5d66dedf6ffab6c

[COMMIT MESSAGE]:first commit with gradle||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )
+ @PreAuthorize("hasRole('ROLE_ADMIN')" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/GregCarter/RebelHotel/commit/afe4cf3ce1e0a1d32fde0cfcac4e66cf2311f145

[COMMIT MESSAGE]:more security changes; minor fixes to view work effort voter; ROLE_US…||…ER should now be able to view everything but change nothing; ROLE_ADMIN and ROLE_SUPERUSER have access to CRUD anything; ROLE_STUDENT may only view their own work efforts
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
- @PreAuthorize("hasRole('ROLE_STUDENT')")
+ @PreAuthorize("hasRole('ROLE_STUDENT')")// only students should have a list of work efforts ... though a different error than "access denied" might be desirable to admins
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERUSER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/icefireunicorn/springinaction3rd-demo/commit/3661beb56d7253c83d6faa6c3b9b108cf890229b

[COMMIT MESSAGE]:add||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/htiwari84/spring-data-examples/commit/1d7554b57ad524bd5d1944490ec5ceca81e6eb05

[COMMIT MESSAGE]:#21 - Polished Spring Data REST + Spring Security example.||Removed obsolete dependency declarations from pom.xml. Rewrote test cases to use Spring MVC test support instead of a running server and RestTemplate. Fixed Security configuration to allow bootstrap in Spring MVC test context. Formatting, JavaDoc.

Original pull request: #22.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/htiwari84/spring-data-examples/commit/c5920a64d9571a4403aa0ffaf3d2418412d25a14

[COMMIT MESSAGE]:#21 - Added example for Spring Data REST and Spring Security.||Added example of how to secure a Spring Data REST project with Spring Security both on the method level as well as the URI level.

Original pull request: #22.
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/1c2559afb74f26c1dd9541391fc05b906390e249

[COMMIT MESSAGE]:DRAFTs can now be released and claimed. Reorganized the documentation…||… somewhat, made sure that allUML-graphs were up to date and fixed errors in Java-implementation. Removed deprecated and some temporary documentation.
=========================================================

-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+ @PreAuthorize("hasPermission(#id, '"+PermissionCheck.Values.REMOVE_SEARCH+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EXPORT_REVISION+"', '"+PermissionCheck.Values.PERMISSION+"')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
-@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '"+PermissionCheck.Values.PERMISSION+"')")
- @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/Tietoarkisto/metka/commit/8211a575b8d91d62975f1fcfc559687b8a675a2a

[COMMIT MESSAGE]:Removed much deprecated content. Security should be done so that auth…||…orizing of operations follows role guidelines. UI related controllers now run under web/ path and external API controllers run under api/ path. There's an APIKey based authentication and authorization for API operations. All in all security and clean up related stuff.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_BINDER_PAGES +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_SAVE_EXPERT_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission(#id, 'REMOVE_SEARCH')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_CREATE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_APPROVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_REMOVE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_RESTORE_REVISION+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_PERFORM_SEARCH+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', 'PERMISSION') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+Permission.Values.CAN_EDIT_API_USERS+"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_STUDY_ERRORS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_STUDY_ERRORS +"', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+Permission.Values.CAN_VIEW_REVISION+"', 'PERMISSION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taverna/taverna-svn/commit/fb226e6aa3b70732eac1acc4ae1eeb14c873182d

[COMMIT MESSAGE]:Transferred from cvs||git-svn-id: http://taverna.googlecode.com/svn@7670 bf327186-88b3-11dd-a302-d386e5130c1c
=========================================================

+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")
+// @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mikewiesner/spring-security-3.1-sample/commit/101fe953afaedcec943689befc43628648860d70

[COMMIT MESSAGE]:Solution||
=========================================================

+ @PreAuthorize("hasRole('RIGHT_CREATE')")
+ @PreAuthorize("hasRole('RIGHT_CANCEL') and " +
+ @PreAuthorize("hasRole('RIGHT_UPDATE')")
+ @PreAuthorize("hasRole('RIGHT_CREATE')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=98&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/paugros/bacon-bits/commit/7569fd4b8e8b18a22f16334ea2273fcb30d9398a

[COMMIT MESSAGE]:Reviews||
=========================================================

+ @PreAuthorize("hasRole('SITE_MEMBERS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/syakuis/Spring-security-restful-authentication-and-Angularjs/commit/f531d561d2533306e94eb89be3e98401e9c74480

[COMMIT MESSAGE]:잘못된 소스 정보 변경||
=========================================================

+ @PreAuthorize("#userVO.user_name == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ckenny/Spring/commit/6dcf6c563f841c2712b97d87d6a5bee81bbc586a

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryansd92/spring-mvc-archetype/commit/4aa74554bd01a90f669b453b9b40267a4403374c

[COMMIT MESSAGE]:Converted all @PreAuthorize annotations to use the corrected for of the||role name. Needed for upgrade to spring 4
=========================================================

- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('user')")
- @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ @PreAuthorize("hasRole('administrator')")
- @PreAuthorize("hasRole('ROLE_LOG_VIEW')")
+ @PreAuthorize("hasRole('log_view')")
- @PreAuthorize("hasRole('ROLE_SESSION_VIEW')")
+ @PreAuthorize("hasRole('session_view')")
- @PreAuthorize("hasRole('ROLE_SESSION_MANAGEMENT')")
+ @PreAuthorize("hasRole('session_management')")
- @PreAuthorize("hasRole('ROLE_USER_VIEW')")
+ @PreAuthorize("hasRole('user_view')")
- @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('user_management')")
- @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('user_management')")
- @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('user_management')")
- @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('user_management')")
- @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('user_management')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ryansd92/spring-mvc-archetype/commit/6fc8171facc9366468e6ea4cc12dd0c7fe03c00e

[COMMIT MESSAGE]:Initial commit||Moving from svn to git
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMINISTRATOR')")
+ // @PreAuthorize("hasRole('ROLE_RUNNING_AS')")
+ @PreAuthorize("hasRole('ROLE_LOG_VIEW')")
+ @PreAuthorize("hasRole('ROLE_SESSION_VIEW')")
+ @PreAuthorize("hasRole('ROLE_SESSION_MANAGEMENT')")
+ @PreAuthorize("hasRole('ROLE_USER_VIEW')")
+ @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
+ @PreAuthorize("hasRole('ROLE_USER_MANAGEMENT')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=99&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/thepresbyterian/topchef/commit/2ef860afaf9d4a218818400ef057a8b4f3b5f0ea

[COMMIT MESSAGE]:Publishing to GitHub||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PreAuthorize("@methodSecurity.principalIsUser(principal,#userid)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/joanluk/spring-data-rest/commit/aa64f7a09f7f7de8d7bf32080579c5eb2d7c14b6

[COMMIT MESSAGE]:include code project||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartoszCichecki/reporters-management-system/commit/5b2b7becb9920ded7ac895512445fb00a85d3193

[COMMIT MESSAGE]:[srv] Security bugfixes in MessagesRestWS||[srv] Critical bugfixes in MessagesDaoImpl
[srv] Removed ability to update outgoing messages
[and] Outgoing messages view
[and] Listfragment fixes
[and] PrettyPrinters in progress...
=========================================================

- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.UPDATE_OUTGOING_MESSAGES + "','" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartoszCichecki/reporters-management-system/commit/751b7ba6515d6767486d7a52c0c610e3daaff5a7

[COMMIT MESSAGE]:- Moved from Long ID's to UUID String ID's||- Updated MySQL scripts
- Turned off auto DDL
=========================================================

+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartoszCichecki/reporters-management-system/commit/7002a8ec478adb3cbd2b0e2e2da1dd8505d1c2c1

[COMMIT MESSAGE]:Changed idea for privileges, may still be buggy (hope not).||
=========================================================

- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "','"+PrivilegeUtils.Values.MANAGE_PROFILE+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_ACCESS_HISTORY+"','"+PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_ACCESS_HISTORY+"','"+PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_ACCESS_HISTORY+"','"+PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ACCESS_HISTORY + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ACCESS_HISTORY + "','"+PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ACCESS_HISTORY + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ACCESS_HISTORY + "','"+PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ACCESS_HISTORY + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ACCESS_HISTORY + "','"+PrivilegeUtils.Values.MANAGE_ACCESS_HISTORY+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_DEVICES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.CREATE_DEVICES+"','"+PrivilegeUtils.Values.MANAGE_DEVICES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_DEVICES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_DEVICES+"','"+PrivilegeUtils.Values.MANAGE_DEVICES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_DEVICES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_DEVICES + "','"+PrivilegeUtils.Values.MANAGE_DEVICES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_DEVICES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_DEVICES + "','"+PrivilegeUtils.Values.MANAGE_DEVICES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_DEVICES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.UPDATE_DEVICES+"','"+PrivilegeUtils.Values.MANAGE_DEVICES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_DEVICES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.POST_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.POST_EVENTS_TO_WAITING_ROOM + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_MY_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.LOOK_UP_DEVICE_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.LOOK_UP_DEVICE_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.LOOK_UP_DEVICE_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.LOOK_UP_DEVICE_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.UPDATE_MY_EVENTS + "','" + PrivilegeUtils.Values.MANAGE_EVENTS + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_MESSAGES+"','"+PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.CLEAN_UP_MESSAGES+"','"+PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.SEND_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.SEND_MESSAGES + "','"+PrivilegeUtils.Values.MANAGE_MESSAGES+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.UPDATE_OUTGOING_MESSAGES+"','"+PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "','"+PrivilegeUtils.Values.MANAGE_PROFILE+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "','"+PrivilegeUtils.Values.MANAGE_PROFILE+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.CREATE_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_PROFILE + "','"+PrivilegeUtils.Values.MANAGE_PROFILE+"')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.LOOK_UP_USER_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.UPDATE_ROLES+"','"+PrivilegeUtils.Values.MANAGE_ROLES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_USERS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.CREATE_USERS+"','"+PrivilegeUtils.Values.MANAGE_USERS + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_USERS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.DELETE_USERS+"','"+PrivilegeUtils.Values.MANAGE_USERS + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_USERS + ',' + PrivilegeUtils.Values.SEND_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_USERS + ',' + PrivilegeUtils.Values.SEND_MESSAGES + "','"
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_USERS + ',' + PrivilegeUtils.Values.SEND_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_USERS + ',' + PrivilegeUtils.Values.SEND_MESSAGES + "','"
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_ROLES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.LOOK_UP_ROLE_USERS+"','"+PrivilegeUtils.Values.MANAGE_USERS + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_USERS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.UPDATE_USERS+"','"+PrivilegeUtils.Values.MANAGE_USERS + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/BartoszCichecki/reporters-management-system/commit/8ceedc13caf840cf7b0db23bd2437149a4132795

[COMMIT MESSAGE]:- Almost implemented Message REST||- Split authorization and authentication
- Integrated UserDetials service into UsersService
=========================================================

+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.SEND_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_MESSAGES + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_MESSAGES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_USERS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_USERS+','+PrivilegeUtils.Values.SEND_MESSAGES + "')")
- @PreAuthorize("hasRole('" + PrivilegeUtils.Values.MANAGE_USERS + "')")
+ @PreAuthorize("hasRole('" + PrivilegeUtils.Values.VIEW_USERS+','+PrivilegeUtils.Values.SEND_MESSAGES + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jrask/rock-paper-scissors/commit/6d4021da6b47ea0bbd07f89a283cd02c7d881e3a

[COMMIT MESSAGE]:Added Jans example project||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('secret')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anis-moubarik/wad/commit/d9480d9c249b220e5d483deeb9c510fc2c0bf95e

[COMMIT MESSAGE]:teht 3 tehty||
=========================================================

+ @PreAuthorize("hasAnyRole('supo,admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("denyAll()")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.username) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.username == #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.id, #vacationRequest) ) " +
+ @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.username, #vacationRequest) ) " +
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == #employee.email")
- @PreAuthorize("#workTime.employee.id == principal?.id")
+ @PreAuthorize("#workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or (isAuthenticated() and #id == principal.id)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("isAuthenticated() and @travelExpenseEventHandler.canCreate(principal.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canEdit(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canDelete(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(isAuthenticated() and @reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal.id)) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #comment.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(#sickDays.employee.id == principal.id and isAuthenticated()) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(isAuthenticated() and #sickDays.employee.id == principal.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == #vacationRequest.employee.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @vacationRequestEventHandler.employeeCanDeleteRequest(principal.id, #vacationRequest) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @vacationRequestEventHandler.employeeCanDeleteRequest(principal?.id, #vacationRequest)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == #employee.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
- @PreAuthorize("#workTime.employee.id == principal.id")
+ @PreAuthorize("#workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anr-ru/base.services/commit/9986508af594070be3741705bbddc6d44493c808

[COMMIT MESSAGE]:Repaired a test with ACL security and added a new ACL Manager to||simplify ACL operations.
=========================================================

+ @PreAuthorize("hasPermission(#xx,'write')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anr-ru/base.services/commit/9986508af594070be3741705bbddc6d44493c808

[COMMIT MESSAGE]:Repaired a test with ACL security and added a new ACL Manager to||simplify ACL operations.
=========================================================

+ @PreAuthorize("hasPermission(#xx,'write')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=100&q=%40PreAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/davidscotsted/scotsted-com/commit/3d0d341660e92784f3ada34a4165b9e317820ebd

[COMMIT MESSAGE]:Added food diary service classes and tests||
=========================================================

+@PreAuthorize("denyAll")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_DELETE_BRANDS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_BRANDS')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_CREATE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_DELETE_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_READ_ENTRYVALUES')")
+ @PreAuthorize("hasRole('PERM_UPDATE_ENTRYVALUES')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('PERM_CREATE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_DELETE_FOODITEMS')")
+ @PreAuthorize("hasRole('PERM_UPDATE_FOODITEMS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/a12d1bb7bfdfe722e325141c10d6979290dd04d4

[COMMIT MESSAGE]:Lisätty rajapinta yhden ryhmän tietojen hakemiseen ja korjattu projek…||…tin ryhmän nimen esitys
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/8b5d864b5bec834c9f9dd7ebc9c023da55b108b8

[COMMIT MESSAGE]:käyttöoikeudet palveluun||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/433f448b97cb8a8d57cfc230e9efb4f419531945

[COMMIT MESSAGE]:Palvelupuolen toteutus työryhmille ja graafinen käyttäjäryhmähaku||
=========================================================

+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#k.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("hasPermission(null, 'perusteprojekti', 'LUONTI')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'TILANVAIHTO')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Milan26/music-library/commit/2dda9e52ee6c907063bc0adb80bae00066466b81

[COMMIT MESSAGE]:services are now secured with spring Pre-Post annotations||
=========================================================

+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("authentication.principal.username.equals(#userDto.email) or hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('VIEW')")
+ @PreAuthorize("hasAuthority('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Milan26/music-library/commit/2dda9e52ee6c907063bc0adb80bae00066466b81

[COMMIT MESSAGE]:services are now secured with spring Pre-Post annotations||
=========================================================

+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("authentication.principal.username.equals(#userDto.email) or hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('VIEW')")
+ @PreAuthorize("hasAuthority('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Purushottam2005/spring-data-rest/commit/aa64f7a09f7f7de8d7bf32080579c5eb2d7c14b6

[COMMIT MESSAGE]:include code project||
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")
+ @PreAuthorize("hasPermission('Todo', 'search')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/habuma/SpringREST/commit/da0706b5675491b9d9f0224b78eddfe4c92d4e92

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('read')")
+ @PreAuthorize("#oauth2.hasScope('write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nazar-art/SpringInAction/commit/f365c09374613f658939706b8d89ebfe2f1452a6

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("denyAll()")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.username, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.username) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("#travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.email != principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.email == principal?.username or hasRole('ROLE_ADMIN')")
- @PreAuthorize("#employee.id == principal?.id")
+ @PreAuthorize("#employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.username == #vacationRequest.employee.email")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.username != #vacationRequest.employee.email")
- @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.id, #vacationRequest) ) " +
+ @PreAuthorize("( hasRole('ROLE_SUPERVISOR') and @vacationRequestEventHandler.supervisorCanDeleteRequest(principal?.username, #vacationRequest) ) " +
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == #employee.email")
- @PreAuthorize("#workTime.employee.id == principal?.id")
+ @PreAuthorize("#workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or (isAuthenticated() and #id == principal.id)")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #id == principal?.id")
- @PreAuthorize("isAuthenticated() and @travelExpenseEventHandler.canCreate(principal.id, #travelExpense)")
+ @PreAuthorize("@travelExpenseEventHandler.canCreate(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canEdit(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canEdit(principal?.id, #travelExpense)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @travelExpenseEventHandler.canDelete(principal.id, #travelExpense) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @travelExpenseEventHandler.canDelete(principal?.id, #travelExpense)")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(isAuthenticated() and @reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal.id)) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("@reportEventHandler.employeeCanDeleteReport(#travelExpenseReport, principal?.id) or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("#travelExpenseReport.employee.id == principal.id")
+ @PreAuthorize("#travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and #travelExpenseReport.employee.id != principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #comment.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #comment.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #travelExpenseReport.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #travelExpenseReport.employee.id == principal?.id")
- @PreAuthorize("(#sickDays.employee.id == principal.id and isAuthenticated()) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("(isAuthenticated() and #sickDays.employee.id == principal.id) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#sickDays.employee.id == principal?.id or hasRole('ROLE_ADMIN')")
- @PreAuthorize("isAuthenticated() and #employee.id == principal.id")
+ @PreAuthorize("#employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == #vacationRequest.employee.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or principal?.id == #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal.id != #vacationRequest.employee.id")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') and principal?.id != #vacationRequest.employee.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and @vacationRequestEventHandler.employeeCanDeleteRequest(principal.id, #vacationRequest) )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or @vacationRequestEventHandler.employeeCanDeleteRequest(principal?.id, #vacationRequest)")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == #employee.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == #employee.id")
- @PreAuthorize("#workTime.employee.id == principal.id")
+ @PreAuthorize("#workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_ADMIN') or ( #workTime.employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or #workTime.employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
- @PreAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and #employee.id == principal.id )")
+ @PreAuthorize("hasRole('ROLE_SUPERVISOR') or #employee.id == principal?.id")
[NEXT-PAGE-URL]:null

