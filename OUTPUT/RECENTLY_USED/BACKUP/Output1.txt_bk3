
=========================================================
[CODE-CHANGE-URL]:https://github.com/yoshutch/mybyu/commit/d0c37171d5da56d4b2681cfd56da45293771fc2b

[COMMIT MESSAGE]:UP-2950 Adding support and configuration for Spring Security annotati…||…on-based permission expressions under a pre-authentication setup. This commit also includes adding support for SpringMVC's ContentNegotiatingViewResolver.
=========================================================

+ @PreAuthorize("hasPermission('string', 'REST', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gregturn/spring-a-gram/commit/e6c2210104c015f8f21b89d50256249294fa3fa7

[COMMIT MESSAGE]:Secure save/update||Resolves #29
=========================================================

+ @PreAuthorize("#item?.user == null or #item?.user?.name == authentication?.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gregturn/spring-a-gram/commit/41f229a0c1d631850263b53fe0bc6a45bd1e2406

[COMMIT MESSAGE]:Switch on security, hide passwords||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("#item?.user?.name == authentication?.name")
+ @PreAuthorize("@itemRepository.findOne(#id)?.user?.name == authentication?.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USAID-DELIVER-PROJECT/elmis/commit/c0fc6e9b8bb2996d59b4abf51804b88b7f0d7a75

[COMMIT MESSAGE]:<teklutesfayeh@gmail.com>||this is the first version commit for help module
=========================================================

+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/7afd7faab6ab572fd316b19e72025a4ec2e2401f

[COMMIT MESSAGE]:updating api locations in oauth-server frontend||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/f2c2733d06e035e1462d8f115983f7e491d8fd39

[COMMIT MESSAGE]:added user service||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/8b785a813a5397f89752ccb5a15c04080f70f945

[COMMIT MESSAGE]:started adding front-end to oauth-server||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/7afd7faab6ab572fd316b19e72025a4ec2e2401f

[COMMIT MESSAGE]:updating api locations in oauth-server frontend||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/7afd7faab6ab572fd316b19e72025a4ec2e2401f

[COMMIT MESSAGE]:updating api locations in oauth-server frontend||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/cda41387c05b0d3a4d290f1f4c81ce7e3b7ac4c9

[COMMIT MESSAGE]:OVT-8919: Poistetaan autentikointitarve koodin download rajapinnalta.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/89559f08d15446d936674615b3be8458736cd45b

[COMMIT MESSAGE]:OVT-7653: Added KoodistoValidationException. Added new default error …||…messages for each exception and the corresponding messages for koodisto-ui. Removed the hard coded error messages. Removed deprecated exceptions for now optional fields (description and short name). Changed CodesResource to return only valid HTTP responses.
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/8647d6458e04b4fcb13ee83289c506e2b2a81d93

[COMMIT MESSAGE]:OVT-7653: Removed @PreAuthorize from GET methods||GET methods should be available without authentication

Conflicts:
	koodisto-service/src/main/java/fi/vm/sade/koodisto/service/koodisto/rest/CodeElementResource.java
=========================================================

-@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
-@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
-@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b5ad57fab2eddfffa64be8aac82263e23aef8fe7

[COMMIT MESSAGE]:OVT-8189: Added /save method to REST, which saves whole CodesDTO incl…||…uding relations. Added a test for it and changed test-data.xml accordingly. Additionally separated the DTO -> DataType conversion functions from CodesResource to CodesResourceConverter.
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b09768f8b4138945a499cbf84a97af5c6c817046

[COMMIT MESSAGE]:OVT-7699: Lisätty rajapintaan latausmetodi, joka palauttaa tiedostot …||…sellaisenaan JSONin sijasta.
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b4eb7b4e81ff28de5b2080c1a6e655234086814b

[COMMIT MESSAGE]:KH-202: Annotoitu myös muut REST-luokat||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/601825f90398a7605c7b1ab7b752e4a657fe0d88

[COMMIT MESSAGE]:KH-143||Poista-nappi koodiston katselunäkymään
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b3e79c64a060b983c6405b89755d1e14f5e14a4d

[COMMIT MESSAGE]:REST-rajapinnan siivous||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/93c1cc8bb6d85753d591f2533c1b1446d1456291

[COMMIT MESSAGE]:KH-124 Koodiston katselunäkymässä vie koodisto-nappi||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/0d2a874288686eddd25fca9dc876c8e512bf5837

[COMMIT MESSAGE]:OVT-7032||Puute rest-rajapintojen käyttöoikeustarkistuksissa
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/patsancu/comienzoProyecto/commit/1224a93704bdcb9c2c589fe1a0594f548021c8ab

[COMMIT MESSAGE]:Creación y listado de usuarios.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/patsancu/comienzoProyecto/commit/1480057c20eda9b93afbd825aaa8d574c02452d2

[COMMIT MESSAGE]:Gestión de espacios (no reservas).||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=25&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sovan107/RMSDT/commit/363de3240c2345aee8947ae3773ce61528507531

[COMMIT MESSAGE]:2nd time login issue fixed||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/molgenis/molgenis/commit/76aee2cc37136b4f47018f184b7c723de967543d

[COMMIT MESSAGE]:Elasticsearch repository decorator (wip)||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_SU, ROLE_PLUGIN_READ_INDEXMANAGER')")
+ @PreAuthorize("hasAnyRole('ROLE_SU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/8db76cf9436f7ce3c4c3dda4e7249913cdcdf782

[COMMIT MESSAGE]:Configuração de login e resources do projeto||
=========================================================

+ @PreAuthorize("hasRole('MODERADOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/c7ea5fb6be5aaaf931bbcc29e71cb9d5636a79a2

[COMMIT MESSAGE]:Criação da Arquitetura Padrão||
=========================================================

+ @PreAuthorize("hasRole('ADMINISTRADOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/8db76cf9436f7ce3c4c3dda4e7249913cdcdf782

[COMMIT MESSAGE]:Configuração de login e resources do projeto||
=========================================================

+ @PreAuthorize("hasRole('MODERADOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/c7ea5fb6be5aaaf931bbcc29e71cb9d5636a79a2

[COMMIT MESSAGE]:Criação da Arquitetura Padrão||
=========================================================

+ @PreAuthorize("hasRole('ADMINISTRADOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/energyos/OpenESPI-DataCustodian-java/commit/e03e443d3a1dc0ab1ba8f01ca66ac12e40e442c4

[COMMIT MESSAGE]:Restricts access to ScopeSelectionController||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=26&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=27&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/geosolutions-it/OpenSDI-Manager2/commit/1b9a536e6769aa25e70c410bb3c8db022d668c91

[COMMIT MESSAGE]:Fixed test for UserSessionService and relaxed security on delete session||
=========================================================

- @PreAuthorize("(!hasRole('ROLE_ANONYMOUS') and @userSessionService.isOwner(#sessionId,principal)) or hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("(!hasRole('ROLE_ANONYMOUS') and @userSessionService.isOwner(#sessionId,principal)) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/geosolutions-it/OpenSDI-Manager2/commit/305ea8b09c3ff1b19b7e9b5074db03ffb6ee040d

[COMMIT MESSAGE]:UserSession management API with related REST API and mvc controller||
=========================================================

+ @PreAuthorize("!hasRole('ROLE_ANONYMOUS')")
+ @PreAuthorize("(!hasRole('ROLE_ANONYMOUS') and @userSessionService.isOwner(#sessionId,principal)) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdogaru/cf_demo/commit/09045425b779303e77758ae1f4e50746e02c992d

[COMMIT MESSAGE]:rc1||
=========================================================

+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=28&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/194d89944e64cb4f207c6167414eaa5fdd112af0

[COMMIT MESSAGE]:Course Types|| - course types can be defined under Administration > Other > Course Types
 - each course offering can have a course type (to be edited on Edit Course Offering page)
 - through student scheduling status types, a student can be allowed to request only courses of certain course types
=========================================================

+ @PreAuthorize("checkPermission('CourseTypes')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/c57f12c3abe409159dda78d70e40e1a5935a8e9c

[COMMIT MESSAGE]:Add Event|| - added ability to define default value for Additional Emails field
   - in menu, Preferences &gt; Event Defaults (needs permission EventDefaults)
   - users with EventDefaultsEditOther permission can see / modify defaults for other users
=========================================================

+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('HasRole')")
+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('HasRole')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=29&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/1837c818f5dabee46fa227f9170aa6efd833b4a8

[COMMIT MESSAGE]:Logging|| - added page Administration > Defaults > Logging that can be used to adjust logging levels while the application is running
=========================================================

+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/194d89944e64cb4f207c6167414eaa5fdd112af0

[COMMIT MESSAGE]:Course Types|| - course types can be defined under Administration > Other > Course Types
 - each course offering can have a course type (to be edited on Edit Course Offering page)
 - through student scheduling status types, a student can be allowed to request only courses of certain course types
=========================================================

+ @PreAuthorize("checkPermission('CourseTypes')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/91a6b19f793c6180ab33cf1172f4788423ce4b41

[COMMIT MESSAGE]:Student Accommodations|| - Student Accommodations (administration): added page Student Accommodations where student accommodations / special needs can be managed (very much like with the Student Groups)
 - Instructional Offering Detail, Class Detail, Examination Detail, Event Detail: Enrollments table shows student accommodations, if there are any (column Accommodation is only visible if there is at least one student with an accommodation)
 - Instructional Offering Detail, Class Detail, Examination Detail: If there are any student accommodations, short overview table (accommodation name plus the number of students in the offering / class / exam) is also present at the bottom of the top most section
=========================================================

+ @PreAuthorize("checkPermission('StudentAccommodations')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
- @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=30&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/91a6b19f793c6180ab33cf1172f4788423ce4b41

[COMMIT MESSAGE]:Student Accommodations|| - Student Accommodations (administration): added page Student Accommodations where student accommodations / special needs can be managed (very much like with the Student Groups)
 - Instructional Offering Detail, Class Detail, Examination Detail, Event Detail: Enrollments table shows student accommodations, if there are any (column Accommodation is only visible if there is at least one student with an accommodation)
 - Instructional Offering Detail, Class Detail, Examination Detail: If there are any student accommodations, short overview table (accommodation name plus the number of students in the offering / class / exam) is also present at the bottom of the top most section
=========================================================

+ @PreAuthorize("checkPermission('StudentAccommodations')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
- @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/e84ee89a42c88aa2966d2e5e764f18989ed298b6

[COMMIT MESSAGE]:Reservations|| - reservations filter rewritten to use the same component as on the Events page
=========================================================

+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/7d6aba3f858216f535448c8586409d44ee3a4d73

[COMMIT MESSAGE]:Spring Security|| - course / students / examination / event / administration (HQL) reports pages changed to use the new security model
=========================================================

- @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or (#curriculum.id == null and checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd'))")
- @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (#reservation.id == null and checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
+ @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/35359697ea7b47dd120b70279a7bd2b22f58dd2c

[COMMIT MESSAGE]:Spring Security|| - reservation pages changed to use the new security model
=========================================================

+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission(#reservationId, 'Reservation', 'ReservationEdit')")
+ @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("checkPermission(#reservationId, 'Reservation', 'ReservationDelete')")
+ @PreAuthorize("checkPermission('ReservationAdd')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/99c59f6b954d69fdfec2a33be23b4dd2696635b8

[COMMIT MESSAGE]:Spring|| - introducing Spring security
   - added Spring authorization (database & ldap)
   - added authentication primitives to provide method security
=========================================================

+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+@PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/3a2a525cb4d0c2f801ceb5bead22b4f5c592e836

[COMMIT MESSAGE]:Curricula|| - field Filter rewritten to use the same component as on the Events page
=========================================================

+ @PreAuthorize("checkPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/7d6aba3f858216f535448c8586409d44ee3a4d73

[COMMIT MESSAGE]:Spring Security|| - course / students / examination / event / administration (HQL) reports pages changed to use the new security model
=========================================================

- @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or (#curriculum.id == null and checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd'))")
- @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (#reservation.id == null and checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
+ @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/ff2406d2e84bd5f992e54c25de5f23729b2ae07e

[COMMIT MESSAGE]:Spring Security|| - curriculum pages changed to use the new security model
=========================================================

+ @PreAuthorize("checkPermission('CurriculumProjectionRulesDetail')")
+ @PreAuthorize("checkPermission('CurriculumProjectionRulesEdit')")
+ @PreAuthorize("checkPermission('CurriculumProjectionRulesEdit')")
+ @PreAuthorize("checkPermission('CurriculumAdmin')")
+ @PreAuthorize("checkPermission('CurriculumAdmin')")
+ @PreAuthorize("checkPermission(#offeringId, 'InstructionalOffering', 'InstructionalOfferingDetail') or checkPermission('CurriculumAdmin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/4e7965ba598e8bbff170b5356516ddc9ae45940e

[COMMIT MESSAGE]:Spring Security|| - besides of hasPermission methods (return true or false) also added checkPermission methods (return void, throws AccessDeniedException with a message describing the denial)
 - in an attempt to provide more descriptive access denied messages (not just "Access Denied")
 - added access denied handler
=========================================================

- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("checkPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
- @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
- @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("checkPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
- @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("checkPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
- @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("checkPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
- @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("checkPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumAdd') and checkPermission('CurriculumView')")
- @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumAdmin') and checkPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/99c59f6b954d69fdfec2a33be23b4dd2696635b8

[COMMIT MESSAGE]:Spring|| - introducing Spring security
   - added Spring authorization (database & ldap)
   - added authentication primitives to provide method security
=========================================================

+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+@PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SampathCA/blog-manager/commit/5c34ced6c4d26f64c1e3eab6d16c99ad4400014c

[COMMIT MESSAGE]:sprigify security- script, access control||
=========================================================

+ @PreAuthorize("#blog.user.name==authentication.name or hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=31&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Velenteenko/bookmanager/commit/a4ef328f29ec4841c5fdfec72e7b9049f68dcb61

[COMMIT MESSAGE]:Add Security||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/533f759d6adf38587e2c553fcc3d93e373391d12

[COMMIT MESSAGE]:poista tutkinnonosaviite oikeasti||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/33b3026a1f2dbd6652c78348d3d2125108728657

[COMMIT MESSAGE]:yhtenäistä perusteen kaikki -rajapinta||
=========================================================

- @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/f9c8e4507d1b573cd333f3889ac4d50155bbd838

[COMMIT MESSAGE]:Uusia rajapintoja ja korjattu bugi perustelistauksen linkkien generoi…||…nnissa
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/78bc0bed8e1564bd2ad758ec246a2662489c11e0

[COMMIT MESSAGE]:Lisätty rajapinta koko perusopetuksen perusteen hakemiseen sisältöineen||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/37e5f67003d0f3ab7e97fded3344bc326128ad35

[COMMIT MESSAGE]:Korvaamisen perustoiminnallisuus. Vielä pientä UI viilausta.||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/43e02aaaf2542fdd18942ca66810f4618208edb4

[COMMIT MESSAGE]:Toteutusta||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/3c0c2597bc045bd61dd0f004fe51719ea69d6a3b

[COMMIT MESSAGE]:Esiopetuksen perusteprojektin luonti.||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/490222013d458b57cf596712c33ae389b4363c58

[COMMIT MESSAGE]:perusteen korjaus julkaisun jälkeen||Lisättu KORJAUS-oikeus update-palveluihin (WIP)
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.dto.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#viiteId, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#tov.id, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/938e04e00e223111598568637dc4886080dc874c

[COMMIT MESSAGE]:lukituksen refaktorointia||Refaktoroitu Suoritustapa käyttämään geneerisempää lukitussysteemiä.
=========================================================

+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/8537365888800646f1bd2243b76a9cfacb546537

[COMMIT MESSAGE]:Tutkinnon osien käsittely viitteiden avulla refactorointi.||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/34da017bcc4f678893248fa29bea55e6673fe4c5

[COMMIT MESSAGE]:Palvelupuolen toteutus tutkintonimikekoodeille||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/1e7ebd73dcf1b210bfac088679a7363745610983

[COMMIT MESSAGE]:perusteenosaviitteen lisäämisen refaktoirointi||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/5e14ae63b3327f2c2e26f25eb1095fc534476d5f

[COMMIT MESSAGE]:oikeuksien tarkistelu||
=========================================================

- @PreAuthorize("hasPermission(#dto.perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/a7bdb315375f4353c0ecac21591c669f5d5a2dfb

[COMMIT MESSAGE]:perusteenosien haku suppeassa muodossa.||refaktorointia. perusteen osien ja sisältöviitteiden haku suppeassa
muodossa (ilman yksityiskohtia).
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/e5d371c626cf81dda88da62595ff77097e9f4955

[COMMIT MESSAGE]:bugikorjaus tekstikappaleen lisäykseen||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/63ba8685dc699c6ee7f24dc94e34b968e4c899d6

[COMMIT MESSAGE]:oikeustarkisteluja||
=========================================================

+ @PreAuthorize("isAuthenticated()") //XXX ei julkinen rajapinta
+ @PreAuthorize("isAuthenticated()") //XXX ei julkinen rajapinta

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#k.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("hasPermission(null, 'perusteprojekti', 'LUONTI')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'TILANVAIHTO')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/deef82e74791ffa5a2fe5057ba9f3e7851cca7b5

[COMMIT MESSAGE]:Oikeustarkistelun toteutusta.||Perusteenosiin liittyvän perusteprojektin hakeminen. Perustetta tai
perusteen osaa ei voi enää muokata ellei se kuulu käynnissä olevaan
perusteprojektiin (osa tarkistuksista puuttuu yhä).
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'POISTO')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/0492d4760359268a4504ab17a6c54dc6d8f250d7

[COMMIT MESSAGE]:Oikeuksien muokkausta.||Oikeuksien suomennos; kommentoinin oikeuksien bugikorjaus.
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
+ //@PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/3711405bda225372991a6048bd72366469c877e4

[COMMIT MESSAGE]:Spring-security permission evaluator käyttöönotto.||Oikeustarkistelun lisäämisen ensimmäinen vaihe.
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/732b15fe93fe803e04ad9f09e361ec127a0840f2

[COMMIT MESSAGE]:Muokkaaja ja kommentti versiotietojen hakuun.||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/34f422b1bbfd46c650e2d7e11439f7c1e87d1a35

[COMMIT MESSAGE]:Lisätty sisällön sorttaustoiminto backendiin||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jklmnlkevin/daxia-jeasyui/commit/f1ac50419bf59d40667cae44fcc257a51d5d1ef8

[COMMIT MESSAGE]:api test and ctx||
=========================================================

- @PreAuthorize("(hasRole('apiTest.update') and #dto.id != null) or (hasRole('apiTest.add') and #dto.id == null)")
+ @PreAuthorize("(hasRole('apiTest.update') and #dto.id != null) or (hasRole('apiTest.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('apiTest.list')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jklmnlkevin/daxia-jeasyui/commit/8865db62701a8d031109d3b44dc1605f38471502

[COMMIT MESSAGE]:init||
=========================================================

+ @PreAuthorize("(hasRole('system.menu.update') and #dto.id != null) or (hasRole('system.menu.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.menu.delete')")
+ @PreAuthorize("(hasRole('system.authority.update') and #dto.id != null) or (hasRole('system.authority.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.authority.delete')")
+ @PreAuthorize("(hasRole('system.systemConfig.update') and #dto.id != null) or (hasRole('system.systemConfig.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.systemConfig.delete')")
+ @PreAuthorize("hasRole('system.systemConfig.list')")
+ @PreAuthorize("(hasRole('system.systemLog.update') and #dto.id != null) or (hasRole('system.systemLog.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.systemLog.delete')")
+ @PreAuthorize("hasRole('system.systemLog.list')")
+ @PreAuthorize("(hasRole('user.update') and #dto.id != null) or (hasRole('user.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('user.updateRole')")
+ @PreAuthorize("hasRole('user.disable')")
+ @PreAuthorize("hasRole('user.active')")
+ @PreAuthorize("hasRole('user.list')")
+ @PreAuthorize("hasRole('user.resetPassword')")
+ @PreAuthorize("hasRole('user.delete')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=32&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/walidBelfadel/upemgur/commit/ca1eb43cc6d1e1ff9dcd6b80ddead2411d81d71b

[COMMIT MESSAGE]:final commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/walidBelfadel/upemgur/commit/ca1eb43cc6d1e1ff9dcd6b80ddead2411d81d71b

[COMMIT MESSAGE]:final commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PascalHuijsmans/Enterprice-Grade-Software/commit/baac79b1e9f713a5ad118b5280e52a9a0643d35c

[COMMIT MESSAGE]:intial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PascalHuijsmans/Enterprice-Grade-Software/commit/baac79b1e9f713a5ad118b5280e52a9a0643d35c

[COMMIT MESSAGE]:intial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PascalHuijsmans/Enterprice-Grade-Software/commit/baac79b1e9f713a5ad118b5280e52a9a0643d35c

[COMMIT MESSAGE]:intial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Megaprog/spring-users/commit/4a8fcc9f174e91dbfc7254fbb0c0e85c98573d7f

[COMMIT MESSAGE]:it is works||
=========================================================

+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=33&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/irajghasemi/rapid/commit/8bbfc0c9569d607857a45a52fa863e53f3ffbfd5

[COMMIT MESSAGE]:First Commit||
=========================================================

+ @PreAuthorize("#oauth2.clientHasRole('ROLE_CLIENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/phantazia/appdirect/commit/068925703d53302cf07e65490421f72a35158e9f

[COMMIT MESSAGE]:the first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=34&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/wertklop/testcase/commit/1317f95ee046cb08f723ef5aff13029d71822812

[COMMIT MESSAGE]:Доработка по защите приложения||
=========================================================

+ @PreAuthorize("hasRole('ROLE_EDITOR')")
+ @PreAuthorize("hasRole('ROLE_EDITOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pashtika/spring-mvc/commit/947982f7a8ff714546162ec483a5116ee1a33cc4

[COMMIT MESSAGE]:SpringSecurity-MongoDB-MVC||
=========================================================

+ @PreAuthorize("hasRole('ROLE_CAMPAIGN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/siva636/Sri-Lanka-Jobs/commit/c272c37506c8f3f3e1af6c651497029932bd4952

[COMMIT MESSAGE]:Completed state||
=========================================================

+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+// @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/siva636/Sri-Lanka-Jobs/commit/c272c37506c8f3f3e1af6c651497029932bd4952

[COMMIT MESSAGE]:Completed state||
=========================================================

+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+// @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jaewo7o/java-blog-aggregator/commit/ba3f0c6100d2d5475ec322611901a4555b4f25be

[COMMIT MESSAGE]:pre authorized||
=========================================================

+ @PreAuthorize("#blog.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=35&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dhhabi/cecs.scheduling/commit/b77e68c8066e4715cffec80c19c03f3f79e8da8c

[COMMIT MESSAGE]:Professors form building and main ui building started !||
=========================================================

- @PreAuthorize("@currentUserServiceImpl.canAccessUser(principal, #id)")
- @PreAuthorize("hasAuthority('ADMIN')")
- @PreAuthorize("hasAuthority('ADMIN')")
+@PreAuthorize("isFullyAuthenticated()") //do not allow Remember-Me

=========================================================
[CODE-CHANGE-URL]:https://github.com/mishgunn/regataiades-app/commit/461845624294ff956da78762a7f462ed6af17948

[COMMIT MESSAGE]:* Auth token support||* Reg update mode
=========================================================

+ @PreAuthorize("@AccessTool.isAuthenticated()")
+ @PreAuthorize("@AccessTool.isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mimigreg/news/commit/1e5c2064fa3e016488a2d14f2c926d2ba2a0f7f2

[COMMIT MESSAGE]:Basics crud on an easy model||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("#userUI.email == authentication.name")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/janusz-blaszczyk/JbRepoPublic1/commit/639eaf34142b2eb6202a87830cc7f64db38517a7

[COMMIT MESSAGE]:czyszczenie kodu, poukładanie kontrolerów i usług, dodanie strony||startowej z informacjami co, gdzie, dlaczego
=========================================================

-//@PreAuthorize("hasRole('ROLE_OAUTH')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/janusz-blaszczyk/JbRepoPublic1/commit/2b1afe8612b76cf0c6f8c21190f19a5bc4ce84b6

[COMMIT MESSAGE]:działa :) werja 1.0 działającego client/serwer na OAUTH1||
=========================================================

+@PreAuthorize("hasRole('ROLE_OAUTH')")
+ @PreAuthorize("hasRole('ROLE_OAUTH')")
+//@PreAuthorize("hasRole('ROLE_OAUTH')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=36&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/drinkit/drinkit-server/commit/7489cf94a188eb2747cff8b25c532fafe9bacbee

[COMMIT MESSAGE]:extracted from drinkit/drinkIt@dcae852||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/drinkit/drinkit-server/commit/7489cf94a188eb2747cff8b25c532fafe9bacbee

[COMMIT MESSAGE]:extracted from drinkit/drinkIt@dcae852||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pazu021/java-blog-aggregator/commit/53e0a6eb1493ae33edfe836950e8e903ae448430

[COMMIT MESSAGE]:Spring web app tutorial 40: Custom Validation Annotation : javavids||
=========================================================

+ @PreAuthorize("#blog.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/voronenko-da/feetapp/commit/e909b51934480b789b1a2d65b70637df380da988

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/voronenko-da/feetapp/commit/e909b51934480b789b1a2d65b70637df380da988

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/xiGUAwanOU/learning-spring-framework/commit/1c8b8f87246cd5e8d8a7c4f8318908bcef71d9df

[COMMIT MESSAGE]:Finally finished the work on spring security.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/statefulj/statefulj-framework-demo-ddd/commit/5a8299b93b199e32462351a7e58cc694defbbf3f

[COMMIT MESSAGE]:A demo of StatefulJ and DDD architecture||
=========================================================

+ @PreAuthorize("#account.customerId.id == principal.customerId.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/6b1d7217e5f53a4c406a316dd0bb848cecb8983f

[COMMIT MESSAGE]:security account - user account service||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_VISITOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and #userAccount.accountId == authenticatuin.accountId)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=37&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/pazu021/java-blog-aggregator/commit/53e0a6eb1493ae33edfe836950e8e903ae448430

[COMMIT MESSAGE]:Spring web app tutorial 40: Custom Validation Annotation : javavids||
=========================================================

+ @PreAuthorize("#blog.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/voronenko-da/feetapp/commit/e909b51934480b789b1a2d65b70637df380da988

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/voronenko-da/feetapp/commit/e909b51934480b789b1a2d65b70637df380da988

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/xiGUAwanOU/learning-spring-framework/commit/1c8b8f87246cd5e8d8a7c4f8318908bcef71d9df

[COMMIT MESSAGE]:Finally finished the work on spring security.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/statefulj/statefulj-framework-demo-ddd/commit/5a8299b93b199e32462351a7e58cc694defbbf3f

[COMMIT MESSAGE]:A demo of StatefulJ and DDD architecture||
=========================================================

+ @PreAuthorize("#account.customerId.id == principal.customerId.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/6b1d7217e5f53a4c406a316dd0bb848cecb8983f

[COMMIT MESSAGE]:security account - user account service||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_VISITOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and #userAccount.accountId == authenticatuin.accountId)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/c2fe002c8daa13a06d794913cc91c228c9ab6389

[COMMIT MESSAGE]:polish||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_AUTHORITY_SERVICE')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_ROLE_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/c2fe002c8daa13a06d794913cc91c228c9ab6389

[COMMIT MESSAGE]:polish||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_AUTHORITY_SERVICE')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_ROLE_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=38&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thasan01/WebChat-Servlet/commit/fc75275aed406d8b334279dbf7039471321dfb19

[COMMIT MESSAGE]:init commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/a69e7314968a5a0f0e081d070fd8515839957848

[COMMIT MESSAGE]:realized comment deleting||
=========================================================

- @PreAuthorize("hasRole('Admin') " +
+ @PreAuthorize("hasRole('Admin') or (hasRole('User') and @UserServiceImpl.findCommentOwner(#id).getUsername().toLowerCase().equals(principal.username.toLowerCase()))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/31d7ad21416924f4b597bf56c8f7f168c37cd3dc

[COMMIT MESSAGE]:add function of deleting comment||
=========================================================

+ @PreAuthorize("hasRole('Admin') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/01607d7492d0e2048cb67b048b4355abe0507be7

[COMMIT MESSAGE]:realized edit post method||User can edit his post  while post not accepted by admin
Admin can edit post every time
=========================================================

+ @PreAuthorize("hasRole('Admin') " +
+ @PreAuthorize("hasRole('Admin') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/d0d92cada2215075d5da14258a14345a029eb66e

[COMMIT MESSAGE]:config nicEit||
=========================================================

+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/02fa4b9eb640943b6aa5d07f1fb19f47e834c0ca

[COMMIT MESSAGE]:adding method security||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/809e0204981ba3edd932ed616e8da5b6f9a2b9d5

[COMMIT MESSAGE]:adding change image function controller method||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/02fa4b9eb640943b6aa5d07f1fb19f47e834c0ca

[COMMIT MESSAGE]:adding method security||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/bd52688417db43681d8083d4d9312bcc6557ab33

[COMMIT MESSAGE]:change some logic||Method getDafultThemeId if not exist create end return ID
and ect..
=========================================================

+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidsan/montgomery/commit/7d921004aced7450c5db9a523fa8e31c4dc0d711

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kazamage/sample2/commit/fe44e6a98f4968368dc326f972afa233dcf5bedb

[COMMIT MESSAGE]:add.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=39&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

