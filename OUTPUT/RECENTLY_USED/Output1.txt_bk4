
=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=25&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jgadi/youtube.demo/commit/f88c0d808c83b80b0667ecc5eec364b7beeca65b

[COMMIT MESSAGE]:new changes||
=========================================================

+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator,ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAssociate')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator', 'ecoachCoach')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")
+@PreAuthorize("hasAnyRole('ecoachCoach', 'ecoachAdministrator')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sophia2901/assignment1/commit/75395d27cbd4fdcd251a4d1acd17ceff97d6a1c4

[COMMIT MESSAGE]:validation and security check||
=========================================================

+////@PreAuthorize("hasRole('MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yoshutch/mybyu/commit/55f103f31f1162af4f634091975943eb57aedd63

[COMMIT MESSAGE]:UP-3515: Provide a new REST endpoint for permissions at /assignments/…||…{principalType}/{id}.json
=========================================================

+ @PreAuthorize("(#entityType == 'person' and #id == authentication.name) or hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yoshutch/mybyu/commit/0ecdf72b867c62e90ce3cb57860e216e571ab476

[COMMIT MESSAGE]:UP-3311 Fix package name for AuthorizableActivity||
=========================================================

- @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
- @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
- @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
- @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yoshutch/mybyu/commit/d0c37171d5da56d4b2681cfd56da45293771fc2b

[COMMIT MESSAGE]:UP-2950 Adding support and configuration for Spring Security annotati…||…on-based permission expressions under a pre-authentication setup. This commit also includes adding support for SpringMVC's ContentNegotiatingViewResolver.
=========================================================

+ @PreAuthorize("hasPermission('string', 'REST', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yoshutch/mybyu/commit/d0c37171d5da56d4b2681cfd56da45293771fc2b

[COMMIT MESSAGE]:UP-2950 Adding support and configuration for Spring Security annotati…||…on-based permission expressions under a pre-authentication setup. This commit also includes adding support for SpringMVC's ContentNegotiatingViewResolver.
=========================================================

+ @PreAuthorize("hasPermission('string', 'REST', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.evaluator.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")
+ @PreAuthorize("hasPermission('string', 'ALL', new org.jasig.portal.spring.security.AuthorizableActivity('UP_PERMISSIONS', 'VIEW_PERMISSIONS'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gregturn/spring-a-gram/commit/e6c2210104c015f8f21b89d50256249294fa3fa7

[COMMIT MESSAGE]:Secure save/update||Resolves #29
=========================================================

+ @PreAuthorize("#item?.user == null or #item?.user?.name == authentication?.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gregturn/spring-a-gram/commit/41f229a0c1d631850263b53fe0bc6a45bd1e2406

[COMMIT MESSAGE]:Switch on security, hide passwords||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("#item?.user?.name == authentication?.name")
+ @PreAuthorize("@itemRepository.findOne(#id)?.user?.name == authentication?.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USAID-DELIVER-PROJECT/elmis/commit/c0fc6e9b8bb2996d59b4abf51804b88b7f0d7a75

[COMMIT MESSAGE]:<teklutesfayeh@gmail.com>||this is the first version commit for help module
=========================================================

+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")
+// @PreAuthorize("@permissionEvaluator.hasPermission(principal,'MANAGE_PRODUCT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/7afd7faab6ab572fd316b19e72025a4ec2e2401f

[COMMIT MESSAGE]:updating api locations in oauth-server frontend||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/f2c2733d06e035e1462d8f115983f7e491d8fd39

[COMMIT MESSAGE]:added user service||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/8b785a813a5397f89752ccb5a15c04080f70f945

[COMMIT MESSAGE]:started adding front-end to oauth-server||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/7afd7faab6ab572fd316b19e72025a4ec2e2401f

[COMMIT MESSAGE]:updating api locations in oauth-server frontend||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=26&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/lunias/webb/commit/7afd7faab6ab572fd316b19e72025a4ec2e2401f

[COMMIT MESSAGE]:updating api locations in oauth-server frontend||
=========================================================

+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_WRITE + "')")
+ @PreAuthorize("#oauth2.hasScope('" + ScopeConstant.OAUTH_SERVER_READ + "')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/cda41387c05b0d3a4d290f1f4c81ce7e3b7ac4c9

[COMMIT MESSAGE]:OVT-8919: Poistetaan autentikointitarve koodin download rajapinnalta.||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/89559f08d15446d936674615b3be8458736cd45b

[COMMIT MESSAGE]:OVT-7653: Added KoodistoValidationException. Added new default error …||…messages for each exception and the corresponding messages for koodisto-ui. Removed the hard coded error messages. Removed deprecated exceptions for now optional fields (description and short name). Changed CodesResource to return only valid HTTP responses.
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/8647d6458e04b4fcb13ee83289c506e2b2a81d93

[COMMIT MESSAGE]:OVT-7653: Removed @PreAuthorize from GET methods||GET methods should be available without authentication

Conflicts:
	koodisto-service/src/main/java/fi/vm/sade/koodisto/service/koodisto/rest/CodeElementResource.java
=========================================================

-@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
-@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
-@PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b5ad57fab2eddfffa64be8aac82263e23aef8fe7

[COMMIT MESSAGE]:OVT-8189: Added /save method to REST, which saves whole CodesDTO incl…||…uding relations. Added a test for it and changed test-data.xml accordingly. Additionally separated the DTO -> DataType conversion functions from CodesResource to CodesResourceConverter.
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b09768f8b4138945a499cbf84a97af5c6c817046

[COMMIT MESSAGE]:OVT-7699: Lisätty rajapintaan latausmetodi, joka palauttaa tiedostot …||…sellaisenaan JSONin sijasta.
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b4eb7b4e81ff28de5b2080c1a6e655234086814b

[COMMIT MESSAGE]:KH-202: Annotoitu myös muut REST-luokat||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/601825f90398a7605c7b1ab7b752e4a657fe0d88

[COMMIT MESSAGE]:KH-143||Poista-nappi koodiston katselunäkymään
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/b3e79c64a060b983c6405b89755d1e14f5e14a4d

[COMMIT MESSAGE]:REST-rajapinnan siivous||
=========================================================

- @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/93c1cc8bb6d85753d591f2533c1b1446d1456291

[COMMIT MESSAGE]:KH-124 Koodiston katselunäkymässä vie koodisto-nappi||
=========================================================

+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/koodisto/commit/0d2a874288686eddd25fca9dc876c8e512bf5837

[COMMIT MESSAGE]:OVT-7032||Puute rest-rajapintojen käyttöoikeustarkistuksissa
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")
+ @PreAuthorize("hasAnyRole('ROLE_APP_KOODISTO_READ','ROLE_APP_KOODISTO_READ_UPDATE','ROLE_APP_KOODISTO_CRUD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/patsancu/comienzoProyecto/commit/1224a93704bdcb9c2c589fe1a0594f548021c8ab

[COMMIT MESSAGE]:Creación y listado de usuarios.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/patsancu/comienzoProyecto/commit/1480057c20eda9b93afbd825aaa8d574c02452d2

[COMMIT MESSAGE]:Gestión de espacios (no reservas).||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sovan107/RMSDT/commit/363de3240c2345aee8947ae3773ce61528507531

[COMMIT MESSAGE]:2nd time login issue fixed||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SUPER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/molgenis/molgenis/commit/76aee2cc37136b4f47018f184b7c723de967543d

[COMMIT MESSAGE]:Elasticsearch repository decorator (wip)||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_SU, ROLE_PLUGIN_READ_INDEXMANAGER')")
+ @PreAuthorize("hasAnyRole('ROLE_SU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/8db76cf9436f7ce3c4c3dda4e7249913cdcdf782

[COMMIT MESSAGE]:Configuração de login e resources do projeto||
=========================================================

+ @PreAuthorize("hasRole('MODERADOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/c7ea5fb6be5aaaf931bbcc29e71cb9d5636a79a2

[COMMIT MESSAGE]:Criação da Arquitetura Padrão||
=========================================================

+ @PreAuthorize("hasRole('ADMINISTRADOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=27&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/8db76cf9436f7ce3c4c3dda4e7249913cdcdf782

[COMMIT MESSAGE]:Configuração de login e resources do projeto||
=========================================================

+ @PreAuthorize("hasRole('MODERADOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jfmedeiros1820/Seguranca/commit/c7ea5fb6be5aaaf931bbcc29e71cb9d5636a79a2

[COMMIT MESSAGE]:Criação da Arquitetura Padrão||
=========================================================

+ @PreAuthorize("hasRole('ADMINISTRADOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/energyos/OpenESPI-DataCustodian-java/commit/e03e443d3a1dc0ab1ba8f01ca66ac12e40e442c4

[COMMIT MESSAGE]:Restricts access to ScopeSelectionController||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=28&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/geosolutions-it/OpenSDI-Manager2/commit/1b9a536e6769aa25e70c410bb3c8db022d668c91

[COMMIT MESSAGE]:Fixed test for UserSessionService and relaxed security on delete session||
=========================================================

- @PreAuthorize("(!hasRole('ROLE_ANONYMOUS') and @userSessionService.isOwner(#sessionId,principal)) or hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("(!hasRole('ROLE_ANONYMOUS') and @userSessionService.isOwner(#sessionId,principal)) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/geosolutions-it/OpenSDI-Manager2/commit/305ea8b09c3ff1b19b7e9b5074db03ffb6ee040d

[COMMIT MESSAGE]:UserSession management API with related REST API and mvc controller||
=========================================================

+ @PreAuthorize("!hasRole('ROLE_ANONYMOUS')")
+ @PreAuthorize("(!hasRole('ROLE_ANONYMOUS') and @userSessionService.isOwner(#sessionId,principal)) or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gdogaru/cf_demo/commit/09045425b779303e77758ae1f4e50746e02c992d

[COMMIT MESSAGE]:rc1||
=========================================================

+ @PreAuthorize("hasRole('USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=29&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/a8430b8f2343f169cf8e16f245fc7a7e0924bf64

[COMMIT MESSAGE]:Administration > Utilities > Scripts|| - added ability to run small programs through the interface
  - e.g., to reset all examination preferences for a particular examination problem
  - it is possible to plug-in additional scripting engines (e.g., python)
=========================================================

+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('Scripts')")
+ @PreAuthorize("checkPermission('ScriptEdit')")
+ @PreAuthorize("checkPermission('Scripts')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/194d89944e64cb4f207c6167414eaa5fdd112af0

[COMMIT MESSAGE]:Course Types|| - course types can be defined under Administration > Other > Course Types
 - each course offering can have a course type (to be edited on Edit Course Offering page)
 - through student scheduling status types, a student can be allowed to request only courses of certain course types
=========================================================

+ @PreAuthorize("checkPermission('CourseTypes')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/c57f12c3abe409159dda78d70e40e1a5935a8e9c

[COMMIT MESSAGE]:Add Event|| - added ability to define default value for Additional Emails field
   - in menu, Preferences &gt; Event Defaults (needs permission EventDefaults)
   - users with EventDefaultsEditOther permission can see / modify defaults for other users
=========================================================

+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('HasRole')")
+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('HasRole')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=30&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/c57f12c3abe409159dda78d70e40e1a5935a8e9c

[COMMIT MESSAGE]:Add Event|| - added ability to define default value for Additional Emails field
   - in menu, Preferences &gt; Event Defaults (needs permission EventDefaults)
   - users with EventDefaultsEditOther permission can see / modify defaults for other users
=========================================================

+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('HasRole')")
+ @PreAuthorize("checkPermission('EventDefaults')")
+ @PreAuthorize("checkPermission('HasRole')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/1837c818f5dabee46fa227f9170aa6efd833b4a8

[COMMIT MESSAGE]:Logging|| - added page Administration > Defaults > Logging that can be used to adjust logging levels while the application is running
=========================================================

+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")
+ @PreAuthorize("checkPermission('ApplicationConfig')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=31&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/194d89944e64cb4f207c6167414eaa5fdd112af0

[COMMIT MESSAGE]:Course Types|| - course types can be defined under Administration > Other > Course Types
 - each course offering can have a course type (to be edited on Edit Course Offering page)
 - through student scheduling status types, a student can be allowed to request only courses of certain course types
=========================================================

+ @PreAuthorize("checkPermission('CourseTypes')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")
+ @PreAuthorize("checkPermission('CourseTypeEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/91a6b19f793c6180ab33cf1172f4788423ce4b41

[COMMIT MESSAGE]:Student Accommodations|| - Student Accommodations (administration): added page Student Accommodations where student accommodations / special needs can be managed (very much like with the Student Groups)
 - Instructional Offering Detail, Class Detail, Examination Detail, Event Detail: Enrollments table shows student accommodations, if there are any (column Accommodation is only visible if there is at least one student with an accommodation)
 - Instructional Offering Detail, Class Detail, Examination Detail: If there are any student accommodations, short overview table (accommodation name plus the number of students in the offering / class / exam) is also present at the bottom of the top most section
=========================================================

+ @PreAuthorize("checkPermission('StudentAccommodations')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
- @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/91a6b19f793c6180ab33cf1172f4788423ce4b41

[COMMIT MESSAGE]:Student Accommodations|| - Student Accommodations (administration): added page Student Accommodations where student accommodations / special needs can be managed (very much like with the Student Groups)
 - Instructional Offering Detail, Class Detail, Examination Detail, Event Detail: Enrollments table shows student accommodations, if there are any (column Accommodation is only visible if there is at least one student with an accommodation)
 - Instructional Offering Detail, Class Detail, Examination Detail: If there are any student accommodations, short overview table (accommodation name plus the number of students in the offering / class / exam) is also present at the bottom of the top most section
=========================================================

+ @PreAuthorize("checkPermission('StudentAccommodations')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
+ @PreAuthorize("checkPermission('StudentAccommodationEdit')")
- @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/70e2472dc15e924e9806128c4505fbc76e50a6e7

[COMMIT MESSAGE]:GWT-based Administration pages|| - code cleanup
   - backend rewritten using command pattern
   - each page is implemented by a separate class (spring service implementing a simple interface)
 - added an interface to create / update / delete a single record
   - this make the update operations run much faster when there are many records on the page
=========================================================

+ @PreAuthorize("checkPermission('AcademicAreas')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicAreaEdit')")
+ @PreAuthorize("checkPermission('AcademicClassifications')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('AcademicClassificationEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormats')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditFormatEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypes')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditTypeEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnits')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('CourseCreditUnitEdit')")
+ @PreAuthorize("checkPermission('EventDateMappings')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventDateMappingEdit')")
+ @PreAuthorize("checkPermission('EventStatuses')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('EventStatusEdit')")
+ @PreAuthorize("checkPermission('ExamTypes')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('ExamTypeEdit')")
+ @PreAuthorize("checkPermission('InstructorRoles')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('InstructorRoleEdit')")
+ @PreAuthorize("checkPermission('Majors')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('MajorEdit')")
+ @PreAuthorize("checkPermission('Minors')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('MinorEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypes')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('OfferingConsentTypeEdit')")
+ @PreAuthorize("checkPermission('Permissions')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PermissionEdit')")
+ @PreAuthorize("checkPermission('PositionTypes')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('PositionTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypes')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('RoomFeatureTypeEdit')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StandardEventNotes')")
+ @PreAuthorize("checkPermission('StudentGroups')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentGroupEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypes')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('StudentSchedulingStatusTypeEdit')")
+ @PreAuthorize("checkPermission('Roles')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
+ @PreAuthorize("checkPermission('RoleEdit')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=32&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/b6d2a381a13335a5c45217f145c9b79915942249

[COMMIT MESSAGE]:Code Cleanup: HQL Reports|| - saved hql service (and the related servlet) replaced by individual backends (using command pattern)
=========================================================

- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("checkPermission('HQLReports')")
- @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
- @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
- @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission(#request.id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/e84ee89a42c88aa2966d2e5e764f18989ed298b6

[COMMIT MESSAGE]:Reservations|| - reservations filter rewritten to use the same component as on the Events page
=========================================================

+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/7d6aba3f858216f535448c8586409d44ee3a4d73

[COMMIT MESSAGE]:Spring Security|| - course / students / examination / event / administration (HQL) reports pages changed to use the new security model
=========================================================

- @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or (#curriculum.id == null and checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd'))")
- @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (#reservation.id == null and checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
+ @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/35359697ea7b47dd120b70279a7bd2b22f58dd2c

[COMMIT MESSAGE]:Spring Security|| - reservation pages changed to use the new security model
=========================================================

+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission(#reservationId, 'Reservation', 'ReservationEdit')")
+ @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("checkPermission(#reservationId, 'Reservation', 'ReservationDelete')")
+ @PreAuthorize("checkPermission('ReservationAdd')")
+ @PreAuthorize("checkPermission('Reservations')")
+ @PreAuthorize("checkPermission('Reservations')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/99c59f6b954d69fdfec2a33be23b4dd2696635b8

[COMMIT MESSAGE]:Spring|| - introducing Spring security
   - added Spring authorization (database & ldap)
   - added authentication primitives to provide method security
=========================================================

+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+@PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/3a2a525cb4d0c2f801ceb5bead22b4f5c592e836

[COMMIT MESSAGE]:Curricula|| - field Filter rewritten to use the same component as on the Events page
=========================================================

+ @PreAuthorize("checkPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/7d6aba3f858216f535448c8586409d44ee3a4d73

[COMMIT MESSAGE]:Spring Security|| - course / students / examination / event / administration (HQL) reports pages changed to use the new security model
=========================================================

- @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or (#curriculum.id == null and checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd'))")
- @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("(#reservation.id != null and checkPermission(#reservation.id, 'Reservation', 'ReservationEdit')) or (#reservation.id == null and checkPermission(#reservation.offering.id, 'InstructionalOffering', 'ReservationOffering') and checkPermission('ReservationAdd'))")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports') and checkPermission('HQLReportAdd')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("checkPermission('HQLReports')")
+ @PreAuthorize("(#query.id != null and checkPermission(#query.id, 'SavedHQL', 'HQLReportEdit')) or (#query.id == null and checkPermission('HQLReportAdd'))")
+ @PreAuthorize("checkPermission(#id, 'SavedHQL', 'HQLReportDelete')")
+ @PreAuthorize("checkPermission('HQLReports')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/ff2406d2e84bd5f992e54c25de5f23729b2ae07e

[COMMIT MESSAGE]:Spring Security|| - curriculum pages changed to use the new security model
=========================================================

+ @PreAuthorize("checkPermission('CurriculumProjectionRulesDetail')")
+ @PreAuthorize("checkPermission('CurriculumProjectionRulesEdit')")
+ @PreAuthorize("checkPermission('CurriculumProjectionRulesEdit')")
+ @PreAuthorize("checkPermission('CurriculumAdmin')")
+ @PreAuthorize("checkPermission('CurriculumAdmin')")
+ @PreAuthorize("checkPermission(#offeringId, 'InstructionalOffering', 'InstructionalOfferingDetail') or checkPermission('CurriculumAdmin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/4e7965ba598e8bbff170b5356516ddc9ae45940e

[COMMIT MESSAGE]:Spring Security|| - besides of hasPermission methods (return true or false) also added checkPermission methods (return void, throws AccessDeniedException with a message describing the denial)
 - in an attempt to provide more descriptive access denied messages (not just "Access Denied")
 - added access denied handler
=========================================================

- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("checkPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
- @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("(#curriculum.id != null and checkPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit')) or checkPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
- @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("checkPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
- @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("checkPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
- @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("checkPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
- @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("checkPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumView')")
- @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumAdd') and checkPermission('CurriculumView')")
- @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")
+ @PreAuthorize("checkPermission('CurriculumAdmin') and checkPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UniTime/unitime/commit/99c59f6b954d69fdfec2a33be23b4dd2696635b8

[COMMIT MESSAGE]:Spring|| - introducing Spring security
   - added Spring authorization (database & ldap)
   - added authentication primitives to provide method security
=========================================================

+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDetail')")
+ @PreAuthorize("hasPermission(#curriculum.id, 'Curriculum', 'CurriculumEdit') or hasPermission(#curriculum.department.id, 'Department', 'CurriculumAdd')")
+ @PreAuthorize("hasPermission(#curricula, 'Curriculum', 'CurriculumEdit')")
+ @PreAuthorize("hasPermission(#curriculumId, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumDelete')")
+ @PreAuthorize("hasPermission(#curriculumIds, 'Curriculum', 'CurriculumMerge')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+@PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdd') and hasPermission('CurriculumView')")
+ @PreAuthorize("hasRight('CurriculumAdmin') and hasPermission('CurriculumView')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SampathCA/blog-manager/commit/5c34ced6c4d26f64c1e3eab6d16c99ad4400014c

[COMMIT MESSAGE]:sprigify security- script, access control||
=========================================================

+ @PreAuthorize("#blog.user.name==authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Velenteenko/bookmanager/commit/a4ef328f29ec4841c5fdfec72e7b9049f68dcb61

[COMMIT MESSAGE]:Add Security||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/533f759d6adf38587e2c553fcc3d93e373391d12

[COMMIT MESSAGE]:poista tutkinnonosaviite oikeasti||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/33b3026a1f2dbd6652c78348d3d2125108728657

[COMMIT MESSAGE]:yhtenäistä perusteen kaikki -rajapinta||
=========================================================

- @PreAuthorize("permitAll()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/f9c8e4507d1b573cd333f3889ac4d50155bbd838

[COMMIT MESSAGE]:Uusia rajapintoja ja korjattu bugi perustelistauksen linkkien generoi…||…nnissa
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/78bc0bed8e1564bd2ad758ec246a2662489c11e0

[COMMIT MESSAGE]:Lisätty rajapinta koko perusopetuksen perusteen hakemiseen sisältöineen||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/37e5f67003d0f3ab7e97fded3344bc326128ad35

[COMMIT MESSAGE]:Korvaamisen perustoiminnallisuus. Vielä pientä UI viilausta.||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/43e02aaaf2542fdd18942ca66810f4618208edb4

[COMMIT MESSAGE]:Toteutusta||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/3c0c2597bc045bd61dd0f004fe51719ea69d6a3b

[COMMIT MESSAGE]:Esiopetuksen perusteprojektin luonti.||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/490222013d458b57cf596712c33ae389b4363c58

[COMMIT MESSAGE]:perusteen korjaus julkaisun jälkeen||Lisättu KORJAUS-oikeus update-palveluihin (WIP)
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.dto.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#po.id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#viiteId, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS') or hasPermission(#id, 'perusteenosa', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#tov.id, 'tutkinnonosaviite', 'MUOKKAUS') or hasPermission(#tov.id, 'tutkinnonosaviite', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS') or hasPermission(#perusteId, 'peruste', 'KORJAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/938e04e00e223111598568637dc4886080dc874c

[COMMIT MESSAGE]:lukituksen refaktorointia||Refaktoroitu Suoritustapa käyttämään geneerisempää lukitussysteemiä.
=========================================================

+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/8537365888800646f1bd2243b76a9cfacb546537

[COMMIT MESSAGE]:Tutkinnon osien käsittely viitteiden avulla refactorointi.||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'tutkinnonosaviite', 'LUKU')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#viiteId, 'tutkinnonosaviite', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/34da017bcc4f678893248fa29bea55e6673fe4c5

[COMMIT MESSAGE]:Palvelupuolen toteutus tutkintonimikekoodeille||
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/1e7ebd73dcf1b210bfac088679a7363745610983

[COMMIT MESSAGE]:perusteenosaviitteen lisäämisen refaktoirointi||
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/5e14ae63b3327f2c2e26f25eb1095fc534476d5f

[COMMIT MESSAGE]:oikeuksien tarkistelu||
=========================================================

- @PreAuthorize("hasPermission(#dto.perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'peruste', 'LUKU')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'perusteenmetatiedot', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/a7bdb315375f4353c0ecac21591c669f5d5a2dfb

[COMMIT MESSAGE]:perusteenosien haku suppeassa muodossa.||refaktorointia. perusteen osien ja sisältöviitteiden haku suppeassa
muodossa (ilman yksityiskohtia).
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/e5d371c626cf81dda88da62595ff77097e9f4955

[COMMIT MESSAGE]:bugikorjaus tekstikappaleen lisäykseen||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/63ba8685dc699c6ee7f24dc94e34b968e4c899d6

[COMMIT MESSAGE]:oikeustarkisteluja||
=========================================================

+ @PreAuthorize("isAuthenticated()") //XXX ei julkinen rajapinta
+ @PreAuthorize("isAuthenticated()") //XXX ei julkinen rajapinta

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#k.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'LUKU')")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("returnObject?.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("isAuthenticated()") //XXX
+ @PreAuthorize("hasPermission(null, 'perusteprojekti', 'LUONTI')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'LUKU')")
+ @PreAuthorize("hasPermission(#id, 'perusteprojekti', 'TILANVAIHTO')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/deef82e74791ffa5a2fe5057ba9f3e7851cca7b5

[COMMIT MESSAGE]:Oikeustarkistelun toteutusta.||Perusteenosiin liittyvän perusteprojektin hakeminen. Perustetta tai
perusteen osaa ei voi enää muokata ellei se kuulu käynnissä olevaan
perusteprojektiin (osa tarkistuksista puuttuu yhä).
=========================================================

+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.dto.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#po.id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'POISTO')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#id, 'perusteenosa', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/0492d4760359268a4504ab17a6c54dc6d8f250d7

[COMMIT MESSAGE]:Oikeuksien muokkausta.||Oikeuksien suomennos; kommentoinin oikeuksien bugikorjaus.
=========================================================

- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'MUOKKAUS')")
- @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")
- @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
+ //@PreAuthorize("hasPermission(#kommenttidto.perusteprojektiId, 'perusteProjekti', 'KOMMENTOINTI')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/3711405bda225372991a6048bd72366469c877e4

[COMMIT MESSAGE]:Spring-security permission evaluator käyttöönotto.||Oikeustarkistelun lisäämisen ensimmäinen vaihe.
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
+ @PreAuthorize("hasPermission(#perusteId, 'peruste', 'UPDATE')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasPermission(#kommenttidto.perusteProjektiId, 'perusteProjekti', 'COMMENT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/732b15fe93fe803e04ad9f09e361ec127a0840f2

[COMMIT MESSAGE]:Muokkaaja ja kommentti versiotietojen hakuun.||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/34f422b1bbfd46c650e2d7e11439f7c1e87d1a35

[COMMIT MESSAGE]:Lisätty sisällön sorttaustoiminto backendiin||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jklmnlkevin/daxia-jeasyui/commit/f1ac50419bf59d40667cae44fcc257a51d5d1ef8

[COMMIT MESSAGE]:api test and ctx||
=========================================================

- @PreAuthorize("(hasRole('apiTest.update') and #dto.id != null) or (hasRole('apiTest.add') and #dto.id == null)")
+ @PreAuthorize("(hasRole('apiTest.update') and #dto.id != null) or (hasRole('apiTest.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('apiTest.list')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jklmnlkevin/daxia-jeasyui/commit/8865db62701a8d031109d3b44dc1605f38471502

[COMMIT MESSAGE]:init||
=========================================================

+ @PreAuthorize("(hasRole('system.menu.update') and #dto.id != null) or (hasRole('system.menu.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.menu.delete')")
+ @PreAuthorize("(hasRole('system.authority.update') and #dto.id != null) or (hasRole('system.authority.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.authority.delete')")
+ @PreAuthorize("(hasRole('system.systemConfig.update') and #dto.id != null) or (hasRole('system.systemConfig.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.systemConfig.delete')")
+ @PreAuthorize("hasRole('system.systemConfig.list')")
+ @PreAuthorize("(hasRole('system.systemLog.update') and #dto.id != null) or (hasRole('system.systemLog.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('system.systemLog.delete')")
+ @PreAuthorize("hasRole('system.systemLog.list')")
+ @PreAuthorize("(hasRole('user.update') and #dto.id != null) or (hasRole('user.add') and #dto.id == null)")
+ @PreAuthorize("hasRole('user.updateRole')")
+ @PreAuthorize("hasRole('user.disable')")
+ @PreAuthorize("hasRole('user.active')")
+ @PreAuthorize("hasRole('user.list')")
+ @PreAuthorize("hasRole('user.resetPassword')")
+ @PreAuthorize("hasRole('user.delete')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=33&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/walidBelfadel/upemgur/commit/ca1eb43cc6d1e1ff9dcd6b80ddead2411d81d71b

[COMMIT MESSAGE]:final commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/walidBelfadel/upemgur/commit/ca1eb43cc6d1e1ff9dcd6b80ddead2411d81d71b

[COMMIT MESSAGE]:final commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=34&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/walidBelfadel/upemgur/commit/ca1eb43cc6d1e1ff9dcd6b80ddead2411d81d71b

[COMMIT MESSAGE]:final commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/walidBelfadel/upemgur/commit/ca1eb43cc6d1e1ff9dcd6b80ddead2411d81d71b

[COMMIT MESSAGE]:final commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PascalHuijsmans/Enterprice-Grade-Software/commit/baac79b1e9f713a5ad118b5280e52a9a0643d35c

[COMMIT MESSAGE]:intial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PascalHuijsmans/Enterprice-Grade-Software/commit/baac79b1e9f713a5ad118b5280e52a9a0643d35c

[COMMIT MESSAGE]:intial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PascalHuijsmans/Enterprice-Grade-Software/commit/baac79b1e9f713a5ad118b5280e52a9a0643d35c

[COMMIT MESSAGE]:intial commit||
=========================================================

+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")
+@PreAuthorize("hasRole('ROLE_EMPLOYEE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Megaprog/spring-users/commit/4a8fcc9f174e91dbfc7254fbb0c0e85c98573d7f

[COMMIT MESSAGE]:it is works||
=========================================================

+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")
+ @PreAuthorize("hasAuthority('editor')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/irajghasemi/rapid/commit/8bbfc0c9569d607857a45a52fa863e53f3ffbfd5

[COMMIT MESSAGE]:First Commit||
=========================================================

+ @PreAuthorize("#oauth2.clientHasRole('ROLE_CLIENT')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=35&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/phantazia/appdirect/commit/068925703d53302cf07e65490421f72a35158e9f

[COMMIT MESSAGE]:the first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wertklop/testcase/commit/1317f95ee046cb08f723ef5aff13029d71822812

[COMMIT MESSAGE]:Доработка по защите приложения||
=========================================================

+ @PreAuthorize("hasRole('ROLE_EDITOR')")
+ @PreAuthorize("hasRole('ROLE_EDITOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pashtika/spring-mvc/commit/947982f7a8ff714546162ec483a5116ee1a33cc4

[COMMIT MESSAGE]:SpringSecurity-MongoDB-MVC||
=========================================================

+ @PreAuthorize("hasRole('ROLE_CAMPAIGN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=36&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/siva636/Sri-Lanka-Jobs/commit/c272c37506c8f3f3e1af6c651497029932bd4952

[COMMIT MESSAGE]:Completed state||
=========================================================

+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+// @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/siva636/Sri-Lanka-Jobs/commit/c272c37506c8f3f3e1af6c651497029932bd4952

[COMMIT MESSAGE]:Completed state||
=========================================================

+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_CANDIDATE')")
+// @PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")
+ @PreAuthorize("hasRole('ROLE_EMAIL_VERIFIED_EMPLOYER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jaewo7o/java-blog-aggregator/commit/ba3f0c6100d2d5475ec322611901a4555b4f25be

[COMMIT MESSAGE]:pre authorized||
=========================================================

+ @PreAuthorize("#blog.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/ca60d83810197a9a48315654b400cb607b65b13e

[COMMIT MESSAGE]:blog samples have removed||
=========================================================

- @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=37&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/webyildirim/trafikhaberci/commit/2af1760f3264ebc18e953868bd60ac6a7c991b3f

[COMMIT MESSAGE]:oauth2 implemented||
=========================================================

- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
- @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dhhabi/cecs.scheduling/commit/b77e68c8066e4715cffec80c19c03f3f79e8da8c

[COMMIT MESSAGE]:Professors form building and main ui building started !||
=========================================================

- @PreAuthorize("@currentUserServiceImpl.canAccessUser(principal, #id)")
- @PreAuthorize("hasAuthority('ADMIN')")
- @PreAuthorize("hasAuthority('ADMIN')")
+@PreAuthorize("isFullyAuthenticated()") //do not allow Remember-Me

=========================================================
[CODE-CHANGE-URL]:https://github.com/mishgunn/regataiades-app/commit/461845624294ff956da78762a7f462ed6af17948

[COMMIT MESSAGE]:* Auth token support||* Reg update mode
=========================================================

+ @PreAuthorize("@AccessTool.isAuthenticated()")
+ @PreAuthorize("@AccessTool.isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/samitkumarpatel/spring-mvc-test-examples-DEMO/commit/0dc3f4e5884833629d08606b8100140a844bc139

[COMMIT MESSAGE]:initial checkins||spring mvc based example with unitest cases
=========================================================

+ @PreAuthorize("hasPermission('Todo', 'add')")
+ @PreAuthorize("hasPermission('Todo', 'delete')")
+ @PreAuthorize("hasPermission('Todo', 'list')")
+ @PreAuthorize("hasPermission('Todo', 'find')")
+ @PreAuthorize("hasPermission('Todo', 'update')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mimigreg/news/commit/1e5c2064fa3e016488a2d14f2c926d2ba2a0f7f2

[COMMIT MESSAGE]:Basics crud on an easy model||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("#userUI.email == authentication.name")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/janusz-blaszczyk/JbRepoPublic1/commit/639eaf34142b2eb6202a87830cc7f64db38517a7

[COMMIT MESSAGE]:czyszczenie kodu, poukładanie kontrolerów i usług, dodanie strony||startowej z informacjami co, gdzie, dlaczego
=========================================================

-//@PreAuthorize("hasRole('ROLE_OAUTH')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/janusz-blaszczyk/JbRepoPublic1/commit/2b1afe8612b76cf0c6f8c21190f19a5bc4ce84b6

[COMMIT MESSAGE]:działa :) werja 1.0 działającego client/serwer na OAUTH1||
=========================================================

+@PreAuthorize("hasRole('ROLE_OAUTH')")
+ @PreAuthorize("hasRole('ROLE_OAUTH')")
+//@PreAuthorize("hasRole('ROLE_OAUTH')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=38&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/drinkit/drinkit-server/commit/7489cf94a188eb2747cff8b25c532fafe9bacbee

[COMMIT MESSAGE]:extracted from drinkit/drinkIt@dcae852||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/drinkit/drinkit-server/commit/7489cf94a188eb2747cff8b25c532fafe9bacbee

[COMMIT MESSAGE]:extracted from drinkit/drinkIt@dcae852||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAnonymous()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pazu021/java-blog-aggregator/commit/53e0a6eb1493ae33edfe836950e8e903ae448430

[COMMIT MESSAGE]:Spring web app tutorial 40: Custom Validation Annotation : javavids||
=========================================================

+ @PreAuthorize("#blog.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/voronenko-da/feetapp/commit/e909b51934480b789b1a2d65b70637df380da988

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/voronenko-da/feetapp/commit/e909b51934480b789b1a2d65b70637df380da988

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/xiGUAwanOU/learning-spring-framework/commit/1c8b8f87246cd5e8d8a7c4f8318908bcef71d9df

[COMMIT MESSAGE]:Finally finished the work on spring security.||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/statefulj/statefulj-framework-demo-ddd/commit/5a8299b93b199e32462351a7e58cc694defbbf3f

[COMMIT MESSAGE]:A demo of StatefulJ and DDD architecture||
=========================================================

+ @PreAuthorize("#account.customerId.id == principal.customerId.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/6b1d7217e5f53a4c406a316dd0bb848cecb8983f

[COMMIT MESSAGE]:security account - user account service||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_VISITOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and #userAccount.accountId == authenticatuin.accountId)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/c2fe002c8daa13a06d794913cc91c228c9ab6389

[COMMIT MESSAGE]:polish||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_AUTHORITY_SERVICE')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_ROLE_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/c2fe002c8daa13a06d794913cc91c228c9ab6389

[COMMIT MESSAGE]:polish||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_AUTHORITY_SERVICE')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_ROLE_SERVICE')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=39&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/statefulj/statefulj-framework-demo-ddd/commit/5a8299b93b199e32462351a7e58cc694defbbf3f

[COMMIT MESSAGE]:A demo of StatefulJ and DDD architecture||
=========================================================

+ @PreAuthorize("#account.customerId.id == principal.customerId.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/6b1d7217e5f53a4c406a316dd0bb848cecb8983f

[COMMIT MESSAGE]:security account - user account service||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_VISITOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_USER') and #userAccount.accountId == authenticatuin.accountId)")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/c2fe002c8daa13a06d794913cc91c228c9ab6389

[COMMIT MESSAGE]:polish||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_AUTHORITY_SERVICE')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_ROLE_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shagaba/shagaba-kickstarter-auth/commit/c2fe002c8daa13a06d794913cc91c228c9ab6389

[COMMIT MESSAGE]:polish||
=========================================================

+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_AUTHORITY_SERVICE')")
+@PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ADMIN_ROLE_SERVICE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thasan01/WebChat-Servlet/commit/fc75275aed406d8b334279dbf7039471321dfb19

[COMMIT MESSAGE]:init commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/a69e7314968a5a0f0e081d070fd8515839957848

[COMMIT MESSAGE]:realized comment deleting||
=========================================================

- @PreAuthorize("hasRole('Admin') " +
+ @PreAuthorize("hasRole('Admin') or (hasRole('User') and @UserServiceImpl.findCommentOwner(#id).getUsername().toLowerCase().equals(principal.username.toLowerCase()))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/31d7ad21416924f4b597bf56c8f7f168c37cd3dc

[COMMIT MESSAGE]:add function of deleting comment||
=========================================================

+ @PreAuthorize("hasRole('Admin') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/01607d7492d0e2048cb67b048b4355abe0507be7

[COMMIT MESSAGE]:realized edit post method||User can edit his post  while post not accepted by admin
Admin can edit post every time
=========================================================

+ @PreAuthorize("hasRole('Admin') " +
+ @PreAuthorize("hasRole('Admin') " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/d0d92cada2215075d5da14258a14345a029eb66e

[COMMIT MESSAGE]:config nicEit||
=========================================================

+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/02fa4b9eb640943b6aa5d07f1fb19f47e834c0ca

[COMMIT MESSAGE]:adding method security||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/809e0204981ba3edd932ed616e8da5b6f9a2b9d5

[COMMIT MESSAGE]:adding change image function controller method||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/02fa4b9eb640943b6aa5d07f1fb19f47e834c0ca

[COMMIT MESSAGE]:adding method security||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=40&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/odahovskiy/tvoiobzor/commit/bd52688417db43681d8083d4d9312bcc6557ab33

[COMMIT MESSAGE]:change some logic||Method getDafultThemeId if not exist create end return ID
and ect..
=========================================================

+ @PreAuthorize("hasRole('Admin')")
+ @PreAuthorize("hasRole('Admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/davidsan/montgomery/commit/7d921004aced7450c5db9a523fa8e31c4dc0d711

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kazamage/sample2/commit/fe44e6a98f4968368dc326f972afa233dcf5bedb

[COMMIT MESSAGE]:add.||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/prasobhpk/spring-rest-security/commit/97706767e3c0dea5007f6168b18b6ed16fa2070d

[COMMIT MESSAGE]:Initial commit for spring rest security||
=========================================================

+@PreAuthorize("hasAuthority('ROLE_DOMAIN_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/htiwari84/spring-data-examples/commit/1d7554b57ad524bd5d1944490ec5ceca81e6eb05

[COMMIT MESSAGE]:#21 - Polished Spring Data REST + Spring Security example.||Removed obsolete dependency declarations from pom.xml. Rewrote test cases to use Spring MVC test support instead of a running server and RestTemplate. Fixed Security configuration to allow bootstrap in Spring MVC test context. Formatting, JavaDoc.

Original pull request: #22.
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/htiwari84/spring-data-examples/commit/c5920a64d9571a4403aa0ffaf3d2418412d25a14

[COMMIT MESSAGE]:#21 - Added example for Spring Data REST and Spring Security.||Added example of how to secure a Spring Data REST project with Spring Security both on the method level as well as the URI level.

Original pull request: #22.
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rpcherrera/ipalit-alpha/commit/a6bf3ab619bcd7193aef9fd7153ca193720d8f32

[COMMIT MESSAGE]:final||
=========================================================

+ @PreAuthorize("#blog.user.username == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#wishlist.user.username == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rpcherrera/ipalit-alpha/commit/a6bf3ab619bcd7193aef9fd7153ca193720d8f32

[COMMIT MESSAGE]:final||
=========================================================

+ @PreAuthorize("#blog.user.username == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#wishlist.user.username == authentication.name or hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=41&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/rpcherrera/ipalit-alpha/commit/a6bf3ab619bcd7193aef9fd7153ca193720d8f32

[COMMIT MESSAGE]:final||
=========================================================

+ @PreAuthorize("#blog.user.username == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#wishlist.user.username == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rpcherrera/ipalit-alpha/commit/a6bf3ab619bcd7193aef9fd7153ca193720d8f32

[COMMIT MESSAGE]:final||
=========================================================

+ @PreAuthorize("#blog.user.username == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#wishlist.user.username == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/IldarS1995/StudentsWebApp/commit/f5a389d397d5821ba4a0c4dad4177868ddfdd5d0

[COMMIT MESSAGE]:Corrected controller files||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/IldarS1995/StudentsWebApp/commit/3d37a33768be3c42f53f8bc83726eb8fce7e031b

[COMMIT MESSAGE]:Added cities localizing, adding and removing features, and modified s…||…tart page
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/IldarS1995/StudentsWebApp/commit/66fe10e7afdaf2589351231ba1b72c26705ea154

[COMMIT MESSAGE]:Correct dynamic news uploading code, fixed bug with deleting news whi…||…le being on the same news viewing page and added JS file size checking to the student info page.
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/IldarS1995/StudentsWebApp/commit/49fba5bd749773889db4125774f48b84ed065f31

[COMMIT MESSAGE]:Added modifying and deleting news, with some security||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#news.author.username == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sanketbajoria/jittrackGTS/commit/b38d88603d26c6a6e51a1705218ca40f350afad7

[COMMIT MESSAGE]:Merge branch 'master' of||https://github.com/sanketbajoria/jittrackGTS.git

Conflicts:
	jittrackGTS/src/main/java/com/jittrack/gts/config/SecurityConfiguration.java
	jittrackGTS/src/main/java/com/jittrack/gts/web/rest/GTSAccountResource.java
=========================================================

+ @PreAuthorize("hasPermission(null, 'allowDoSomething')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sanketbajoria/jittrackGTS/commit/b96c5fe549c95155015af541d0d74b7c78592aaa

[COMMIT MESSAGE]:Changes||
=========================================================

+ @PreAuthorize("hasPermission(null, 'allowDoSomething')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/limackk/project1/commit/8e9292d1152adf43e0834a64f1b8cecf0d74d597

[COMMIT MESSAGE]:second commit||
=========================================================

+ @PreAuthorize("#route.user.name = authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bkielczewski/example-spring-boot-security/commit/57ce6761df3db2ad79355bdfebd5404cb4839c82

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("@currentUserServiceImpl.canAccessUser(principal, #id)")
+ @PreAuthorize("hasAuthority('ADMIN')")
+ @PreAuthorize("hasAuthority('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kleskq/Springjs/commit/2a4b6b33a5f3dab67fa0efdb6278e6440ec1df98

[COMMIT MESSAGE]:restapi||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kleskq/Springjs/commit/2a4b6b33a5f3dab67fa0efdb6278e6440ec1df98

[COMMIT MESSAGE]:restapi||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chintan2201/TicTacToe_cs520/commit/018884b034cd4e17d16faa8c4bd8a045a8434969

[COMMIT MESSAGE]:tic tac toe init||init
=========================================================

+ - I have add @PreAuthorize("principal.username == #user.username") tag on the above of getSavedGames() method in
+ @PreAuthorize("principal.username == #user.username")
+ @PreAuthorize("principal.username == #user.username")
+ - I have add @PreAuthorize("principal.username == #user.username") tag on the above of getSavedGames() method in
+ @PreAuthorize("principal.username == #user.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marcodd23/hirelance/commit/c9e3d6d8b0065fec4f7203b16d0111208aed7427

[COMMIT MESSAGE]:primo||
=========================================================

+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ //@PreAuthorize("hasRole('admin')")
+ @PreAuthorize("#userID==principal.user.userID")
+ //@PreAuthorize("1==2")
+ @PreAuthorize("#userID==principal.user.userID")
+ @PreAuthorize("hasRole('admin') OR principal.user.userID==#userID")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=42&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/kleskq/Springjs/commit/2a4b6b33a5f3dab67fa0efdb6278e6440ec1df98

[COMMIT MESSAGE]:restapi||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chintan2201/TicTacToe_cs520/commit/018884b034cd4e17d16faa8c4bd8a045a8434969

[COMMIT MESSAGE]:tic tac toe init||init
=========================================================

+ - I have add @PreAuthorize("principal.username == #user.username") tag on the above of getSavedGames() method in
+ @PreAuthorize("principal.username == #user.username")
+ @PreAuthorize("principal.username == #user.username")
+ - I have add @PreAuthorize("principal.username == #user.username") tag on the above of getSavedGames() method in
+ @PreAuthorize("principal.username == #user.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marcodd23/hirelance/commit/c9e3d6d8b0065fec4f7203b16d0111208aed7427

[COMMIT MESSAGE]:primo||
=========================================================

+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ //@PreAuthorize("hasRole('admin')")
+ @PreAuthorize("#userID==principal.user.userID")
+ //@PreAuthorize("1==2")
+ @PreAuthorize("#userID==principal.user.userID")
+ @PreAuthorize("hasRole('admin') OR principal.user.userID==#userID")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marcodd23/hirelance/commit/c9e3d6d8b0065fec4f7203b16d0111208aed7427

[COMMIT MESSAGE]:primo||
=========================================================

+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ //@PreAuthorize("hasRole('admin')")
+ @PreAuthorize("#userID==principal.user.userID")
+ //@PreAuthorize("1==2")
+ @PreAuthorize("#userID==principal.user.userID")
+ @PreAuthorize("hasRole('admin') OR principal.user.userID==#userID")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marcodd23/hirelance/commit/c9e3d6d8b0065fec4f7203b16d0111208aed7427

[COMMIT MESSAGE]:primo||
=========================================================

+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ @PreAuthorize("#curriculumID==principal.user.freelanceProfile.curriculum.curriculumID")
+ //@PreAuthorize("hasRole('admin')")
+ @PreAuthorize("#userID==principal.user.userID")
+ //@PreAuthorize("1==2")
+ @PreAuthorize("#userID==principal.user.userID")
+ @PreAuthorize("hasRole('admin') OR principal.user.userID==#userID")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Merwis/raid-planner/commit/c15ef744c024b68d534d524c5dd64daca2a0a564

[COMMIT MESSAGE]:Přidána úprava uživatelů a postav.||
=========================================================

+ //@PreAuthorize("#myCharacter.user.login == authentication.name OR hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Merwis/raid-planner/commit/1918fb48e5bd3d541f897f516789ada45e640599

[COMMIT MESSAGE]:Další práce na uživatelských účtech a validace formulářů.||
=========================================================

+ @PreAuthorize("#myCharacter.user.login == authentication.name OR hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Merwis/raid-planner/commit/c15ef744c024b68d534d524c5dd64daca2a0a564

[COMMIT MESSAGE]:Přidána úprava uživatelů a postav.||
=========================================================

+ //@PreAuthorize("#myCharacter.user.login == authentication.name OR hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Merwis/raid-planner/commit/1918fb48e5bd3d541f897f516789ada45e640599

[COMMIT MESSAGE]:Další práce na uživatelských účtech a validace formulářů.||
=========================================================

+ @PreAuthorize("#myCharacter.user.login == authentication.name OR hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=43&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/marcosco/ttimer/commit/52d3bd02c4ed9c892833b789491ccbb341d19e24

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("#timer.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/augustinejuly/BloodBank/commit/79d772f8e64b7ea6cd03c7c1eb3cdff6db1fc34c

[COMMIT MESSAGE]:Bloodbank POC project||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/augustinejuly/BloodBank/commit/79d772f8e64b7ea6cd03c7c1eb3cdff6db1fc34c

[COMMIT MESSAGE]:Bloodbank POC project||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+ @PreAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN')")
+@PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mg-3/Turbo/commit/1a9ab4b1366feaff64258557b3b831ac4aa3babc

[COMMIT MESSAGE]:Adding phod report accessibility via REST||Plugin data sources
Initial Spring security
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER'")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Proactum/arti-initial/commit/139947cbab7f270007dcd6b5ee3eac24ca78b2b0

[COMMIT MESSAGE]:Code brought over from Metka. Most clear major changes done. Removed …||…HTML-code from inside java since it's smarter to develope the site as a separate entity.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission(#id, '" + PermissionCheck.Values.REMOVE_SEARCH + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_INDEX_INFO +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_MANUALLY_INDEX_CONTENT +"', 'PERMISSION')")
+ /*@PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Proactum/arti-initial/commit/139947cbab7f270007dcd6b5ee3eac24ca78b2b0

[COMMIT MESSAGE]:Code brought over from Metka. Most clear major changes done. Removed …||…HTML-code from inside java since it's smarter to develope the site as a separate entity.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission(#id, '" + PermissionCheck.Values.REMOVE_SEARCH + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_INDEX_INFO +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_MANUALLY_INDEX_CONTENT +"', 'PERMISSION')")
+ /*@PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Proactum/arti-initial/commit/139947cbab7f270007dcd6b5ee3eac24ca78b2b0

[COMMIT MESSAGE]:Code brought over from Metka. Most clear major changes done. Removed …||…HTML-code from inside java since it's smarter to develope the site as a separate entity.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission(#id, '" + PermissionCheck.Values.REMOVE_SEARCH + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_INDEX_INFO +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_MANUALLY_INDEX_CONTENT +"', 'PERMISSION')")
+ /*@PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Proactum/arti-initial/commit/139947cbab7f270007dcd6b5ee3eac24ca78b2b0

[COMMIT MESSAGE]:Code brought over from Metka. Most clear major changes done. Removed …||…HTML-code from inside java since it's smarter to develope the site as a separate entity.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission(#id, '" + PermissionCheck.Values.REMOVE_SEARCH + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_INDEX_INFO +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_MANUALLY_INDEX_CONTENT +"', 'PERMISSION')")
+ /*@PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Proactum/arti-initial/commit/139947cbab7f270007dcd6b5ee3eac24ca78b2b0

[COMMIT MESSAGE]:Code brought over from Metka. Most clear major changes done. Removed …||…HTML-code from inside java since it's smarter to develope the site as a separate entity.
=========================================================

+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_SAVE_EXPERT_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission(#id, '" + PermissionCheck.Values.REMOVE_SEARCH + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_CREATE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_APPROVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_REMOVE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_RESTORE_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_PERFORM_SEARCH +"', '" + PermissionCheck.Values.PERMISSION + "')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_REVISION +"', '" + PermissionCheck.Values.PERMISSION + "') " +
+//@PreAuthorize("hasPermission('canViewSettingsPage', 'PERMISSION')")
+@PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_SETTINGS_PAGE +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_GENERATE_REPORTS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_EDIT_API_USERS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION') OR " +
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_VIEW_INDEX_INFO +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_MANUALLY_INDEX_CONTENT +"', 'PERMISSION')")
+ /*@PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_CONFIGURATIONS +"', 'PERMISSION')")
+ @PreAuthorize("hasPermission('"+ Permission.Values.CAN_UPLOAD_JSON +"', 'PERMISSION')")
+//@PreAuthorize("hasRole('ROLE_ADMIN')")
+ //@PreAuthorize("hasRole('ROLE_XXX')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KramerIT/Library/commit/08d7a3ee96d43a66e15a8e38150862b1e7b175ab

[COMMIT MESSAGE]:upload project||
=========================================================

+ //@PreAuthorize("APP_ROLE")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=44&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sambitc/FitnessTracker/commit/d802e9c9eae8bdfd63a12830f48b7ea069e30567

[COMMIT MESSAGE]:commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN') and hasPermission(#goal, 'createGoal')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sambitc/ch19/commit/832402b48748ad37abb1f16b3638dd73d9929d92

[COMMIT MESSAGE]:commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/ffb4bff1b13a3b10a926019b7df00881cbcbf323

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5226 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/4072d64570d0e0839f1922965976ba8967ea790c

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5202 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

-@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
-@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/ffb4bff1b13a3b10a926019b7df00881cbcbf323

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5226 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/4072d64570d0e0839f1922965976ba8967ea790c

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5202 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

-@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
-@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/1ec0867a5ebc0ca6fe214dba8a6551d0e478f820

[COMMIT MESSAGE]:[M6] - Add ACL||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5187 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+@PreAuthorize("@decisionAccess.permissionCompany(principal, #companyId)")
+ @PreAuthorize("permitAll")
+@PreAuthorize("@decisionAccess.permissionCompany(principal, #companyId)")
+@PreAuthorize("@decisionAccess.permissionCompany(principal, #companyId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
-//@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("@decisionAccess.permissionUser(principal, #userId)")
- //@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name)")
+ @PreAuthorize("permitAll")
-//@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name)")
+@PreAuthorize("@decisionAccess.permissionUser(principal, #userId)")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/c05540e531a26378b00950eb4338f5e2e51f3ed8

[COMMIT MESSAGE]:Fix remove reviews||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5179 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+//@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/6aa1d6ed7a2dfb46e7fb4aa9d64211c94e7ca35d

[COMMIT MESSAGE]:Fix auto login and change message for validation fields||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5173 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

- //@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name")
+ //@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/0ae2ea2d03835c140d41ae9e989fd6507b0c182c

[COMMIT MESSAGE]:[M5] Implements page for review details||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5164 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

- //@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId.toString() == authentication.name")
+ //@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/4072d64570d0e0839f1922965976ba8967ea790c

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5202 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

-@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
-@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/ffb4bff1b13a3b10a926019b7df00881cbcbf323

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5226 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/4072d64570d0e0839f1922965976ba8967ea790c

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5202 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

-@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
-@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/4072d64570d0e0839f1922965976ba8967ea790c

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5202 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

-@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
-@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/ffb4bff1b13a3b10a926019b7df00881cbcbf323

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5226 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/4072d64570d0e0839f1922965976ba8967ea790c

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5202 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

-@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
-@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/b5d9a965a8aee61de75fdbd23f499ac324e1ccaf

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface: fix sa…||…ve point and add tablet, refactor social network connect, fix menu after activate email

git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5247 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+ @PreAuthorize("permitAll")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=45&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/b5d9a965a8aee61de75fdbd23f499ac324e1ccaf

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface: fix sa…||…ve point and add tablet, refactor social network connect, fix menu after activate email

git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5247 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/1ec0867a5ebc0ca6fe214dba8a6551d0e478f820

[COMMIT MESSAGE]:[M6] - Add ACL||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5187 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

+@PreAuthorize("@decisionAccess.permissionCompany(principal, #companyId)")
+ @PreAuthorize("permitAll")
+@PreAuthorize("@decisionAccess.permissionCompany(principal, #companyId)")
+@PreAuthorize("@decisionAccess.permissionCompany(principal, #companyId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
-//@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("@decisionAccess.permissionUser(principal, #userId)")
- //@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name)")
+ @PreAuthorize("permitAll")
-//@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN') or (hasRole('ROLE_USER') and #userId == authentication.name)")
+@PreAuthorize("@decisionAccess.permissionUser(principal, #userId)")
+ @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/redwerk/likelabs/commit/4072d64570d0e0839f1922965976ba8967ea790c

[COMMIT MESSAGE]:M6 - Implement controllers for system administrator interface||git-svn-id: svn+ssh://redwerk.com/home/svn/likelabs@5202 5beb62dc-ff0c-0410-899a-bd8837d9df5a
=========================================================

-@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+@PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SYSTEM_ADMIN')")
-@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #userId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
+@PreAuthorize("@decisionAccess.permissionCompanyAdmin(principal, #adminId)")
- @PreAuthorize("permitAll")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wangwudi/Undone/commit/296afdf3209652904ab7eb3fac7508dbd1565e80

[COMMIT MESSAGE]:增加方法安全注解||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RomanXdd/TextStyle/commit/9fc9005d5c93cf54345e72732624bbd57f6095c4

[COMMIT MESSAGE]:WorkProject||
=========================================================

+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#resources)")
+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#presentations)")
+ @PreAuthorize("@security.owner(#folderID)")
+ @PreAuthorize("#folder.id==null or @security.owner(#folder.id)")
+ @PreAuthorize("@security.allowRead(#id)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#presentationId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideID) && (#item.id==null || @security.allowChangeHierarchy(#item.id))")
+ @PreAuthorize("#presentation.id==null || @security.owner(#presentation.id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID) and @security.owner(#resourceId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideId)")
+ @PreAuthorize("@security.authorized()")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourcesIds)")
+ @PreAuthorize("@security.owner(#resourceIDS)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.authorized()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RomanXdd/TextStyle/commit/9fc9005d5c93cf54345e72732624bbd57f6095c4

[COMMIT MESSAGE]:WorkProject||
=========================================================

+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#resources)")
+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#presentations)")
+ @PreAuthorize("@security.owner(#folderID)")
+ @PreAuthorize("#folder.id==null or @security.owner(#folder.id)")
+ @PreAuthorize("@security.allowRead(#id)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#presentationId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideID) && (#item.id==null || @security.allowChangeHierarchy(#item.id))")
+ @PreAuthorize("#presentation.id==null || @security.owner(#presentation.id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID) and @security.owner(#resourceId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideId)")
+ @PreAuthorize("@security.authorized()")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourcesIds)")
+ @PreAuthorize("@security.owner(#resourceIDS)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.authorized()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RomanXdd/TextStyle/commit/9fc9005d5c93cf54345e72732624bbd57f6095c4

[COMMIT MESSAGE]:WorkProject||
=========================================================

+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#resources)")
+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#presentations)")
+ @PreAuthorize("@security.owner(#folderID)")
+ @PreAuthorize("#folder.id==null or @security.owner(#folder.id)")
+ @PreAuthorize("@security.allowRead(#id)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#presentationId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideID) && (#item.id==null || @security.allowChangeHierarchy(#item.id))")
+ @PreAuthorize("#presentation.id==null || @security.owner(#presentation.id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID) and @security.owner(#resourceId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideId)")
+ @PreAuthorize("@security.authorized()")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourcesIds)")
+ @PreAuthorize("@security.owner(#resourceIDS)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.authorized()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RomanXdd/TextStyle/commit/9fc9005d5c93cf54345e72732624bbd57f6095c4

[COMMIT MESSAGE]:WorkProject||
=========================================================

+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#resources)")
+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#presentations)")
+ @PreAuthorize("@security.owner(#folderID)")
+ @PreAuthorize("#folder.id==null or @security.owner(#folder.id)")
+ @PreAuthorize("@security.allowRead(#id)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#presentationId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideID) && (#item.id==null || @security.allowChangeHierarchy(#item.id))")
+ @PreAuthorize("#presentation.id==null || @security.owner(#presentation.id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID) and @security.owner(#resourceId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideId)")
+ @PreAuthorize("@security.authorized()")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourcesIds)")
+ @PreAuthorize("@security.owner(#resourceIDS)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.authorized()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RomanXdd/TextStyle/commit/9fc9005d5c93cf54345e72732624bbd57f6095c4

[COMMIT MESSAGE]:WorkProject||
=========================================================

+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#resources)")
+ @PreAuthorize("@security.owner(#folderId) and @security.owner(#presentations)")
+ @PreAuthorize("@security.owner(#folderID)")
+ @PreAuthorize("#folder.id==null or @security.owner(#folder.id)")
+ @PreAuthorize("@security.allowRead(#id)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#presentationId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideID) && (#item.id==null || @security.allowChangeHierarchy(#item.id))")
+ @PreAuthorize("#presentation.id==null || @security.owner(#presentation.id)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID) and @security.owner(#resourceId)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#displayItemID)")
+ @PreAuthorize("@security.allowChangeHierarchy(#slideId)")
+ @PreAuthorize("@security.authorized()")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#id)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.owner(#resourcesIds)")
+ @PreAuthorize("@security.owner(#resourceIDS)")
+ @PreAuthorize("@security.owner(#resourceID)")
+ @PreAuthorize("@security.authorized()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jaroslavpsenicka/bordylek/commit/e44d034106ef478164f25ed6bc0a7066465c5c0a

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#s, 'OWNER') or hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#s, 'OWNER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'OWNER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=46&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jaroslavpsenicka/bordylek/commit/e44d034106ef478164f25ed6bc0a7066465c5c0a

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#s, 'OWNER') or hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#s, 'OWNER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'OWNER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('USER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vitakozlova/tp_project/commit/4057ed28b3302a70c9e5b03beeabd48c554ea245

[COMMIT MESSAGE]:getInventory||Vita
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_CLERK', 'ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_SELLER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/darrenhamilton/Woflow/commit/2b24059cf553e6bb33d291d6c01a35fa9b8ef455

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/darrenhamilton/Woflow/commit/2b24059cf553e6bb33d291d6c01a35fa9b8ef455

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=47&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mkjasinski/spring-security-acl/commit/a9e67e4c44f23f6867ada3e0ebaad535b17d0e3b

[COMMIT MESSAGE]:I have added ACL support||
=========================================================

+ @PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_USER')")
+ @PreAuthorize("hasPermission(#event, delete)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/imanuelchandra/rbac/commit/02acfc45e20df780ca0f014c1f1aa9c585ac0354

[COMMIT MESSAGE]:add rbac project||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdecourci/myaxon-gradle/commit/e8c075b789d7d159f4c8558111625dd8bf5e4500

[COMMIT MESSAGE]:tran||
=========================================================

- @PreAuthorize("hasRole('DRM_Sales')")
+ @PreAuthorize("hasRole('DRM_Legal')")
- @PreAuthorize("hasRole('DRM_Legal')")
+ @PreAuthorize("hasRole('DRM_Sales')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mdecourci/myaxon-gradle/commit/8fd29a449ccd12cd49a4f3e00756fc351e618be2

[COMMIT MESSAGE]:Security done||
=========================================================

+ @PreAuthorize("hasRole('DRM_Sales')")
+ @PreAuthorize("hasRole('DRM_Legal')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/miricy/mystore/commit/4d82cb837b1695987d04a191dcf35fc2f6b749d3

[COMMIT MESSAGE]:adding generic controller and service||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/miricy/mystore/commit/4d82cb837b1695987d04a191dcf35fc2f6b749d3

[COMMIT MESSAGE]:adding generic controller and service||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/miricy/mystore/commit/e0002f447e898ab0560cf408dd29be27c7899203

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dkojic/unity/commit/6ea533251ec00a997c9ec6aa111e5b11b1b5079f

[COMMIT MESSAGE]:-Bugfix:login page post action fixed when running on tomcat||-utf-8 char encoding filter added
=========================================================

+ @PreAuthorize("#blog.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tibetjungle/security/commit/e21ef98ff9285a33bb04e59613c0c49daad568b5

[COMMIT MESSAGE]:init repository||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#domainObject, admin)")
+ @PreAuthorize("hasPermission(#domainObject, admin)")
+ @PreAuthorize("hasPermission(#domainObject, 'delete') or hasPermission(#domainObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tibetjungle/security/commit/e21ef98ff9285a33bb04e59613c0c49daad568b5

[COMMIT MESSAGE]:init repository||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#contact, 'delete') or hasPermission(#contact, admin)")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#domainObject, admin)")
+ @PreAuthorize("hasPermission(#domainObject, admin)")
+ @PreAuthorize("hasPermission(#domainObject, 'delete') or hasPermission(#domainObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/b4c7fbef14364b65fd75e4b4d7e3e34ece95d373

[COMMIT MESSAGE]:Final project commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/ec1108cae64c810fc4643c36e9db3ef18b987229

[COMMIT MESSAGE]:Working Spring MVC, Spring Data||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('addRole')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=48&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/b4c7fbef14364b65fd75e4b4d7e3e34ece95d373

[COMMIT MESSAGE]:Final project commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/ec1108cae64c810fc4643c36e9db3ef18b987229

[COMMIT MESSAGE]:Working Spring MVC, Spring Data||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('addRole')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/b4c7fbef14364b65fd75e4b4d7e3e34ece95d373

[COMMIT MESSAGE]:Final project commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/ec1108cae64c810fc4643c36e9db3ef18b987229

[COMMIT MESSAGE]:Working Spring MVC, Spring Data||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('addRole')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/b4c7fbef14364b65fd75e4b4d7e3e34ece95d373

[COMMIT MESSAGE]:Final project commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/ec1108cae64c810fc4643c36e9db3ef18b987229

[COMMIT MESSAGE]:Working Spring MVC, Spring Data||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('addRole')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/b4c7fbef14364b65fd75e4b4d7e3e34ece95d373

[COMMIT MESSAGE]:Final project commit||
=========================================================

+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DaryaNikiforova/SpringProject/commit/ec1108cae64c810fc4643c36e9db3ef18b987229

[COMMIT MESSAGE]:Working Spring MVC, Spring Data||
=========================================================

+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('addRole')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+@PreAuthorize("denyAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("permitAll")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/c7f477b377df7097a679aaee2fc3c9c6b6bb47c8

[COMMIT MESSAGE]:updating several views||
=========================================================

- @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")
- @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/d62e0a78da2ffa80f7f6d1d40b7e5ae51ca9425f

[COMMIT MESSAGE]:updating code files from Application||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/a0502dbaaaa6730a51ac304ce4aa5a33e9d55e14

[COMMIT MESSAGE]:trying implement Multipart file upload||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/c7f477b377df7097a679aaee2fc3c9c6b6bb47c8

[COMMIT MESSAGE]:updating several views||
=========================================================

- @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")
- @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/d62e0a78da2ffa80f7f6d1d40b7e5ae51ca9425f

[COMMIT MESSAGE]:updating code files from Application||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/a0502dbaaaa6730a51ac304ce4aa5a33e9d55e14

[COMMIT MESSAGE]:trying implement Multipart file upload||
=========================================================

- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/a0827a56c579e84418cb319527bb2d799c8e8b1d

[COMMIT MESSAGE]:updating generic controller and service classes||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/4d82cb837b1695987d04a191dcf35fc2f6b749d3

[COMMIT MESSAGE]:adding generic controller and service||
=========================================================

+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'cadastra_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'altera_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'remove_'+#this.this.name)")
+ @PreAuthorize("hasPermission(#user, 'listagem_'+#this.this.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/c9d9e885c32e4760d203cfe9fed672602d0adac2

[COMMIT MESSAGE]:adding preAuthorize conditional to views||
=========================================================

- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/klebermo/mystore/commit/99a225caf6fbc924947c6b0b6a6a1f9538eaf1ed

[COMMIT MESSAGE]:updating MainController and ClienteController||
=========================================================

- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("hasRole('admin')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sadasidha/identity-web/commit/0ccf9cf39a7a7b69dcca87b27b11837838134a5e

[COMMIT MESSAGE]:added admin option view||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ruinra/yodde_spring/commit/d9ac98350f7c17c8abff3f53784032b190a65cf2

[COMMIT MESSAGE]:first||
=========================================================

+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vilasmaciel/rideon-server/commit/f83d511d034c45b93b285f8451d3073e0d8832dc

[COMMIT MESSAGE]:Import source code||
=========================================================

+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #event.id)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId) or @userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMessageOwner(authentication.name, #messageId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #group.id)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId) or @groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMember(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMessageOwner(authentication.name, #groupId, #messageId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userDto.username)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #request.target.username) or "
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=49&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/vilasmaciel/rideon-server/commit/f83d511d034c45b93b285f8451d3073e0d8832dc

[COMMIT MESSAGE]:Import source code||
=========================================================

+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #event.id)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId) or @userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMessageOwner(authentication.name, #messageId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #group.id)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId) or @groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMember(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMessageOwner(authentication.name, #groupId, #messageId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userDto.username)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #request.target.username) or "
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vilasmaciel/rideon-server/commit/f83d511d034c45b93b285f8451d3073e0d8832dc

[COMMIT MESSAGE]:Import source code||
=========================================================

+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #event.id)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId) or @userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMessageOwner(authentication.name, #messageId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #group.id)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId) or @groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMember(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMessageOwner(authentication.name, #groupId, #messageId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userDto.username)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #request.target.username) or "
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vilasmaciel/rideon-server/commit/f83d511d034c45b93b285f8451d3073e0d8832dc

[COMMIT MESSAGE]:Import source code||
=========================================================

+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #event.id)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId) or @userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMessageOwner(authentication.name, #messageId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #group.id)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId) or @groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMember(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMessageOwner(authentication.name, #groupId, #messageId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userDto.username)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #request.target.username) or "
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vilasmaciel/rideon-server/commit/f83d511d034c45b93b285f8451d3073e0d8832dc

[COMMIT MESSAGE]:Import source code||
=========================================================

+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #event.id)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId) or @userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMessageOwner(authentication.name, #messageId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #group.id)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId) or @groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMember(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMessageOwner(authentication.name, #groupId, #messageId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userDto.username)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #request.target.username) or "
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vilasmaciel/rideon-server/commit/f83d511d034c45b93b285f8451d3073e0d8832dc

[COMMIT MESSAGE]:Import source code||
=========================================================

+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #event.id)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId) or @userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isOwner(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isAllowed(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMember(authentication.name, #eventId)")
+ @PreAuthorize("@eventPermisions.isMessageOwner(authentication.name, #messageId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #group.id)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId) or @groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isOwner(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMember(authentication.name, #groupId)")
+ @PreAuthorize("@groupPermisions.isMessageOwner(authentication.name, #groupId, #messageId)")
+ @PreAuthorize("@groupPermisions.isAllowed(authentication.name, #groupId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isAllowed(authentication.name, #practiceId)")
+ @PreAuthorize("@practicePermisions.isOwner(authentication.name, #practiceId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userDto.username)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isFriendOf(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #request.target.username) or "
+ @PreAuthorize("@userPermisions.isAllowed(authentication.name, #userId)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=50&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=51&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/be861a004d174ba708849cf2cd8c748134354cdc

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/ca48edc79297fdf49ecde42a364994d2d12420c8

[COMMIT MESSAGE]:error checking||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/c7b885d783bfe2da371fa23caa88801ab09abb21

[COMMIT MESSAGE]:added functionalities : My Auctions, My Bids||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/5507c15d81c758c49a3d7c1f2339a32a9e03b442

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/be861a004d174ba708849cf2cd8c748134354cdc

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/ca48edc79297fdf49ecde42a364994d2d12420c8

[COMMIT MESSAGE]:error checking||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/c7b885d783bfe2da371fa23caa88801ab09abb21

[COMMIT MESSAGE]:added functionalities : My Auctions, My Bids||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/5507c15d81c758c49a3d7c1f2339a32a9e03b442

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/be861a004d174ba708849cf2cd8c748134354cdc

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/ca48edc79297fdf49ecde42a364994d2d12420c8

[COMMIT MESSAGE]:error checking||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/5507c15d81c758c49a3d7c1f2339a32a9e03b442

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/be861a004d174ba708849cf2cd8c748134354cdc

[COMMIT MESSAGE]:First commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/ca48edc79297fdf49ecde42a364994d2d12420c8

[COMMIT MESSAGE]:error checking||
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/c7b885d783bfe2da371fa23caa88801ab09abb21

[COMMIT MESSAGE]:added functionalities : My Auctions, My Bids||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/cekiboy/WebAuction/commit/5507c15d81c758c49a3d7c1f2339a32a9e03b442

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/execom-eu/ECLunchOrder/commit/fe5522a282125b1d55d23bfce26c2108f1857167

[COMMIT MESSAGE]:Model corrections, supplier admin GUI elements.||
=========================================================

+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/execom-eu/ECLunchOrder/commit/fe5522a282125b1d55d23bfce26c2108f1857167

[COMMIT MESSAGE]:Model corrections, supplier admin GUI elements.||
=========================================================

+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/execom-eu/ECLunchOrder/commit/fe5522a282125b1d55d23bfce26c2108f1857167

[COMMIT MESSAGE]:Model corrections, supplier admin GUI elements.||
=========================================================

+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
+ @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")
- @PreAuthorize("hasRole('SUPER_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/eb142be081da327b6367c788bb646c7030d20227

[COMMIT MESSAGE]:optimoi tietokantalatauksia||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/47c778053346f765d94bb89861caf18ceb06a3eb

[COMMIT MESSAGE]:Lisätty metodit oppiaineen vuosiluokkakokonaisuuden ja vuosiluokan si…||…sällön päivittämiseen
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")
+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/e940bded85f59013446cc522cd84e100ddf27f59

[COMMIT MESSAGE]:lisää oppiaineen tavoitteiden vuosiluokkaistaminen||keskeneräinen ensimmäinen versio.
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/f00519e01fbed89e63b86527d55bdf7efc39c73a

[COMMIT MESSAGE]:Käytä OppimaaraLaajaDto:ta jotta oppimääriinkin populoituisi kaikki p…||…erusteista löytyvä data
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet-ylops/commit/dd9b3b13b6fff4c1dfebcddbad826dce6930991b

[COMMIT MESSAGE]:OppiaineControlleriin getAll-operaatio||
=========================================================

+ @PreAuthorize("hasPermission(#opsId, 'opetussuunnitelma', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/amertum/spring-security-play2/commit/8fc8da4fe568f87c7e808682f29a830b227264e3

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ANONYMOUS')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/823ad02d44f49627769d5a29229269386bf666fe

[COMMIT MESSAGE]:Added user database||
=========================================================

+ @PreAuthorize("hasAnyRole('INVENTORY_MANAGER','PRODUCTION_MANAGER','BUSINESS_MANAGER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=52&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/a517236d4315106a07709bfe5d28df0b1ff123f6

[COMMIT MESSAGE]:Bugfix||
=========================================================

- @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('BUSINESS_MANAGER','PRODUCTION_MANAGER')")
- @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('BUSINESS_MANAGER','PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/9471ccb3140641f3e3305ced0321330c9e8e2573

[COMMIT MESSAGE]:Added products||
=========================================================

- @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('INVENTORY_MANAGER','PRODUCTION_MANAGER')")
- @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('INVENTORY_MANAGER','PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/58094bdcc277ae393f11ba6083d9f14a862debd8

[COMMIT MESSAGE]:Added production goal and order list||
=========================================================

+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/9471ccb3140641f3e3305ced0321330c9e8e2573

[COMMIT MESSAGE]:Added products||
=========================================================

- @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('INVENTORY_MANAGER','PRODUCTION_MANAGER')")
- @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('INVENTORY_MANAGER','PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/4baa0987b8c859aad59c4e3d3ed8cd4d23e27a44

[COMMIT MESSAGE]:Finished complex parts, added creating products||
=========================================================

+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/7a5cd79d594f3d6046e0a8e2a8339d551f3c9f63

[COMMIT MESSAGE]:Added create and retrieve complex parts||
=========================================================

+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/fc0c4aaaed9d06c6530cbbe4f0545917d66dcf69

[COMMIT MESSAGE]:Added simple parts listing||
=========================================================

+ @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/464fd29b4fae09e58f1ed6ae19db5a10e5434d85

[COMMIT MESSAGE]:Added simple part functionalities||
=========================================================

+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/58094bdcc277ae393f11ba6083d9f14a862debd8

[COMMIT MESSAGE]:Added production goal and order list||
=========================================================

+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/4baa0987b8c859aad59c4e3d3ed8cd4d23e27a44

[COMMIT MESSAGE]:Finished complex parts, added creating products||
=========================================================

+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/7a5cd79d594f3d6046e0a8e2a8339d551f3c9f63

[COMMIT MESSAGE]:Added create and retrieve complex parts||
=========================================================

+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/464fd29b4fae09e58f1ed6ae19db5a10e5434d85

[COMMIT MESSAGE]:Added simple part functionalities||
=========================================================

+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/9471ccb3140641f3e3305ced0321330c9e8e2573

[COMMIT MESSAGE]:Added products||
=========================================================

- @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('INVENTORY_MANAGER','PRODUCTION_MANAGER')")
- @PreAuthorize("hasRole('INVENTORY_MANAGER') or hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasAnyRole('INVENTORY_MANAGER','PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/4baa0987b8c859aad59c4e3d3ed8cd4d23e27a44

[COMMIT MESSAGE]:Finished complex parts, added creating products||
=========================================================

+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")
+ @PreAuthorize("hasRole('PRODUCTION_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mcronald92/InventoryManager/commit/58094bdcc277ae393f11ba6083d9f14a862debd8

[COMMIT MESSAGE]:Added production goal and order list||
=========================================================

+ @PreAuthorize("hasRole('INVENTORY_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")
+ @PreAuthorize("hasRole('BUSINESS_MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sambitc/SpringBlog/commit/59f718ae819ef253f4f95084f14bce52c6eb8005

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yannicl/rdv/commit/a8b5c72a1e97f2b5408f996680e46f6120c5ecba

[COMMIT MESSAGE]:Adding cancelling of event||Adding resource security
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("@eventSM.mayCancelEvent(#eventId)")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("@eventSM.hasAccessToPerson(#personId)")
+ @PreAuthorize("@eventSM.hasAccessToPerson(#personId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yannicl/rdv/commit/a8b5c72a1e97f2b5408f996680e46f6120c5ecba

[COMMIT MESSAGE]:Adding cancelling of event||Adding resource security
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("@eventSM.mayCancelEvent(#eventId)")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("@eventSM.hasAccessToPerson(#personId)")
+ @PreAuthorize("@eventSM.hasAccessToPerson(#personId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yannicl/rdv/commit/40d122888312132deec4918ca7051cd8e7fb2c92

[COMMIT MESSAGE]:Correct security flaw||
=========================================================

- @PreAuthorize("denyAll")
- @PreAuthorize("@eventSM.mayCancelEvent(#eventId)")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("@eventSM.mayCancelEvent(#eventId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yannicl/rdv/commit/a8b5c72a1e97f2b5408f996680e46f6120c5ecba

[COMMIT MESSAGE]:Adding cancelling of event||Adding resource security
=========================================================

+ @PreAuthorize("denyAll")
+ @PreAuthorize("@eventSM.mayCancelEvent(#eventId)")
+ @PreAuthorize("denyAll")
+ @PreAuthorize("@eventSM.hasAccessToPerson(#personId)")
+ @PreAuthorize("@eventSM.hasAccessToPerson(#personId)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=53&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/syakuis/Spring-security-restful-authentication-and-Angularjs/commit/f531d561d2533306e94eb89be3e98401e9c74480

[COMMIT MESSAGE]:잘못된 소스 정보 변경||
=========================================================

+ @PreAuthorize("#userVO.user_name == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/syakuis/Spring-security-restful-authentication-and-Angularjs/commit/f531d561d2533306e94eb89be3e98401e9c74480

[COMMIT MESSAGE]:잘못된 소스 정보 변경||
=========================================================

+ @PreAuthorize("#userVO.user_name == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CalabashFox/hemu.tic/commit/fcbf367b6ebbfbafc129bdb138b85cf0d11b45d1

[COMMIT MESSAGE]:added freemarker template engine, added basic settings||
=========================================================

- @PreAuthorize("hasAnyRole('ADMIN_SETTINGS','ADMIN_GLOBAL_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hasRole('ADMIN_USER')")
+ @PreAuthorize("hasRole('ADMIN_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CalabashFox/hemu.tic/commit/fcbf367b6ebbfbafc129bdb138b85cf0d11b45d1

[COMMIT MESSAGE]:added freemarker template engine, added basic settings||
=========================================================

- @PreAuthorize("hasAnyRole('ADMIN_SETTINGS','ADMIN_GLOBAL_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hasRole('ADMIN_USER')")
+ @PreAuthorize("hasRole('ADMIN_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CalabashFox/hemu.tic/commit/fcbf367b6ebbfbafc129bdb138b85cf0d11b45d1

[COMMIT MESSAGE]:added freemarker template engine, added basic settings||
=========================================================

- @PreAuthorize("hasAnyRole('ADMIN_SETTINGS','ADMIN_GLOBAL_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hasRole('ADMIN_USER')")
+ @PreAuthorize("hasRole('ADMIN_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/CalabashFox/hemu.tic/commit/fcbf367b6ebbfbafc129bdb138b85cf0d11b45d1

[COMMIT MESSAGE]:added freemarker template engine, added basic settings||
=========================================================

- @PreAuthorize("hasAnyRole('ADMIN_SETTINGS','ADMIN_GLOBAL_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hayRole('ADMIN_SETTINGS')")
+ @PreAuthorize("hasRole('ADMIN_USER')")
+ @PreAuthorize("hasRole('ADMIN_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/JustusAdam/swt-festivalmanager/commit/b095f8e3b5926a010b924326faf31828bc2ac0e6

[COMMIT MESSAGE]:new directory structure, copied catering prototype as skeleton for fi…||…nal product
=========================================================

+@PreAuthorize("hasRole('ROLE_CATERER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=54&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/anr-ru/base.services/commit/9986508af594070be3741705bbddc6d44493c808

[COMMIT MESSAGE]:Repaired a test with ACL security and added a new ACL Manager to||simplify ACL operations.
=========================================================

+ @PreAuthorize("hasPermission(#xx,'write')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anr-ru/base.services/commit/9986508af594070be3741705bbddc6d44493c808

[COMMIT MESSAGE]:Repaired a test with ACL security and added a new ACL Manager to||simplify ACL operations.
=========================================================

+ @PreAuthorize("hasPermission(#xx,'write')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=55&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/anr-ru/base.services/commit/eba343df3faf8dd7704ee35fb5b3b61a387784e1

[COMMIT MESSAGE]:Added an additional domain-level security checking which delegates the||access to a context domain object. It can be used in conjuntion with a
standard acl hasPermission(...) checking.
=========================================================

- @PreAuthorize("hasPermission(#xx,'write')")
+ @PreAuthorize("hasPermission(#xx,'write') or hasPermission(#xx,'access_write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anr-ru/base.services/commit/9986508af594070be3741705bbddc6d44493c808

[COMMIT MESSAGE]:Repaired a test with ACL security and added a new ACL Manager to||simplify ACL operations.
=========================================================

+ @PreAuthorize("hasPermission(#xx,'write')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/39b3b14a539e1051219ac6aaef8bccb6cb23249d

[COMMIT MESSAGE]:TOTO kann jetzt mit Geld gewettet werden , tabelle richitg , checkboxen||
=========================================================

-@PreAuthorize("hasRole('ROLE_CUSTOMER_BLOCKABLE')")
+@PreAuthorize("hasRole('ROLE_CUSTOMER_BLOCKABLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/8a2e4d74c87c5e8960a4155ce6fcd1332cf0df96

[COMMIT MESSAGE]:Anonymer Nuter erstellt, Controller angelegt, methoden geschrieben,||es fehlen noch kleinigkeiten
=========================================================

+@PreAuthorize("hasRole('ROLE_ANONYM')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/39b3b14a539e1051219ac6aaef8bccb6cb23249d

[COMMIT MESSAGE]:TOTO kann jetzt mit Geld gewettet werden , tabelle richitg , checkboxen||
=========================================================

-@PreAuthorize("hasRole('ROLE_CUSTOMER_BLOCKABLE')")
+@PreAuthorize("hasRole('ROLE_CUSTOMER_BLOCKABLE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/6d1a9c485977c95d97247449d9e22b122681322c

[COMMIT MESSAGE]:Aufsplittung der Rollen im Code fertig, templates fehlen noch.||
=========================================================

+@PreAuthorize("hasRole('ROLE_CUSTOMER_BLOCKABLE')")
+@PreAuthorize("hasRole('ROLE_CUSTOMER')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/99dc17b712d5f03694264a8a259ae5d0e74452fd

[COMMIT MESSAGE]:neue Rollen nun auch im Header||
=========================================================

+ @PreAuthorize("isAuthenticated()")
- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/6d1a9c485977c95d97247449d9e22b122681322c

[COMMIT MESSAGE]:Aufsplittung der Rollen im Code fertig, templates fehlen noch.||
=========================================================

+@PreAuthorize("hasRole('ROLE_CUSTOMER_BLOCKABLE')")
+@PreAuthorize("hasRole('ROLE_CUSTOMER')")
- @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/f5b0372bdacc2381be9a9425f03ffdd6b7b74a88

[COMMIT MESSAGE]:RIESEN UPDATE: komplette Fehler-/Erfolgsboxen eingefügt. Diverse Bugfixe||jquery und bootstrap mit bootsbox eingebunden. wird nur für die
Fehlerbox verwendet
=========================================================

-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/055b1645941539522549180ba34c39f93038a1cb

[COMMIT MESSAGE]:Controller System ein weniger überarbeitet. (db Ordner löschen!)||Es werden nun einige Rollenchecks ausgeführt, zudem habe ich einigen
Code neu geordnet und optimiert.
Ist noch nicht fertig, habe aber einige //TODO's hinterlassen. ;)
=========================================================

+@PreAuthorize("hasRole('ROLE_BOSS')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/51391c6b2e5c3814d1f24f1711331d87d4e82418

[COMMIT MESSAGE]:Toto Ziehung anzeige + Liste + Controller + Constant.ROLE_TOTOLIST +||Header + Website
=========================================================

+@PreAuthorize("hasRole('ROLE_TOTOLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/055b1645941539522549180ba34c39f93038a1cb

[COMMIT MESSAGE]:Controller System ein weniger überarbeitet. (db Ordner löschen!)||Es werden nun einige Rollenchecks ausgeführt, zudem habe ich einigen
Code neu geordnet und optimiert.
Ist noch nicht fertig, habe aber einige //TODO's hinterlassen. ;)
=========================================================

+@PreAuthorize("hasRole('ROLE_BOSS')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/51391c6b2e5c3814d1f24f1711331d87d4e82418

[COMMIT MESSAGE]:Toto Ziehung anzeige + Liste + Controller + Constant.ROLE_TOTOLIST +||Header + Website
=========================================================

+@PreAuthorize("hasRole('ROLE_TOTOLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/0a8df71f8a2629a8c76c62c1d8d214d96087239b

[COMMIT MESSAGE]:Merge branch 'master' of git@github.com:SWT14W18/MDG-2000.git||
=========================================================

+@PreAuthorize("hasRole('ROLE_TOTOLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SWT14W18/MDG-2000/commit/51391c6b2e5c3814d1f24f1711331d87d4e82418

[COMMIT MESSAGE]:Toto Ziehung anzeige + Liste + Controller + Constant.ROLE_TOTOLIST +||Header + Website
=========================================================

+@PreAuthorize("hasRole('ROLE_TOTOLIST')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakaarl/wepa/commit/66f0e3ae25bf2eb9c7f3b12b2865de9ae5e21a2a

[COMMIT MESSAGE]:Still can't act on reports||
=========================================================

- @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")
- @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakaarl/wepa/commit/8ed879040f5af3036a28b68093784484b3341c3e

[COMMIT MESSAGE]:Roles meant to be Reports, cleaned Controller||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakaarl/wepa/commit/74ed5a2464954453f4947e48046a9e1f77a78faa

[COMMIT MESSAGE]:AnimalPictureController cleanup.||- formatted, organized imports
- added PreAuthorize-annotations where needed
- moved redirect String to Routes, use placeholder instead of gluing
  the picture id with String concatenation
=========================================================

+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")
+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakaarl/wepa/commit/c974c6143ea05c3a7c091bb8fdfb1cc71aabcee8

[COMMIT MESSAGE]:Adding some method security to controllers.||* added method security
* removed auth from services
* moved uploaded file validation from service to controller
* fixed some tests

Sorry for the huge big commit. Changes quickly became horribly
tangles and chopping them to several commits would have been
quite an operation.
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("authenticated")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakaarl/wepa/commit/c974c6143ea05c3a7c091bb8fdfb1cc71aabcee8

[COMMIT MESSAGE]:Adding some method security to controllers.||* added method security
* removed auth from services
* moved uploaded file validation from service to controller
* fixed some tests

Sorry for the huge big commit. Changes quickly became horribly
tangles and chopping them to several commits would have been
quite an operation.
=========================================================

+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("authenticated")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=56&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/huytan/java-blog-aggregator/commit/149a73c75af2ab79852986f12ef2e968d58ea182

[COMMIT MESSAGE]:final||
=========================================================

- @PreAuthorize("#blog.user.name == authencation.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("#blog.user.name == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/huytan/java-blog-aggregator/commit/97303e38140fef60be720fd28dca6e94ed347980

[COMMIT MESSAGE]:conmit 3||
=========================================================

+ @PreAuthorize("#blog.user.name == authencation.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ruixz/java-note-management/commit/0e1de9252f4933c385518144b5640f3875814dc0

[COMMIT MESSAGE]:reload updated version||
=========================================================

+ @PreAuthorize("#note.user.name == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ruixz/java-note-management/commit/0e1de9252f4933c385518144b5640f3875814dc0

[COMMIT MESSAGE]:reload updated version||
=========================================================

+ @PreAuthorize("#note.user.name == authentication.name or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_SUPER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tonykopetto/minimalspringmvcsample/commit/80a4e38c5f1afe4830ae0cd75bc887c85575d9e8

[COMMIT MESSAGE]:initial cut||
=========================================================

+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/b14700311ae6894dd099b4e62e43dbf1ed3141a9

[COMMIT MESSAGE]:Task #376343||add find open department
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/49475254124c2e08b527af7467330746d25cd2c8

[COMMIT MESSAGE]:Task #368760||1. In model add ProjectEntity(sample data)
2. Add repository for project(crud + changeStatus)
3. Add service for projcet(cru + changeStatus)
4. Add Controller for project(cru + changeStatus)
=========================================================

+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/b107d9af2b6ee0d80c4061d8869d95311dab977d

[COMMIT MESSAGE]:Task #368760||Add openCompany servicers fr user
add parentstatus in detaildto
=========================================================

+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/49475254124c2e08b527af7467330746d25cd2c8

[COMMIT MESSAGE]:Task #368760||1. In model add ProjectEntity(sample data)
2. Add repository for project(crud + changeStatus)
3. Add service for projcet(cru + changeStatus)
4. Add Controller for project(cru + changeStatus)
=========================================================

+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/0fd9ba42caeca69913da290f942f3525e7670e5c

[COMMIT MESSAGE]:Rollback with oauth autentification||
=========================================================

- //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
- //@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/66e0638dadb05068027042d1e22bf3e3756a2296

[COMMIT MESSAGE]:Task #381387 Create controller for returning snapshots for given user…||… id.
=========================================================

+ //@PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/09a140025b09df2d0ce28b39f42b7ac2c58a68b7

[COMMIT MESSAGE]:Task #375593||1.add Entity
2.add repository
3.add Service
3.1. Crud
3.2. Save file to /{clientid}/{dateformat(yyyyMMdd_HH_mm_ss)}.jpg
4.add Controller
=========================================================

+ //@PreAuthorize("isAuthenticated()")
+ //@PreAuthorize("isAuthenticated()")
-// @PreAuthorize("isAuthenticated()")
-// @PreAuthorize("isAuthenticated()")
-// @PreAuthorize("isAuthenticated()")
- // @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/49475254124c2e08b527af7467330746d25cd2c8

[COMMIT MESSAGE]:Task #368760||1. In model add ProjectEntity(sample data)
2. Add repository for project(crud + changeStatus)
3. Add service for projcet(cru + changeStatus)
4. Add Controller for project(cru + changeStatus)
=========================================================

+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")
+// @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/aeede023758341ade8550405092e2e2f8211f5d6

[COMMIT MESSAGE]:Task #362643||delete authorized in POST user controller
add Role when create
=========================================================

- @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/a614432157ef41922f4fd7e9a277d38a30d57ba7

[COMMIT MESSAGE]:Task #356487 and Task #356482||add check for existing login by loginName
Add authorization for all requests in user controller
=========================================================

+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=57&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/snesterenkov/desktopviewer-back/commit/a614432157ef41922f4fd7e9a277d38a30d57ba7

[COMMIT MESSAGE]:Task #356487 and Task #356482||add check for existing login by loginName
Add authorization for all requests in user controller
=========================================================

+ @PreAuthorize("isAuthenticated()")
+@PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lanyuancom/lanyuan-2.0/commit/40c28c7b677ab9400e9f6d3a902873ef97a2402a

[COMMIT MESSAGE]:No commit message||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/lanyuancom/lanyuan-2.0/commit/40c28c7b677ab9400e9f6d3a902873ef97a2402a

[COMMIT MESSAGE]:No commit message||
=========================================================

+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ * @PreAuthorize("hasRole('ROLE_SUPER')")
+ @PreAuthorize：该注解用来确定一个方法是否应该被执行。该注解后面跟着的是一个表达式，如果表达式的值为真，则该方法会被执行。如 @PreAuthorize("hasRole('ROLE_USER')")就说明只有当前用户具有角色 ROLE_USER的时候才会执行。

=========================================================
[CODE-CHANGE-URL]:https://github.com/idamai/wonderlust/commit/fb7eddf4525800eb9472e09722d9c3801120fb19

[COMMIT MESSAGE]:Merge branch 'master' of https://github.com/idamai/wonderlust.git||Conflicts:
	src/main/webapp/WEB-INF/views/dashboard.jsp
	src/main/webapp/resources/js/app.js
=========================================================

-@PreAuthorize("hasRole('ROLE_USER')")
+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/idamai/wonderlust/commit/b9ccdfe5ab6d013975a08c75b8e2ac888fe06a41

[COMMIT MESSAGE]:Added home controller||
=========================================================

+@PreAuthorize("hasRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/652299af975e2de27ed94f9ce2d18e66172449dc

[COMMIT MESSAGE]:raaz commit with many changes in purchase and approve module||
=========================================================

+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/0d364ed53d98fb03983ddae82329cfb4b494f19c

[COMMIT MESSAGE]:commit with changes on acl||
=========================================================

-/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','update')")
+/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','view')")
+/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','delete')")
+/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','delete')")
+/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','delete')")
+/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','delete')")
+/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','update')")
+/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','view')")
+/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','delete')")
+/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/* 257: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
-/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','view')")
+/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','view')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','view')")
+/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/0d364ed53d98fb03983ddae82329cfb4b494f19c

[COMMIT MESSAGE]:commit with changes on acl||
=========================================================

-/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','update')")
+/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','view')")
+/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','delete')")
+/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','delete')")
+/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','delete')")
+/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','delete')")
+/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','update')")
+/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','view')")
+/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','delete')")
+/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/* 257: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
-/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','view')")
+/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','view')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','view')")
+/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/0d364ed53d98fb03983ddae82329cfb4b494f19c

[COMMIT MESSAGE]:commit with changes on acl||
=========================================================

-/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','update')")
+/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','view')")
+/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','delete')")
+/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','delete')")
+/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','delete')")
+/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','delete')")
+/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','update')")
+/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','view')")
+/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','delete')")
+/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/* 257: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
-/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','view')")
+/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','view')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','view')")
+/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/0d364ed53d98fb03983ddae82329cfb4b494f19c

[COMMIT MESSAGE]:commit with changes on acl||
=========================================================

-/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','update')")
+/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','view')")
+/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','delete')")
+/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','delete')")
+/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','delete')")
+/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','delete')")
+/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','update')")
+/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','view')")
+/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','delete')")
+/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/* 257: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
-/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','view')")
+/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','view')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','view')")
+/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/0d364ed53d98fb03983ddae82329cfb4b494f19c

[COMMIT MESSAGE]:commit with changes on acl||
=========================================================

-/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','update')")
+/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','view')")
+/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','delete')")
+/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','delete')")
+/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','delete')")
+/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','delete')")
+/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','update')")
+/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','view')")
+/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','delete')")
+/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/* 257: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
-/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','view')")
+/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','view')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','view')")
+/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/652299af975e2de27ed94f9ce2d18e66172449dc

[COMMIT MESSAGE]:raaz commit with many changes in purchase and approve module||
=========================================================

+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/0d364ed53d98fb03983ddae82329cfb4b494f19c

[COMMIT MESSAGE]:commit with changes on acl||
=========================================================

-/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 34: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','add')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','update')")
+/* 105: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','view')")
+/* 135: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('account','delete')")
+/* 154: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 36: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 54: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 109: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 152: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','delete')")
+/* 178: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','delete')")
+/* 198: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','delete')")
+/* 218: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','update')")
+/* 238: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','update')")
+/* 248: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','update')")
+/* 258: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 46: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','add')")
+/* 66: */ @PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 92: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','update')")
+/* 121: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','view')")
+/* 146: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaseorder','delete')")
+/* 176: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 79: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
-/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
-/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
-/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/*@PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
-/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
+@PreAuthorize("hasAnyRole('ROLE_USER')")
+/* 257: @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
-/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','view')")
+/* 42: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','view')")
+/* 53: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','view')")
+/* 65: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('item','add')")
+/* 75: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemcategory','add')")
+/* 87: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")
-/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('itemunit','add')")
+/* 98: */ @PreAuthorize("hasAnyRole('ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/bcbe92d5e1dc5e0e06eecefaa693b81a1b28f74e

[COMMIT MESSAGE]:commit with changes on purchase menu||
=========================================================

+/* 79: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 100: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','add')")
+/* 161: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 194: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','update')")
+/* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','view')")
+/* 257: */ @PreAuthorize("hasAnyRole('ROLE_USER') AND hasPermission('purchaserequisition','delete')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=58&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/SumitBisht/InventoryMgt/commit/145ce9b1250edcbd38446506eedfb7b407b2e113

[COMMIT MESSAGE]:Commit after adding files||
=========================================================

+ /* 222: */ @PreAuthorize("hasAnyRole('ROLE_USER') ")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/7cf02a5425d166ea49533dfa84f92ff9e48c456a

[COMMIT MESSAGE]:Added messages API functionality.||SQL importable files are included, but unsure which is correct so needs to be corrected.
=========================================================

+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'member') or hasPermission(#task, 'manager')")
+ @PreAuthorize("hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("(hasPermission(#message, 'write') or hasRole('ROLE_MODERATOR')) and (hasPermission(#task, 'member') or hasPermission(#task, 'manager'))")
+ @PreAuthorize("hasPermission(#message, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/87f8d12b29cb2b6b8da911d00a7784f53220fae3

[COMMIT MESSAGE]:added core competencies||
=========================================================

+ @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/79d80fe44b6c957877df0f8930b4b0e7927fa8d0

[COMMIT MESSAGE]:in the middle of something||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/8bb78f0c9c4c628341a3c36d6eb2e72aeb4f1926

[COMMIT MESSAGE]:added user delete functionality back in||
=========================================================

-// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
-// @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/afa584f3d2da8eb6dc1cd836e86356a6daa087c5

[COMMIT MESSAGE]:Started implementation of changing user roles via api. Resource and||service interface are complete, still need service implementation/doa.  

Build is functional but nothing will happen if you try to use the
updateUserRole functionality.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') and hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/aecb83a82e9d75c838505240f30c2c14eff42c6d

[COMMIT MESSAGE]:Fixed Full updates (@PUT)||-full update can be used to set values to null
=========================================================

- @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")
+// @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/879ad876b3089cb2eac1dda1d6253ad3d9ccff9f

[COMMIT MESSAGE]:Added password setting functionality, requires logged in a the user or||as an admin.
=========================================================

+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

+ @PreAuthorize("hasPermission(#bar, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasPermission(#user, 'DELETE')")
+ @PreAuthorize("hasPermission(#user, 'DELETE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/11a1a9f1630c3a98ba65c770dc310cbb64310daa

[COMMIT MESSAGE]:Version for playing||
=========================================================

- @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/87f8d12b29cb2b6b8da911d00a7784f53220fae3

[COMMIT MESSAGE]:added core competencies||
=========================================================

+ @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/79d80fe44b6c957877df0f8930b4b0e7927fa8d0

[COMMIT MESSAGE]:in the middle of something||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/e7d09beea00dc880dfdb38664b287be68e4f038a

[COMMIT MESSAGE]:Added Tasks!||Known bugs: 
-Something is preventing the user TaskManagerDemo from adding himself to
a group as a member, but the manager of the group may add him..
-We are recieving a "granted authority required" error when attempting
to use /byManager /byMembership on houssuggest. Local builds do not have
this error.  Can be temporarily fixed by ressetting the mysql tables.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#task, 'MANAGER') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasPermission(#group, 'manager') "

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/f8427bfb7228d930abd40085c49651a7a32cb9be

[COMMIT MESSAGE]:Primary Changes:||-Implemented the "Group" data type and its acl permissions handling.
-Created the aclController bean to be used by service level
implementations
-Updated sql structure

Please look at the wiki for detailed information on how to use the API
=========================================================

- @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/b2a79a404309371f7abe58c99fd27f4e88555825

[COMMIT MESSAGE]:Lots of changes,and additions, will write a complete commit message when||its working.  In summary though I attempted to add a group object and
its permissions
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#group, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#group, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/41f414b6876b88d607638f4c4ef5b033f3b98370

[COMMIT MESSAGE]:-Hours are now more or less fully functional. Have not tested||partial/full update but everything else seems to be in order.
-special use case "approve" is to be used to changed approved status,
also automaticall changes field pending to false.
-Updated Mysql tables included
=========================================================

+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#hour, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/4b97595444977f2120581797c601465c259a85ec

[COMMIT MESSAGE]:Mostly done with comments. Available at "/comments" Performs basic CRUD.||Pending some testing and client-integration changes.

Please verify the SQL file is correct before merging, the size seems to have almost doubled. Maybe too much being exported.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'write') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#comment, 'delete') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/d9892bfece1f53ad56fa883822d346bb59f458ee

[COMMIT MESSAGE]:started ..||
=========================================================

+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasPermission(#class, 'MANAGER')"
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/65aca698dabfea769530a6a5fd11cf637a4de967

[COMMIT MESSAGE]:Fixed sql in passwordReset function and a typo in PostService.java||
=========================================================

- @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermission(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/f55729eaa82bbad2582ca7fb2b07bdac6d69e919

[COMMIT MESSAGE]:Changes:||Users
-to recieve the user object of the current user make a get request to
/user/myUser
-to recieve the collection of all user objects make get request to /user
-changed permission requirement of get all users so that anyone can make
this request and will actually return all users.

Post
-Bugfix: Users are now allowed to create a new post in any groups they
are manager of.  Previously was mistakenly restricted to only users.
=========================================================

- @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasPermission(#group, 'member') or hasPermisssion(#group, 'manager')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/a23b627af4bfbf33f3bcee5bc2078a4110f344bd

[COMMIT MESSAGE]:NON FUCTIONAL Post||This is only for referencing the post resource structure.  Will build
and all other services are fully functional.
=========================================================

- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'write') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'delete') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
- @PreAuthorize("hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
- @PreAuthorize("hasRole('ROLE_USER')")
- @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/71460406b4b4f4874106ecf1e6364feca635a93e

[COMMIT MESSAGE]:Multiple fixes to Task on the resource and service layers.||Post is implemented by is inactive for this commit.  I'll activate and
and test and then push it later today.
=========================================================

+ @PreAuthorize("hasPermission(#group, 'member')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_ROOT')")
+ @PreAuthorize("hasPermission(#post, 'MANAGER') or hasRole('ROLE_ADMIN')")
+ @PreAuthorize("hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR')")
+ @PreAuthorize("hasRole('ROLE_USER')")
+ @PreAuthorize("hasPermission(#user, 'WRITE') or hasRole('ROLE_MODERATOR') or hasPermission(#post, 'MANAGER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=59&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/7b06fb43e1fbbb86a9d9a6f101966212e05af9b8

[COMMIT MESSAGE]:Worked on Cores stuff.||
=========================================================

- @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ADMIN')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/CommunityHealthWorkersBackend/commit/87f8d12b29cb2b6b8da911d00a7784f53220fae3

[COMMIT MESSAGE]:added core competencies||
=========================================================

+ @PreAuthorize("hasRole(#location, 'MANAGER')")
+ @PreAuthorize("hasPermission(#location, 'MANAGER') or hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kumlien/school/commit/d542eadb04839c32abd634d14f2eb91054abee82

[COMMIT MESSAGE]:Lägg till lite mer security||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kumlien/school/commit/c71e956b1dc265ce98ff17f9143ba30f478fc298

[COMMIT MESSAGE]:Add stuff for security||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/d91f0b044c3adeaf93496e7b5d6847e96c32da17

[COMMIT MESSAGE]:refactored some code, added logging||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/09ae56fffe272d43d0500d173b7e2f63843203b6

[COMMIT MESSAGE]:whole bunch of CSS and other fixes||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/60075506139924caa9c0b2c3ff772f1c067a7f98

[COMMIT MESSAGE]:changes to Product and Attachment - add content type||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/694eebd715c4044d35863b6b73c3c13855dead63

[COMMIT MESSAGE]:worked on AJAX login||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/d91f0b044c3adeaf93496e7b5d6847e96c32da17

[COMMIT MESSAGE]:refactored some code, added logging||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/ff585999bf237515594841bbadf77036dca8776e

[COMMIT MESSAGE]:refactored some User code||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/09ae56fffe272d43d0500d173b7e2f63843203b6

[COMMIT MESSAGE]:whole bunch of CSS and other fixes||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/60075506139924caa9c0b2c3ff772f1c067a7f98

[COMMIT MESSAGE]:changes to Product and Attachment - add content type||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/694eebd715c4044d35863b6b73c3c13855dead63

[COMMIT MESSAGE]:worked on AJAX login||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/d91f0b044c3adeaf93496e7b5d6847e96c32da17

[COMMIT MESSAGE]:refactored some code, added logging||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/09ae56fffe272d43d0500d173b7e2f63843203b6

[COMMIT MESSAGE]:whole bunch of CSS and other fixes||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/60075506139924caa9c0b2c3ff772f1c067a7f98

[COMMIT MESSAGE]:changes to Product and Attachment - add content type||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/evilself/wikiABS/commit/694eebd715c4044d35863b6b73c3c13855dead63

[COMMIT MESSAGE]:worked on AJAX login||
=========================================================

+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")
+ @PreAuthorize("hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jmisur/javaagent/commit/2e7692adc1a85f520b4c7229ecff849ff4a6b9ef

[COMMIT MESSAGE]:spring security poc||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=60&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/jmisur/javaagent/commit/2e7692adc1a85f520b4c7229ecff849ff4a6b9ef

[COMMIT MESSAGE]:spring security poc||
=========================================================

+ @PreAuthorize("hasRole('ROLE_USER')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=61&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=62&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/GaaraZhu/SpringMVCDemo/commit/f31f38811bbf5237abe892adfa6cd56a8c29b828

[COMMIT MESSAGE]:Regular updates||
=========================================================

+ @PreAuthorize("hasRole('role_internal')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Milan26/music-library/commit/2dda9e52ee6c907063bc0adb80bae00066466b81

[COMMIT MESSAGE]:services are now secured with spring Pre-Post annotations||
=========================================================

+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("authentication.principal.username.equals(#userDto.email) or hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('VIEW')")
+ @PreAuthorize("hasAuthority('VIEW')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=63&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Milan26/music-library/commit/2dda9e52ee6c907063bc0adb80bae00066466b81

[COMMIT MESSAGE]:services are now secured with spring Pre-Post annotations||
=========================================================

+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("authentication.principal.username.equals(#userDto.email) or hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('VIEW')")
+ @PreAuthorize("hasAuthority('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Milan26/music-library/commit/2dda9e52ee6c907063bc0adb80bae00066466b81

[COMMIT MESSAGE]:services are now secured with spring Pre-Post annotations||
=========================================================

+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("authentication.principal.username.equals(#userDto.email) or hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('VIEW')")
+ @PreAuthorize("hasAuthority('VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Milan26/music-library/commit/2dda9e52ee6c907063bc0adb80bae00066466b81

[COMMIT MESSAGE]:services are now secured with spring Pre-Post annotations||
=========================================================

+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('CREATE')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('DELETE')")
+ @PreAuthorize("authentication.principal.username.equals(#userDto.email) or hasAuthority('EDIT')")
+ @PreAuthorize("hasAuthority('VIEW')")
+ @PreAuthorize("hasAuthority('VIEW')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=64&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PreAuthorize("hasRole('ROLE_SPITTER') and #amount > 10")
+ @PreAuthorize("#input.length() <= 3")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=65&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/22c5a19e87cdc3fd3541c6dac2a1d8de5362b088

[COMMIT MESSAGE]:Added implementation for basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_ROLES)")
- @PreAuthorize("permitAll()")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ENABLED)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_ACCOUNTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHORITY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_AUTHORITIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BLOBS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CATEGORIES)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBCOMMENTS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBFLAGS)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
- @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DBRATES)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK_WITH_ACCOUNT_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_BOOKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_CAMPS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_DONATIONS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_MODERATE_CONTENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_READ_MONKS)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myanmar-Hub/MyDhammaBook/commit/29422c3bccda905f830c11f5741004d0225a735e

[COMMIT MESSAGE]:Added basic services||
=========================================================

+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_ROLE_BY_ID)")
+ @PreAuthorize("permitAll()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_ACCOUNT_BY_ROLE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated()")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_ACCOUNT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_AUTHOR)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_AUTHOR_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BLOB)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BLOB_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CATEGORY)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CATEGORY_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBCOMMENT)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBCOMMENT_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBFLAG)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBFLAG_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DBRATE)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DBRATE_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_BOOK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_BOOK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_CAMP)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_CAMP_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_DONATION)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_DONATION_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_CREATE_NEW_MONK)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_UPDATE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_DELETE_MONK_BY_ID)")
+ @PreAuthorize("isAuthenticated() and hasRole(T(com.mydhammabook.core.entity.Authority).AUTHORITY_REMOVE_MONK_BY_ID)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&o=desc&p=66&q=%40PreAuthorize%28%22&s=indexed&type=Code&utf8=%E2%9C%93

