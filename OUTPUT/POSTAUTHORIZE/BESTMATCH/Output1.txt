
=========================================================
[CODE-CHANGE-URL]:https://github.com/vovanlau/Samples/commit/1a2ef0746015e1f52b07381413292f45960d7848

[COMMIT MESSAGE]:spring security||
=========================================================

+/* @PostAuthorize("returnObject?.summary == authentication.name")*/

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/getting-started-springsecurity-31/commit/dc812de3bac6d915bf49eb38d0e99d5adf19228e

[COMMIT MESSAGE]:initial||
=========================================================

+/* @PostAuthorize("returnObject?.summary == authentication.name")*/

=========================================================
[CODE-CHANGE-URL]:https://github.com/luj1985/dionysus/commit/b293fce0e552fb24f39188834b037d11f237ff6a

[COMMIT MESSAGE]:little fix||
=========================================================

+ @PostAuthorize("returnObject.user==principal or hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/9f75ccac2b567c7ce2762344de6fd7d51f96f6a0

[COMMIT MESSAGE]:PERI-28 leverage Ambari's metric system||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/9f75ccac2b567c7ce2762344de6fd7d51f96f6a0

[COMMIT MESSAGE]:PERI-28 leverage Ambari's metric system||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=2&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liuxianqiang/spring-in-action/commit/8ae3382f7c0731059af55ad41cf4542e37a12ec8

[COMMIT MESSAGE]:init spring-in-action||all sample code from http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/filber/JavaRepo/commit/ecdfbee7e04a1a803d5772fdd7b095da1a681743

[COMMIT MESSAGE]:spitter||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zliumichael/SpingInAction_SampleCode/commit/76656d40604b1fefd4c87fc34a75304a474f4799

[COMMIT MESSAGE]:add sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Popo-lth/SpringInActionCode/commit/5dce9c9112cb7957471d9627667e245169d591e3

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swcho/ex_spring_old/commit/b6752ee9029baf3e8f9c794c11ab3f609ac15dde

[COMMIT MESSAGE]:Spring in Action example||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code-examples/sping-in-action-book-third-edition-code-examples/commit/74bf3899498ab67859ead50be838915bb41e9e43

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rooneyp1976/SiA3/commit/f327c169c8ab54b29a4fb7267f0afe00636ffc0c

[COMMIT MESSAGE]:sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=3&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/hajimezhao/code-dojo/commit/b6d0116fa88d774fb6076e79d7c597feff5cf138

[COMMIT MESSAGE]:add sample source codes of Spring in Action - 3 edition||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HuberyChen/spring-pratice-project/commit/8fa0d610e125444ba9d60ce709d3eccb9ae0ab03

[COMMIT MESSAGE]:123||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nazar-art/SpringInAction/commit/f365c09374613f658939706b8d89ebfe2f1452a6

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/a7296fef4af9b0b3d59d7b8601422f862e9e59d2

[COMMIT MESSAGE]:PERI-28 history added for scaling events||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/salutmonde/spitter-web/commit/6bb22d68e76b73c41dfad74bc0494677b90f17fd

[COMMIT MESSAGE]:first commit of all file||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=4&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mornhuang/example/commit/e91f741a11ab4a888526d4215be3a820c2a4804b

[COMMIT MESSAGE]:增加Spring In Action 第三版的代码||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oradev/sping-in-action-code-examples/commit/8507798cd70b1b8f254aa801cb29062747a2cb8f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sikm31/yuri3/commit/e0766118f5a802446221d89bbaf4f81a58a24d9d

[COMMIT MESSAGE]:spring1||springproject
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymlai87416/SpringInActionSourceCode/commit/49a6436acf379863c0307cc9fa47c2dab172a771

[COMMIT MESSAGE]:download from http://www.manning.com/walls4||http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/icefireunicorn/springinaction3rd-demo/commit/3661beb56d7253c83d6faa6c3b9b108cf890229b

[COMMIT MESSAGE]:add||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=5&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/gavin-feng/SpringInActionStudy/commit/25dc18bdce6efce993ec3fcf73a681eab5c614e7

[COMMIT MESSAGE]:base src from manning website||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/heichenhardt/SpringInAction/commit/6bbee367285990831921d0599a5415620ea8b698

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymssdeng/winter/commit/7eaad2baff3df401d1708691f60ac4ceff3ada17

[COMMIT MESSAGE]:Spring In Action 3 source code||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/44cdcd35eb6622ebfec781d1562a1e32cdc55abe

[COMMIT MESSAGE]:l2 cache, tx service, fixes||+l2 cache ehcache
+transactional service
+split order page
+security for group order read
+nice icons
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or @groupOrderSecurity.isMemberOrGroupOwner(returnObject)")
- @PostAuthorize("returnObject.owner.name == principal.username")
+ @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Sheparzo/sia3-code/commit/08a2a0f48f8c615d6dda1305a7aecfd2fb13507e

[COMMIT MESSAGE]:Initial commit of book code provided by publisher at http://manning.c…||…om/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HenryXi/Spring_in_action/commit/19f36a42da5dcdd67d18ee8dc11f7967e8619901

[COMMIT MESSAGE]:commit all files||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jonatanvicente/spring/commit/9c2a5eb0d0bb3ee7100b80a1fdfe4063326b35c0

[COMMIT MESSAGE]:Creacion del proyecto||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=6&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/GGkBand/spring/commit/e8d27407fb6f2c99139b687c69aab8d10cddeb92

[COMMIT MESSAGE]:init spring||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/393f54ed1c94c177d6381cf1b91962f303b82707

[COMMIT MESSAGE]:Spring In Action created.||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dineshbabu/spring3-trial/commit/d847648cc947b5c4725b7c02010c6033891088f1

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hyperaeon/SpringLearn/commit/2957b94461db34d6dfc96412f3c049c93f2cabfb

[COMMIT MESSAGE]:init commit||
=========================================================

+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snicki0201/myapp/commit/9a290b5f191ac5a18eef5c3a6234d94b15642a58

[COMMIT MESSAGE]:Experiment for custom UserDetailsService and UserDetails.||
=========================================================

+// @PostAuthorize("isAuthenticated() and returnObject?.id == principal.username")
+// @PostAuthorize("isAuthenticated() and returnObject?.id == principal.acid") // using null safe operator.
+// @PostAuthorize("isAuthenticated() and returnObject != null ? returnObject.id == principal.acid : true")
+ @PostAuthorize("returnObject != null ? returnObject.id == principal.acid : true") // causes error in the case of an unauthenticated.
+// @PostAuthorize("#returnObject != null ? returnObject.id == principal.acid : true") // # causes error.

=========================================================
[CODE-CHANGE-URL]:https://github.com/yaroslav-nikolaiko/LingvoMovie/commit/60ffc8a1d1276a83e56d8037de4579b95da0de0b

[COMMIT MESSAGE]:security try||
=========================================================

+//@PostAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=7&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/urko-vi/spring/commit/e3f68e0754a9cd509088c8f45852ecfaffc51bef

[COMMIT MESSAGE]:Initial||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ASSISTANT_DIRECTOR') or returnObject.investigador == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stondofitz/thegains/commit/290c1058483e2cf3fba93dd61f4f6a12faaf18c5

[COMMIT MESSAGE]:Messing with security crap||
=========================================================

+ @PostAuthorize("returnObject.getUsername() == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/89eb9c2c7d116a594005efed06c5baf1c1607881

[COMMIT MESSAGE]:Initial Checkin||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/9f75ccac2b567c7ce2762344de6fd7d51f96f6a0

[COMMIT MESSAGE]:PERI-28 leverage Ambari's metric system||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/finance/commit/4b3740d1b749b3388168452db86413a0faaf6656

[COMMIT MESSAGE]:Start of presentation||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/finance/commit/d49c9cf701d1c814d939b0e04b02c2ed7df6210b

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/akuepfer/coursera-mobile-cloud-computing-with-android/commit/718095fbb5839655a2f59c1787bc2256ca58b8f4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.doctorId == principal.id")
+ @PostAuthorize("returnObject.doctorId == authentication.id")
+ @PostAuthorize("returnObject.Id == principal.id || returnObject.doctorId == principal.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=8&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/blacknight1982/IDCloud/commit/4ac8bf263d21796da23edfdfbcb86e298c5c75d5

[COMMIT MESSAGE]:Items: 10, 6, 0, 5, 9, 2||0. Better UI, clean the project - following
0.1 Clean up the CSS file - following
1. Website published to http://idcloud.iego.net/
1.1 Synchronize Database - script on the dropbox
1.2 Check out the code on laptop - has problem
2. Social integration - fb integrated, twitter needs to be checked
4. Image upload through nicEditor is 3rd party Web - done with self
developed image upload service - almost done
5. User sign up email sending  - Not Started
5.1 User sign up anti-robot protection - Not Started
6. Publish file upload - Not Started
7. Spring REST/oDATA - half way
9. Server side Cache enabling - Not Started
10. Apache access control - Ready to Start

New: REST service, image upload service, CORS filter, Add inspiration
authorizations

Signed-off-by: John Liu <blacknight1982@gmail.com>
=========================================================

- //@PostAuthorize("returnObject?.author == authentication.name")
+ @PostAuthorize("returnObject?.authLevel < 2 or returnObject?.author == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blacknight1982/IDCloud/commit/54db7fc2769c4c4e3f12ee16f30153250e753673

[COMMIT MESSAGE]:Items: 0, 2, 5, 9||0. Better UI, clean the project - following
1. Publish the website - done! http://idcloud.iego.net/
1.1 Synchronize Database - on the way
2. Social integration - fb integrated, twitter needs to be checked
3. iFrame/embed problem - solved! cancel the sliding panel
4. Image upload through nicEditor is 3rd party Web - done with self
developed image upload service 
5. User sign up email sending
6.1 User sign up anti-robot protection
7. Spring REST/oDATA - half way
8. Enable scrolling framework only for inspiration table page, not
other page - done
9. Cache enabling

New: REST service, image upload service, CORS filter

Signed-off-by: John Liu <blacknight1982@gmail.com>
=========================================================

+ //@PostAuthorize("returnObject?.author == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/f4e071e6f6a07f69c2636e5dd95180eeed9406d3

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fredondo/javacro2014-springsecurity3/commit/d34c1d694334e087358662c5fbe237cff301dae6

[COMMIT MESSAGE]:secure method invocation with SpEL expressions in annotations||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ASSISTANT_DIRECTOR') or returnObject.investigador == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleFile') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=9&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/0f37cab76f3f62eebe77b20de8af69d6bcc5e66a

[COMMIT MESSAGE]:Updated to add delete application functionality||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/225c73186a5a37f2d8dce9d9d25503266575dc05

[COMMIT MESSAGE]:Move to hardcoded logic Permissions. Add properties based authentication||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/0e6fe4c82b9ea1fe3f1281b78fb70626e1e64bba

[COMMIT MESSAGE]:Refactor so spring configuration can be changed via properties||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=10&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&p=11&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/thepresbyterian/topchef/commit/2ef860afaf9d4a218818400ef057a8b4f3b5f0ea

[COMMIT MESSAGE]:Publishing to GitHub||
=========================================================

+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("isAuthenticated()")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') and @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=12&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liuxianqiang/spring-in-action/commit/8ae3382f7c0731059af55ad41cf4542e37a12ec8

[COMMIT MESSAGE]:init spring-in-action||all sample code from http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/loki2302/spring-security-experiment/commit/58cf3461cd2bf038b80d296d879347144594b23c

[COMMIT MESSAGE]:Converted to JUnit tests||
=========================================================

- @PostAuthorize("returnObject != 5")
+ @PostAuthorize("returnObject != 5")

=========================================================
[CODE-CHANGE-URL]:https://github.com/miraclezyk/StudyPlan/commit/4ac3360faeaa6bdea0997c3f9cc2b51aefa49204

[COMMIT MESSAGE]:code1||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADVISOR') or hasRole('ROLE_ADMIN') or (returnObject.id == principal.plan.id)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/filber/JavaRepo/commit/ecdfbee7e04a1a803d5772fdd7b095da1a681743

[COMMIT MESSAGE]:spitter||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zliumichael/SpingInAction_SampleCode/commit/76656d40604b1fefd4c87fc34a75304a474f4799

[COMMIT MESSAGE]:add sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=13&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mycena/Security-3.2/commit/567c8027b416acd36a1af44a247105822a8a790d

[COMMIT MESSAGE]:Teapatea with security 3.2||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adr-wisniewski/inz-sd/commit/7645256ec2b4128ee271228b8c32d9c1767cb936

[COMMIT MESSAGE]:implementacja rc1||
=========================================================

+ @PostAuthorize("isOwner(returnObject)")
+ @PostAuthorize("isOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/abhishek333/ted-young/commit/903aef6134b523727a04ee6fd83cc361a8bc2ce3

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Popo-lth/SpringInActionCode/commit/5dce9c9112cb7957471d9627667e245169d591e3

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/96ad55ca93c151b476e68381cec74e2c5b2e4222

[COMMIT MESSAGE]:Latest changes||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/89eb9c2c7d116a594005efed06c5baf1c1607881

[COMMIT MESSAGE]:Initial Checkin||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swcho/ex_spring_old/commit/b6752ee9029baf3e8f9c794c11ab3f609ac15dde

[COMMIT MESSAGE]:Spring in Action example||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SergiySobolev/SecurityTest/commit/d064bd5ce29ee6b8e0793613bb4f0e1fb1f0b1be

[COMMIT MESSAGE]:base acl configuration||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/terrestris/shogun2/commit/df4b07c6525a0c40eba4e0043af4e201d08e88e4

[COMMIT MESSAGE]:Add basic security annotations to the CRUD service||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=14&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/spring-test-example/commit/5a559b434112aaffdaf55a1f33b2b9799a109e10

[COMMIT MESSAGE]:Further defined security in the repository.||Added parameters switch to gradle build.
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or ( returnObject != null && (isAuthenticated() and returnObject.id == principal.id) )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/19acef700f7233b47809d58bda2ef5c26730c569

[COMMIT MESSAGE]:korjaa tiedotteiden oikeustarkastelu||
=========================================================

+ @PostAuthorize("returnObject == null or returnObject.julkinen or isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code-examples/sping-in-action-book-third-edition-code-examples/commit/74bf3899498ab67859ead50be838915bb41e9e43

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/a98e5e8a174e8441e6cbcfb0f065a86e506c4783

[COMMIT MESSAGE]:Added source param in order to acquire all questions from an (random)||ilias test
=========================================================

+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/05c7f8133c73739e438889c9f9d701e88929982f

[COMMIT MESSAGE]:Simplified getQuestion and getRandomQuestion for IlliasConnector and||made them more dynamic.
=========================================================

- @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/1ed82afa2bb2684c0e4dcd8fbf4aec9836e13582

[COMMIT MESSAGE]:Added methods for random test question requests||
=========================================================

+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/80093b27c1b429d7da6796ee628f8fb3db522c57

[COMMIT MESSAGE]:Added new security rules and configuration||
=========================================================

+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepTree','read'))")
+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rooneyp1976/SiA3/commit/f327c169c8ab54b29a4fb7267f0afe00636ffc0c

[COMMIT MESSAGE]:sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hajimezhao/code-dojo/commit/b6d0116fa88d774fb6076e79d7c597feff5cf138

[COMMIT MESSAGE]:add sample source codes of Spring in Action - 3 edition||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=15&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/prafulmantale/MobileDevelopment/commit/fceb5dfe6211c3261da55a6b56c345cfb17930b9

[COMMIT MESSAGE]:dhpn||
=========================================================

+ @PostAuthorize("returnObject.emailId == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HuberyChen/spring-pratice-project/commit/8fa0d610e125444ba9d60ce709d3eccb9ae0ab03

[COMMIT MESSAGE]:123||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nazar-art/SpringInAction/commit/f365c09374613f658939706b8d89ebfe2f1452a6

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danielberecz/petclinic/commit/fcc12e07ebb11225be19a3860f380cebfc4b7529

[COMMIT MESSAGE]:Introduced Hystrix||
=========================================================

- @PostAuthorize("returnObject.owner.domainUser.username == principal.username or hasRole('ROLE_VET')")
+ @PostAuthorize("principal.username == returnObject.owner.domainUser.username or hasRole('ROLE_VET')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleFile') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=16&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/salutmonde/spitter-web/commit/6bb22d68e76b73c41dfad74bc0494677b90f17fd

[COMMIT MESSAGE]:first commit of all file||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mornhuang/example/commit/e91f741a11ab4a888526d4215be3a820c2a4804b

[COMMIT MESSAGE]:增加Spring In Action 第三版的代码||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/jaxenter-showcase/commit/c3762b96b6a70be248550806e0361745328d084a

[COMMIT MESSAGE]:Step 3: Add security||
=========================================================

+ @PostAuthorize("returnObject.firstName == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oradev/sping-in-action-code-examples/commit/8507798cd70b1b8f254aa801cb29062747a2cb8f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sikm31/yuri3/commit/e0766118f5a802446221d89bbaf4f81a58a24d9d

[COMMIT MESSAGE]:spring1||springproject
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=17&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymlai87416/SpringInActionSourceCode/commit/49a6436acf379863c0307cc9fa47c2dab172a771

[COMMIT MESSAGE]:download from http://www.manning.com/walls4||http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/briancody/roscode-dtp/commit/704dc1b6af65f5804f60326cfd90801a741ef081

[COMMIT MESSAGE]:Security!||
=========================================================

+// @PostAuthorize("returnObejct.id == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wdiskowski/spring/commit/6f0ace4f44624fb8505c32396314708064145476

[COMMIT MESSAGE]:ACL eingebaut||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/225c73186a5a37f2d8dce9d9d25503266575dc05

[COMMIT MESSAGE]:Move to hardcoded logic Permissions. Add properties based authentication||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/peterarsentev/Spring-Security-Acl-MongoDB/commit/18b8fc5fb4300c9fee927488a7bfe8c5c5ed5c8a

[COMMIT MESSAGE]:added the login page, client page, create client dialog||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/icefireunicorn/springinaction3rd-demo/commit/3661beb56d7253c83d6faa6c3b9b108cf890229b

[COMMIT MESSAGE]:add||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gavin-feng/SpringInActionStudy/commit/25dc18bdce6efce993ec3fcf73a681eab5c614e7

[COMMIT MESSAGE]:base src from manning website||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=18&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/heichenhardt/SpringInAction/commit/6bbee367285990831921d0599a5415620ea8b698

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymssdeng/winter/commit/7eaad2baff3df401d1708691f60ac4ceff3ada17

[COMMIT MESSAGE]:Spring In Action 3 source code||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-0-to-4.0/commit/dda960c125c4ef2cfb34f5bb8c9942ffc1b8b46f

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pisarski/SpringSampleApp/commit/bef28bf5448f70a1a191e961e3a0366b3c428ef1

[COMMIT MESSAGE]:Add rights to view and logic||
=========================================================

+ @PostAuthorize("hasAuthority('EDIT_ALL_SPITTLES') or (hasAuthority('EDIT_OWN_SPITTLE') and principal.user.id == returnObject.createUser.id)")
+ @PostAuthorize("principal.user.id != returnObject.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pisarski/SpringSampleApp/commit/2dc10397f211cdfd768405b4b702455e2aa2478e

[COMMIT MESSAGE]:Add security tests||
=========================================================

- @PostAuthorize("principal.user.id != returnObject.id")
+ @PostAuthorize("hasAuthority('USER_MANAGEMENT') and principal.user.id != returnObject.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pisarski/SpringSampleApp/commit/bef28bf5448f70a1a191e961e3a0366b3c428ef1

[COMMIT MESSAGE]:Add rights to view and logic||
=========================================================

+ @PostAuthorize("hasAuthority('EDIT_ALL_SPITTLES') or (hasAuthority('EDIT_OWN_SPITTLE') and principal.user.id == returnObject.createUser.id)")
+ @PostAuthorize("principal.user.id != returnObject.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=19&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/bc498a2f04214d86154da94bdca635574a669253

[COMMIT MESSAGE]:CLOUD-659 create network abstraction||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Sheparzo/sia3-code/commit/08a2a0f48f8c615d6dda1305a7aecfd2fb13507e

[COMMIT MESSAGE]:Initial commit of book code provided by publisher at http://manning.c…||…om/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/ea83b3a39405a316a6d577a1cddea4976a62cd43

[COMMIT MESSAGE]:Refactor: give the User, Admin and authentication methods a seperated||controller.
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/349a0edc4a3878af394324a43e8d915d2e880bff

[COMMIT MESSAGE]:Initial work on Client Library. This includes work to ensure security…||… is in place on the server side. Lots of work sourrounding inheritance and security.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/cb0e06531b5e2ffe425a010b449d947af9c89160

[COMMIT MESSAGE]:Change getEnvironments to go through Repository so it can be filtered…||… by security. Environment list now only shows 'visible' environments
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/225c73186a5a37f2d8dce9d9d25503266575dc05

[COMMIT MESSAGE]:Move to hardcoded logic Permissions. Add properties based authentication||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/0e6fe4c82b9ea1fe3f1281b78fb70626e1e64bba

[COMMIT MESSAGE]:Refactor so spring configuration can be changed via properties||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HenryXi/Spring_in_action/commit/19f36a42da5dcdd67d18ee8dc11f7967e8619901

[COMMIT MESSAGE]:commit all files||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marroqui69/lucychang2/commit/89eed03deb52813d1b70a6a5018b9dd249dea406

[COMMIT MESSAGE]:init||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=20&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/danillogontijo/geddireto/commit/f370a7f0979a0f9b3fd27ac2a90a6391b2407208

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("(returnObject == null) or (returnObject.granted)")
+ /*@PostAuthorize("(returnObject == null) or (returnObject.granted)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danillogontijo/geddireto/commit/205db7780a257e0ebe88c40b1255742283ee9398

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("(returnObject == null) or (returnObject.carteira.idCarteira == principal.idCarteira)")
+ //@PostAuthorize("(returnObject == null) or (returnObject.carteira.idCarteira == principal.idCarteira)")
+ @PostAuthorize("(returnObject == null) or (returnObject.granted)")
+ @PostAuthorize("(returnObject == null) or (returnObject.granted)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danillogontijo/geddireto/commit/79b832137f6c67b1c1778eabe52ec0dce3a5ec25

[COMMIT MESSAGE]:No commit message||
=========================================================

+ //@PostAuthorize("returnObject.idCarteira == principal.idCarteira")
+ //@PostAuthorize("returnObject.idCarteira == principal.idCarteira")
+ @PostAuthorize("(returnObject == null) or (returnObject.carteira.idCarteira == principal.idCarteira)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-state-securing-restful-apis/commit/d76e602641224b980bfec36dfbb5618605831da7

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id && (!#oauth2.oAuth || #oauth2.hasScope('write'))")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-state-securing-restful-apis/commit/d76e602641224b980bfec36dfbb5618605831da7

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id && (!#oauth2.oAuth || #oauth2.hasScope('write'))")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-modern/commit/9f232ef5a67121af039000d238d6cef4c7a3aa09

[COMMIT MESSAGE]:Use Spring Security||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/e87243385c9e7b8a75b6e28217f921a01f930d94

[COMMIT MESSAGE]:fixes, refactoring||+escape errorMessage string for js
+handle user creation in service
+show all orders for admin at home page
+don't send ajax save on load of page (first model change event)
+don't show buttons on submitted and not user orders
+forbid group deletion if there are some orders in it
=========================================================

- @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/44cdcd35eb6622ebfec781d1562a1e32cdc55abe

[COMMIT MESSAGE]:l2 cache, tx service, fixes||+l2 cache ehcache
+transactional service
+split order page
+security for group order read
+nice icons
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or @groupOrderSecurity.isMemberOrGroupOwner(returnObject)")
- @PostAuthorize("returnObject.owner.name == principal.username")
+ @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/548fb0e5f64ad68ccfeb074b8f52b93ac6fb820d

[COMMIT MESSAGE]:v2 version with good UI & edit dishes ability||+spring security update
+rest-webmvc
+light jsp templating lib
+remove useless tomcat plugin config
+readme
+html design
+update of ORM model (with many2many with extra field)
=========================================================

+ @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("returnObject.owner.name == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jonatanvicente/spring/commit/9c2a5eb0d0bb3ee7100b80a1fdfe4063326b35c0

[COMMIT MESSAGE]:Creacion del proyecto||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/GGkBand/spring/commit/e8d27407fb6f2c99139b687c69aab8d10cddeb92

[COMMIT MESSAGE]:init spring||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Michielst/lucychangREST/commit/1c4a9ca6d8b938bfd44c369b34d519f75f971f5b

[COMMIT MESSAGE]:changes||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-cjug/commit/866f1c5ebeb7119f772cf89752b93a01bd2e8a59

[COMMIT MESSAGE]:Initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=21&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/393f54ed1c94c177d6381cf1b91962f303b82707

[COMMIT MESSAGE]:Spring In Action created.||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/8b4d84b0a37ea4c3a4f0fe907d94d172718ef92b

[COMMIT MESSAGE]:add basic CourseGroup functions||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/8495c5fbba77cf5ed41f890c4150b57d8b94be3c

[COMMIT MESSAGE]:sql and security work||
=========================================================

- // @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/8b519558fbeb002b69a931eb895468e7c6608480

[COMMIT MESSAGE]:section 7 work||
=========================================================

+ // @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/63c361e1a7069e519831506c0ad16a8fd2023134

[COMMIT MESSAGE]:- Securing the service layer||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/cb0661ea4f3a2417988c34a5ee34682b13370e62

[COMMIT MESSAGE]:- Securing the service layer||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/0a5699a5a276777dd160237c3a7c78279b489d0d

[COMMIT MESSAGE]:- Securing of Services||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/f4e071e6f6a07f69c2636e5dd95180eeed9406d3

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/a7364071dee8e59297502dbd871970403e008913

[COMMIT MESSAGE]:Use the new access method.||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/a7364071dee8e59297502dbd871970403e008913

[COMMIT MESSAGE]:Use the new access method.||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=22&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dineshbabu/spring3-trial/commit/d847648cc947b5c4725b7c02010c6033891088f1

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/keslerm/reloader-tracker/commit/f284c93a90bf554a9f7b8b8adf280c8294bf5846

[COMMIT MESSAGE]:Adding security and domain model changes to components||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') || returnObject == null || returnObject.userId == principal.id")
+ @PostAuthorize("hasRole('ROLE_ADMIN') || returnObject == null || returnObject.userId == principal.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=23&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/chinab/owaconnector/commit/181abd50d82930899def064d2cdb60a9427abead

[COMMIT MESSAGE]:authentication.name instead of principal||
=========================================================

- @PostAuthorize("returnObject.owner.username == principal")
+ // @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("returnObject.owner.username == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chinab/owaconnector/commit/89daa79b0de77dbe357e047620e93512d7260d1e

[COMMIT MESSAGE]:moved find* methods to java class so they can be modified. Secured th…||…em using spring security.
=========================================================

+ @PostAuthorize("returnObject.owner.username == principal")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/b3926395de09afc1bb2b4ebcc0e516e727939413

[COMMIT MESSAGE]:Add update course function||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/8b3bc7ad66f8a092f336c6f55dabf77d703c4d02

[COMMIT MESSAGE]:Add clean course functions||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/754c500156e368ecd052157737b04f7598524a8c

[COMMIT MESSAGE]:add required login for getAllCoursesUser||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/be4b206ad5bda4329be81a470a9074df17a89153

[COMMIT MESSAGE]:Add permission to json getAllCourse||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=24&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/901b2d29e797a7e1c33ae3c1a5d7fd8ab575a733

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and returnObject.domain == principal.domain and returnObject.account = principal.account)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chotchki/pgGallery/commit/fbc9ff4ab41f2e7aa0e2684b3871d1f86d162e84

[COMMIT MESSAGE]:locked down the security backend||
=========================================================

+ @PostAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN') or returnObject.isPublic() == true")
+ @PostAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN') or returnObject.isPublic() == true")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/d891d17cfa248220c2a38f99b36758b9c91ffb03

[COMMIT MESSAGE]:RAVE-341 patch to add security features to WidgetComments||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1207613 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/johndoe90/ProductReviews/commit/78b4d33f8c3c9dc57d8e018b2414c4a76c82a37c

[COMMIT MESSAGE]:First Commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleFile') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=25&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/00341f1eeaf499805d1ffd3165c867db2535032a

[COMMIT MESSAGE]:check read permissions on messages||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RigasGrigoropoulos/spring-security-acl-cassandra/commit/5f74f304c5510c5566284ff8a1e85e71b87a53e3

[COMMIT MESSAGE]:more tests||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("returnObject == null OR hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RigasGrigoropoulos/spring-security-acl-cassandra/commit/87322a8445f58989915a9de636af6ab1ff55a82b

[COMMIT MESSAGE]:added test service to test acl functionality||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/ba271d50ab6de2d0ef70948bb655eeb751cd6a11

[COMMIT MESSAGE]:test||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'POST_READ')")
- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'USER_READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/dbe428aec6bd468c2f06efb4a2905c0adf7e01f1

[COMMIT MESSAGE]:security||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ_ALL') || hasPermission(returnObject, 'READ_OWN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
- @PostAuthorize("hasPermission(returnObject, 'READ_ALL')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/6453ce1271b61a9abb94407d18c86ca79fe385bf

[COMMIT MESSAGE]:acl||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ_ALL') || hasPermission(returnObject, 'READ_OWN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mishgunn/regataiades-app/commit/1ec66ae7e5b7008f903c067f3a9d5a239279e26f

[COMMIT MESSAGE]:Fixes||
=========================================================

+ @PostAuthorize("@AccessTool.isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zenMycena/teahouse/commit/ee2ffbf1fa7f012b350cefe5cc9d9b420bd57877

[COMMIT MESSAGE]:initial commit Restful & WebMVC & Security & H2 JPA repository||
=========================================================

+ //@PostAuthorize("returnObject?.to?.id == principal?.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=26&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93

