
=========================================================
[CODE-CHANGE-URL]:https://github.com/vovanlau/Samples/commit/1a2ef0746015e1f52b07381413292f45960d7848

[COMMIT MESSAGE]:spring security||
=========================================================

+/* @PostAuthorize("returnObject?.summary == authentication.name")*/

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/getting-started-springsecurity-31/commit/dc812de3bac6d915bf49eb38d0e99d5adf19228e

[COMMIT MESSAGE]:initial||
=========================================================

+/* @PostAuthorize("returnObject?.summary == authentication.name")*/

=========================================================
[CODE-CHANGE-URL]:https://github.com/luj1985/dionysus/commit/b293fce0e552fb24f39188834b037d11f237ff6a

[COMMIT MESSAGE]:little fix||
=========================================================

+ @PostAuthorize("returnObject.user==principal or hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/9f75ccac2b567c7ce2762344de6fd7d51f96f6a0

[COMMIT MESSAGE]:PERI-28 leverage Ambari's metric system||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/9f75ccac2b567c7ce2762344de6fd7d51f96f6a0

[COMMIT MESSAGE]:PERI-28 leverage Ambari's metric system||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=2&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liuxianqiang/spring-in-action/commit/8ae3382f7c0731059af55ad41cf4542e37a12ec8

[COMMIT MESSAGE]:init spring-in-action||all sample code from http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/filber/JavaRepo/commit/ecdfbee7e04a1a803d5772fdd7b095da1a681743

[COMMIT MESSAGE]:spitter||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zliumichael/SpingInAction_SampleCode/commit/76656d40604b1fefd4c87fc34a75304a474f4799

[COMMIT MESSAGE]:add sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Popo-lth/SpringInActionCode/commit/5dce9c9112cb7957471d9627667e245169d591e3

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swcho/ex_spring_old/commit/b6752ee9029baf3e8f9c794c11ab3f609ac15dde

[COMMIT MESSAGE]:Spring in Action example||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code-examples/sping-in-action-book-third-edition-code-examples/commit/74bf3899498ab67859ead50be838915bb41e9e43

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rooneyp1976/SiA3/commit/f327c169c8ab54b29a4fb7267f0afe00636ffc0c

[COMMIT MESSAGE]:sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=3&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/hajimezhao/code-dojo/commit/b6d0116fa88d774fb6076e79d7c597feff5cf138

[COMMIT MESSAGE]:add sample source codes of Spring in Action - 3 edition||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HuberyChen/spring-pratice-project/commit/8fa0d610e125444ba9d60ce709d3eccb9ae0ab03

[COMMIT MESSAGE]:123||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nazar-art/SpringInAction/commit/f365c09374613f658939706b8d89ebfe2f1452a6

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/a7296fef4af9b0b3d59d7b8601422f862e9e59d2

[COMMIT MESSAGE]:PERI-28 history added for scaling events||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/salutmonde/spitter-web/commit/6bb22d68e76b73c41dfad74bc0494677b90f17fd

[COMMIT MESSAGE]:first commit of all file||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=4&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mornhuang/example/commit/e91f741a11ab4a888526d4215be3a820c2a4804b

[COMMIT MESSAGE]:增加Spring In Action 第三版的代码||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oradev/sping-in-action-code-examples/commit/8507798cd70b1b8f254aa801cb29062747a2cb8f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sikm31/yuri3/commit/e0766118f5a802446221d89bbaf4f81a58a24d9d

[COMMIT MESSAGE]:spring1||springproject
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymlai87416/SpringInActionSourceCode/commit/49a6436acf379863c0307cc9fa47c2dab172a771

[COMMIT MESSAGE]:download from http://www.manning.com/walls4||http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/icefireunicorn/springinaction3rd-demo/commit/3661beb56d7253c83d6faa6c3b9b108cf890229b

[COMMIT MESSAGE]:add||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=5&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/gavin-feng/SpringInActionStudy/commit/25dc18bdce6efce993ec3fcf73a681eab5c614e7

[COMMIT MESSAGE]:base src from manning website||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/heichenhardt/SpringInAction/commit/6bbee367285990831921d0599a5415620ea8b698

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymssdeng/winter/commit/7eaad2baff3df401d1708691f60ac4ceff3ada17

[COMMIT MESSAGE]:Spring In Action 3 source code||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/44cdcd35eb6622ebfec781d1562a1e32cdc55abe

[COMMIT MESSAGE]:l2 cache, tx service, fixes||+l2 cache ehcache
+transactional service
+split order page
+security for group order read
+nice icons
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or @groupOrderSecurity.isMemberOrGroupOwner(returnObject)")
- @PostAuthorize("returnObject.owner.name == principal.username")
+ @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Sheparzo/sia3-code/commit/08a2a0f48f8c615d6dda1305a7aecfd2fb13507e

[COMMIT MESSAGE]:Initial commit of book code provided by publisher at http://manning.c…||…om/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HenryXi/Spring_in_action/commit/19f36a42da5dcdd67d18ee8dc11f7967e8619901

[COMMIT MESSAGE]:commit all files||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jonatanvicente/spring/commit/9c2a5eb0d0bb3ee7100b80a1fdfe4063326b35c0

[COMMIT MESSAGE]:Creacion del proyecto||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=6&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/9fc85572dcdf63b8e226b29dfd89f5e2d215c7ad

[COMMIT MESSAGE]:Renamed authorization method to something more logical.||
=========================================================

-@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("isAuthorized(returnObject,'create')")
-@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("isAuthorized(returnObject,'delete')")
-@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("isAuthorized(returnObject,'read')")
-@PostAuthorize("hasMethodPermission(returnObject,'write')")
+@PostAuthorize("isAuthorized(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/YellowBinary/server/commit/d72c34796e0521cea95c1e13e96fe9529050eee1

[COMMIT MESSAGE]:Basic Security.||
=========================================================

+@PostAuthorize("hasMethodPermission(returnObject,'create')")
+@PostAuthorize("hasMethodPermission(returnObject,'delete')")
+@PostAuthorize("hasMethodPermission(returnObject,'read')")
+@PostAuthorize("hasMethodPermission(returnObject,'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/GGkBand/spring/commit/e8d27407fb6f2c99139b687c69aab8d10cddeb92

[COMMIT MESSAGE]:init spring||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/393f54ed1c94c177d6381cf1b91962f303b82707

[COMMIT MESSAGE]:Spring In Action created.||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dineshbabu/spring3-trial/commit/d847648cc947b5c4725b7c02010c6033891088f1

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hyperaeon/SpringLearn/commit/2957b94461db34d6dfc96412f3c049c93f2cabfb

[COMMIT MESSAGE]:init commit||
=========================================================

+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/snicki0201/myapp/commit/9a290b5f191ac5a18eef5c3a6234d94b15642a58

[COMMIT MESSAGE]:Experiment for custom UserDetailsService and UserDetails.||
=========================================================

+// @PostAuthorize("isAuthenticated() and returnObject?.id == principal.username")
+// @PostAuthorize("isAuthenticated() and returnObject?.id == principal.acid") // using null safe operator.
+// @PostAuthorize("isAuthenticated() and returnObject != null ? returnObject.id == principal.acid : true")
+ @PostAuthorize("returnObject != null ? returnObject.id == principal.acid : true") // causes error in the case of an unauthenticated.
+// @PostAuthorize("#returnObject != null ? returnObject.id == principal.acid : true") // # causes error.

=========================================================
[CODE-CHANGE-URL]:https://github.com/yaroslav-nikolaiko/LingvoMovie/commit/60ffc8a1d1276a83e56d8037de4579b95da0de0b

[COMMIT MESSAGE]:security try||
=========================================================

+//@PostAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=7&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/urko-vi/spring/commit/e3f68e0754a9cd509088c8f45852ecfaffc51bef

[COMMIT MESSAGE]:Initial||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ASSISTANT_DIRECTOR') or returnObject.investigador == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/stondofitz/thegains/commit/290c1058483e2cf3fba93dd61f4f6a12faaf18c5

[COMMIT MESSAGE]:Messing with security crap||
=========================================================

+ @PostAuthorize("returnObject.getUsername() == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/89eb9c2c7d116a594005efed06c5baf1c1607881

[COMMIT MESSAGE]:Initial Checkin||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/periscope/commit/9f75ccac2b567c7ce2762344de6fd7d51f96f6a0

[COMMIT MESSAGE]:PERI-28 leverage Ambari's metric system||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/finance/commit/4b3740d1b749b3388168452db86413a0faaf6656

[COMMIT MESSAGE]:Start of presentation||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/finance/commit/d49c9cf701d1c814d939b0e04b02c2ed7df6210b

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/akuepfer/coursera-mobile-cloud-computing-with-android/commit/718095fbb5839655a2f59c1787bc2256ca58b8f4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.doctorId == principal.id")
+ @PostAuthorize("returnObject.doctorId == authentication.id")
+ @PostAuthorize("returnObject.Id == principal.id || returnObject.doctorId == principal.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=8&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/blacknight1982/IDCloud/commit/4ac8bf263d21796da23edfdfbcb86e298c5c75d5

[COMMIT MESSAGE]:Items: 10, 6, 0, 5, 9, 2||0. Better UI, clean the project - following
0.1 Clean up the CSS file - following
1. Website published to http://idcloud.iego.net/
1.1 Synchronize Database - script on the dropbox
1.2 Check out the code on laptop - has problem
2. Social integration - fb integrated, twitter needs to be checked
4. Image upload through nicEditor is 3rd party Web - done with self
developed image upload service - almost done
5. User sign up email sending  - Not Started
5.1 User sign up anti-robot protection - Not Started
6. Publish file upload - Not Started
7. Spring REST/oDATA - half way
9. Server side Cache enabling - Not Started
10. Apache access control - Ready to Start

New: REST service, image upload service, CORS filter, Add inspiration
authorizations

Signed-off-by: John Liu <blacknight1982@gmail.com>
=========================================================

- //@PostAuthorize("returnObject?.author == authentication.name")
+ @PostAuthorize("returnObject?.authLevel < 2 or returnObject?.author == authentication.name or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/blacknight1982/IDCloud/commit/54db7fc2769c4c4e3f12ee16f30153250e753673

[COMMIT MESSAGE]:Items: 0, 2, 5, 9||0. Better UI, clean the project - following
1. Publish the website - done! http://idcloud.iego.net/
1.1 Synchronize Database - on the way
2. Social integration - fb integrated, twitter needs to be checked
3. iFrame/embed problem - solved! cancel the sliding panel
4. Image upload through nicEditor is 3rd party Web - done with self
developed image upload service 
5. User sign up email sending
6.1 User sign up anti-robot protection
7. Spring REST/oDATA - half way
8. Enable scrolling framework only for inspiration table page, not
other page - done
9. Cache enabling

New: REST service, image upload service, CORS filter

Signed-off-by: John Liu <blacknight1982@gmail.com>
=========================================================

+ //@PostAuthorize("returnObject?.author == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/f4e071e6f6a07f69c2636e5dd95180eeed9406d3

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fredondo/javacro2014-springsecurity3/commit/d34c1d694334e087358662c5fbe237cff301dae6

[COMMIT MESSAGE]:secure method invocation with SpEL expressions in annotations||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ASSISTANT_DIRECTOR') or returnObject.investigador == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleFile') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=9&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/0f37cab76f3f62eebe77b20de8af69d6bcc5e66a

[COMMIT MESSAGE]:Updated to add delete application functionality||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/225c73186a5a37f2d8dce9d9d25503266575dc05

[COMMIT MESSAGE]:Move to hardcoded logic Permissions. Add properties based authentication||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/0e6fe4c82b9ea1fe3f1281b78fb70626e1e64bba

[COMMIT MESSAGE]:Refactor so spring configuration can be changed via properties||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=10&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&p=11&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/thepresbyterian/topchef/commit/2ef860afaf9d4a218818400ef057a8b4f3b5f0ea

[COMMIT MESSAGE]:Publishing to GitHub||
=========================================================

+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("isAuthenticated()")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') and @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=12&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/liuxianqiang/spring-in-action/commit/8ae3382f7c0731059af55ad41cf4542e37a12ec8

[COMMIT MESSAGE]:init spring-in-action||all sample code from http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/loki2302/spring-security-experiment/commit/58cf3461cd2bf038b80d296d879347144594b23c

[COMMIT MESSAGE]:Converted to JUnit tests||
=========================================================

- @PostAuthorize("returnObject != 5")
+ @PostAuthorize("returnObject != 5")

=========================================================
[CODE-CHANGE-URL]:https://github.com/miraclezyk/StudyPlan/commit/4ac3360faeaa6bdea0997c3f9cc2b51aefa49204

[COMMIT MESSAGE]:code1||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADVISOR') or hasRole('ROLE_ADMIN') or (returnObject.id == principal.plan.id)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/filber/JavaRepo/commit/ecdfbee7e04a1a803d5772fdd7b095da1a681743

[COMMIT MESSAGE]:spitter||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zliumichael/SpingInAction_SampleCode/commit/76656d40604b1fefd4c87fc34a75304a474f4799

[COMMIT MESSAGE]:add sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=13&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/mycena/Security-3.2/commit/567c8027b416acd36a1af44a247105822a8a790d

[COMMIT MESSAGE]:Teapatea with security 3.2||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/adr-wisniewski/inz-sd/commit/7645256ec2b4128ee271228b8c32d9c1767cb936

[COMMIT MESSAGE]:implementacja rc1||
=========================================================

+ @PostAuthorize("isOwner(returnObject)")
+ @PostAuthorize("isOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/abhishek333/ted-young/commit/903aef6134b523727a04ee6fd83cc361a8bc2ce3

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Popo-lth/SpringInActionCode/commit/5dce9c9112cb7957471d9627667e245169d591e3

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/96ad55ca93c151b476e68381cec74e2c5b2e4222

[COMMIT MESSAGE]:Latest changes||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/geno-phen-browser-OLD/commit/89eb9c2c7d116a594005efed06c5baf1c1607881

[COMMIT MESSAGE]:Initial Checkin||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/swcho/ex_spring_old/commit/b6752ee9029baf3e8f9c794c11ab3f609ac15dde

[COMMIT MESSAGE]:Spring in Action example||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/SergiySobolev/SecurityTest/commit/d064bd5ce29ee6b8e0793613bb4f0e1fb1f0b1be

[COMMIT MESSAGE]:base acl configuration||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/terrestris/shogun2/commit/df4b07c6525a0c40eba4e0043af4e201d08e88e4

[COMMIT MESSAGE]:Add basic security annotations to the CRUD service||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=14&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/spring-test-example/commit/5a559b434112aaffdaf55a1f33b2b9799a109e10

[COMMIT MESSAGE]:Further defined security in the repository.||Added parameters switch to gradle build.
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or ( returnObject != null && (isAuthenticated() and returnObject.id == principal.id) )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yecllsl/sia3-code/commit/b0e8bf2386fe9c91e8767c18874d623fddf0ba03

[COMMIT MESSAGE]:初始化||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/dlee0113/spring_in_action/commit/96f2afa1a30121f0fe5f8c7c24cf77ef41884e3c

[COMMIT MESSAGE]:initial upload||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/19acef700f7233b47809d58bda2ef5c26730c569

[COMMIT MESSAGE]:korjaa tiedotteiden oikeustarkastelu||
=========================================================

+ @PostAuthorize("returnObject == null or returnObject.julkinen or isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code-examples/sping-in-action-book-third-edition-code-examples/commit/74bf3899498ab67859ead50be838915bb41e9e43

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/a98e5e8a174e8441e6cbcfb0f065a86e506c4783

[COMMIT MESSAGE]:Added source param in order to acquire all questions from an (random)||ilias test
=========================================================

+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/05c7f8133c73739e438889c9f9d701e88929982f

[COMMIT MESSAGE]:Simplified getQuestion and getRandomQuestion for IlliasConnector and||made them more dynamic.
=========================================================

- @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/1ed82afa2bb2684c0e4dcd8fbf4aec9836e13582

[COMMIT MESSAGE]:Added methods for random test question requests||
=========================================================

+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/80093b27c1b429d7da6796ee628f8fb3db522c57

[COMMIT MESSAGE]:Added new security rules and configuration||
=========================================================

+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepTree','read'))")
+ @PostAuthorize("isAuthenticated() and (hasRole('ADMIN') or hasPermission(#refId,'uniRepQuestion','read'))")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rooneyp1976/SiA3/commit/f327c169c8ab54b29a4fb7267f0afe00636ffc0c

[COMMIT MESSAGE]:sia||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/hajimezhao/code-dojo/commit/b6d0116fa88d774fb6076e79d7c597feff5cf138

[COMMIT MESSAGE]:add sample source codes of Spring in Action - 3 edition||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=15&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/prafulmantale/MobileDevelopment/commit/fceb5dfe6211c3261da55a6b56c345cfb17930b9

[COMMIT MESSAGE]:dhpn||
=========================================================

+ @PostAuthorize("returnObject.emailId == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/code4j-chen/example-code/commit/498826fbc92b86dfd7e00c948e7968447fa690b1

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bvassilis/SpringInAction/commit/0b9fdad8d38dc327773883595b0258b107061f05

[COMMIT MESSAGE]:sia3||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HuberyChen/spring-pratice-project/commit/8fa0d610e125444ba9d60ce709d3eccb9ae0ab03

[COMMIT MESSAGE]:123||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nazar-art/SpringInAction/commit/f365c09374613f658939706b8d89ebfe2f1452a6

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danielberecz/petclinic/commit/fcc12e07ebb11225be19a3860f380cebfc4b7529

[COMMIT MESSAGE]:Introduced Hystrix||
=========================================================

- @PostAuthorize("returnObject.owner.domainUser.username == principal.username or hasRole('ROLE_VET')")
+ @PostAuthorize("principal.username == returnObject.owner.domainUser.username or hasRole('ROLE_VET')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleFile') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=16&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/salutmonde/spitter-web/commit/6bb22d68e76b73c41dfad74bc0494677b90f17fd

[COMMIT MESSAGE]:first commit of all file||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mornhuang/example/commit/e91f741a11ab4a888526d4215be3a820c2a4804b

[COMMIT MESSAGE]:增加Spring In Action 第三版的代码||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/jaxenter-showcase/commit/c3762b96b6a70be248550806e0361745328d084a

[COMMIT MESSAGE]:Step 3: Add security||
=========================================================

+ @PostAuthorize("returnObject.firstName == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/oradev/sping-in-action-code-examples/commit/8507798cd70b1b8f254aa801cb29062747a2cb8f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sikm31/yuri3/commit/e0766118f5a802446221d89bbaf4f81a58a24d9d

[COMMIT MESSAGE]:spring1||springproject
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=17&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tiggermug/sia3-code/commit/a3e9a514a28bf38c8a8f1a17a18eced7e2f5d040

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymlai87416/SpringInActionSourceCode/commit/49a6436acf379863c0307cc9fa47c2dab172a771

[COMMIT MESSAGE]:download from http://www.manning.com/walls4||http://www.manning.com/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/briancody/roscode-dtp/commit/704dc1b6af65f5804f60326cfd90801a741ef081

[COMMIT MESSAGE]:Security!||
=========================================================

+// @PostAuthorize("returnObejct.id == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/wdiskowski/spring/commit/6f0ace4f44624fb8505c32396314708064145476

[COMMIT MESSAGE]:ACL eingebaut||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/225c73186a5a37f2d8dce9d9d25503266575dc05

[COMMIT MESSAGE]:Move to hardcoded logic Permissions. Add properties based authentication||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/peterarsentev/Spring-Security-Acl-MongoDB/commit/18b8fc5fb4300c9fee927488a7bfe8c5c5ed5c8a

[COMMIT MESSAGE]:added the login page, client page, create client dialog||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/icefireunicorn/springinaction3rd-demo/commit/3661beb56d7253c83d6faa6c3b9b108cf890229b

[COMMIT MESSAGE]:add||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gavin-feng/SpringInActionStudy/commit/25dc18bdce6efce993ec3fcf73a681eab5c614e7

[COMMIT MESSAGE]:base src from manning website||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=18&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/heichenhardt/SpringInAction/commit/6bbee367285990831921d0599a5415620ea8b698

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ymssdeng/winter/commit/7eaad2baff3df401d1708691f60ac4ceff3ada17

[COMMIT MESSAGE]:Spring In Action 3 source code||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-0-to-4.0/commit/dda960c125c4ef2cfb34f5bb8c9942ffc1b8b46f

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pisarski/SpringSampleApp/commit/bef28bf5448f70a1a191e961e3a0366b3c428ef1

[COMMIT MESSAGE]:Add rights to view and logic||
=========================================================

+ @PostAuthorize("hasAuthority('EDIT_ALL_SPITTLES') or (hasAuthority('EDIT_OWN_SPITTLE') and principal.user.id == returnObject.createUser.id)")
+ @PostAuthorize("principal.user.id != returnObject.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pisarski/SpringSampleApp/commit/2dc10397f211cdfd768405b4b702455e2aa2478e

[COMMIT MESSAGE]:Add security tests||
=========================================================

- @PostAuthorize("principal.user.id != returnObject.id")
+ @PostAuthorize("hasAuthority('USER_MANAGEMENT') and principal.user.id != returnObject.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pisarski/SpringSampleApp/commit/bef28bf5448f70a1a191e961e3a0366b3c428ef1

[COMMIT MESSAGE]:Add rights to view and logic||
=========================================================

+ @PostAuthorize("hasAuthority('EDIT_ALL_SPITTLES') or (hasAuthority('EDIT_OWN_SPITTLE') and principal.user.id == returnObject.createUser.id)")
+ @PostAuthorize("principal.user.id != returnObject.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=19&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/bc498a2f04214d86154da94bdca635574a669253

[COMMIT MESSAGE]:CLOUD-659 create network abstraction||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Sheparzo/sia3-code/commit/08a2a0f48f8c615d6dda1305a7aecfd2fb13507e

[COMMIT MESSAGE]:Initial commit of book code provided by publisher at http://manning.c…||…om/walls4/
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/ea83b3a39405a316a6d577a1cddea4976a62cd43

[COMMIT MESSAGE]:Refactor: give the User, Admin and authentication methods a seperated||controller.
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/349a0edc4a3878af394324a43e8d915d2e880bff

[COMMIT MESSAGE]:Initial work on Client Library. This includes work to ensure security…||… is in place on the server side. Lots of work sourrounding inheritance and security.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/cb0e06531b5e2ffe425a010b449d947af9c89160

[COMMIT MESSAGE]:Change getEnvironments to go through Repository so it can be filtered…||… by security. Environment list now only shows 'visible' environments
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/225c73186a5a37f2d8dce9d9d25503266575dc05

[COMMIT MESSAGE]:Move to hardcoded logic Permissions. Add properties based authentication||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/0e6fe4c82b9ea1fe3f1281b78fb70626e1e64bba

[COMMIT MESSAGE]:Refactor so spring configuration can be changed via properties||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/HenryXi/Spring_in_action/commit/19f36a42da5dcdd67d18ee8dc11f7967e8619901

[COMMIT MESSAGE]:commit all files||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marroqui69/lucychang2/commit/89eed03deb52813d1b70a6a5018b9dd249dea406

[COMMIT MESSAGE]:init||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=20&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/danillogontijo/geddireto/commit/f370a7f0979a0f9b3fd27ac2a90a6391b2407208

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("(returnObject == null) or (returnObject.granted)")
+ /*@PostAuthorize("(returnObject == null) or (returnObject.granted)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danillogontijo/geddireto/commit/205db7780a257e0ebe88c40b1255742283ee9398

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("(returnObject == null) or (returnObject.carteira.idCarteira == principal.idCarteira)")
+ //@PostAuthorize("(returnObject == null) or (returnObject.carteira.idCarteira == principal.idCarteira)")
+ @PostAuthorize("(returnObject == null) or (returnObject.granted)")
+ @PostAuthorize("(returnObject == null) or (returnObject.granted)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danillogontijo/geddireto/commit/79b832137f6c67b1c1778eabe52ec0dce3a5ec25

[COMMIT MESSAGE]:No commit message||
=========================================================

+ //@PostAuthorize("returnObject.idCarteira == principal.idCarteira")
+ //@PostAuthorize("returnObject.idCarteira == principal.idCarteira")
+ @PostAuthorize("(returnObject == null) or (returnObject.carteira.idCarteira == principal.idCarteira)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-state-securing-restful-apis/commit/d76e602641224b980bfec36dfbb5618605831da7

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id && (!#oauth2.oAuth || #oauth2.hasScope('write'))")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-state-securing-restful-apis/commit/d76e602641224b980bfec36dfbb5618605831da7

[COMMIT MESSAGE]:initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id && (!#oauth2.oAuth || #oauth2.hasScope('write'))")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("#message?.from?.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-modern/commit/9f232ef5a67121af039000d238d6cef4c7a3aa09

[COMMIT MESSAGE]:Use Spring Security||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/e87243385c9e7b8a75b6e28217f921a01f930d94

[COMMIT MESSAGE]:fixes, refactoring||+escape errorMessage string for js
+handle user creation in service
+show all orders for admin at home page
+don't send ajax save on load of page (first model change event)
+don't show buttons on submitted and not user orders
+forbid group deletion if there are some orders in it
=========================================================

- @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/44cdcd35eb6622ebfec781d1562a1e32cdc55abe

[COMMIT MESSAGE]:l2 cache, tx service, fixes||+l2 cache ehcache
+transactional service
+split order page
+security for group order read
+nice icons
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or @groupOrderSecurity.isMemberOrGroupOwner(returnObject)")
- @PostAuthorize("returnObject.owner.name == principal.username")
+ @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/serdyuk-alex/RestaurantSample/commit/548fb0e5f64ad68ccfeb074b8f52b93ac6fb820d

[COMMIT MESSAGE]:v2 version with good UI & edit dishes ability||+spring security update
+rest-webmvc
+light jsp templating lib
+remove useless tomcat plugin config
+readme
+html design
+update of ORM model (with many2many with extra field)
=========================================================

+ @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("returnObject.owner.name == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jonatanvicente/spring/commit/9c2a5eb0d0bb3ee7100b80a1fdfe4063326b35c0

[COMMIT MESSAGE]:Creacion del proyecto||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/GGkBand/spring/commit/e8d27407fb6f2c99139b687c69aab8d10cddeb92

[COMMIT MESSAGE]:init spring||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Michielst/lucychangREST/commit/1c4a9ca6d8b938bfd44c369b34d519f75f971f5b

[COMMIT MESSAGE]:changes||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-cjug/commit/866f1c5ebeb7119f772cf89752b93a01bd2e8a59

[COMMIT MESSAGE]:Initial||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=21&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/careermasud/SpringBooks/commit/393f54ed1c94c177d6381cf1b91962f303b82707

[COMMIT MESSAGE]:Spring In Action created.||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/8b4d84b0a37ea4c3a4f0fe907d94d172718ef92b

[COMMIT MESSAGE]:add basic CourseGroup functions||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/8495c5fbba77cf5ed41f890c4150b57d8b94be3c

[COMMIT MESSAGE]:sql and security work||
=========================================================

- // @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/8b519558fbeb002b69a931eb895468e7c6608480

[COMMIT MESSAGE]:section 7 work||
=========================================================

+ // @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/63c361e1a7069e519831506c0ad16a8fd2023134

[COMMIT MESSAGE]:- Securing the service layer||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/cb0661ea4f3a2417988c34a5ee34682b13370e62

[COMMIT MESSAGE]:- Securing the service layer||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/0a5699a5a276777dd160237c3a7c78279b489d0d

[COMMIT MESSAGE]:- Securing of Services||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/f4e071e6f6a07f69c2636e5dd95180eeed9406d3

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/a7364071dee8e59297502dbd871970403e008913

[COMMIT MESSAGE]:Use the new access method.||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/a7364071dee8e59297502dbd871970403e008913

[COMMIT MESSAGE]:Use the new access method.||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=22&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dineshbabu/spring3-trial/commit/d847648cc947b5c4725b7c02010c6033891088f1

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.length() == #input.length()")
+ @PostAuthorize("returnObject.spitter.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/keslerm/reloader-tracker/commit/f284c93a90bf554a9f7b8b8adf280c8294bf5846

[COMMIT MESSAGE]:Adding security and domain model changes to components||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') || returnObject == null || returnObject.userId == principal.id")
+ @PostAuthorize("hasRole('ROLE_ADMIN') || returnObject == null || returnObject.userId == principal.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=23&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/chinab/owaconnector/commit/181abd50d82930899def064d2cdb60a9427abead

[COMMIT MESSAGE]:authentication.name instead of principal||
=========================================================

- @PostAuthorize("returnObject.owner.username == principal")
+ // @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("returnObject.owner.username == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chinab/owaconnector/commit/89daa79b0de77dbe357e047620e93512d7260d1e

[COMMIT MESSAGE]:moved find* methods to java class so they can be modified. Secured th…||…em using spring security.
=========================================================

+ @PostAuthorize("returnObject.owner.username == principal")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/b3926395de09afc1bb2b4ebcc0e516e727939413

[COMMIT MESSAGE]:Add update course function||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/8b3bc7ad66f8a092f336c6f55dabf77d703c4d02

[COMMIT MESSAGE]:Add clean course functions||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")
+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/754c500156e368ecd052157737b04f7598524a8c

[COMMIT MESSAGE]:add required login for getAllCoursesUser||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
- @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/be4b206ad5bda4329be81a470a9074df17a89153

[COMMIT MESSAGE]:Add permission to json getAllCourse||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=24&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/901b2d29e797a7e1c33ae3c1a5d7fd8ab575a733

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and returnObject.domain == principal.domain and returnObject.account = principal.account)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chotchki/pgGallery/commit/fbc9ff4ab41f2e7aa0e2684b3871d1f86d162e84

[COMMIT MESSAGE]:locked down the security backend||
=========================================================

+ @PostAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN') or returnObject.isPublic() == true")
+ @PostAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN') or returnObject.isPublic() == true")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jakubnabrdalik/spring-security-starter/commit/673ec896040766e644dfc321f23ab74ae5a9d2fd

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")
+ @PostAuthorize("hasRole('ROLE_ADMIN') && isFullyAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/d891d17cfa248220c2a38f99b36758b9c91ffb03

[COMMIT MESSAGE]:RAVE-341 patch to add security features to WidgetComments||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1207613 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/johndoe90/ProductReviews/commit/78b4d33f8c3c9dc57d8e018b2414c4a76c82a37c

[COMMIT MESSAGE]:First Commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'delete')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PRIDE-Archive/security/commit/7d9145194f523b0f60d78feabf0f2143dfc11f1d

[COMMIT MESSAGE]:move archive securiry package to new location||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleAssay') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleFile') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
+ @PostAuthorize("hasPermission(returnObject, 'isAccessibleProject') or hasRole('ADMINISTRATOR')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=25&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/devshred/spring-security/commit/00341f1eeaf499805d1ffd3165c867db2535032a

[COMMIT MESSAGE]:check read permissions on messages||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RigasGrigoropoulos/spring-security-acl-cassandra/commit/5f74f304c5510c5566284ff8a1e85e71b87a53e3

[COMMIT MESSAGE]:more tests||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("returnObject == null OR hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/RigasGrigoropoulos/spring-security-acl-cassandra/commit/87322a8445f58989915a9de636af6ab1ff55a82b

[COMMIT MESSAGE]:added test service to test acl functionality||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/ba271d50ab6de2d0ef70948bb655eeb751cd6a11

[COMMIT MESSAGE]:test||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'POST_READ')")
- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'USER_READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/dbe428aec6bd468c2f06efb4a2905c0adf7e01f1

[COMMIT MESSAGE]:security||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ_ALL') || hasPermission(returnObject, 'READ_OWN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
- @PostAuthorize("hasPermission(returnObject, 'READ_ALL')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/6453ce1271b61a9abb94407d18c86ca79fe385bf

[COMMIT MESSAGE]:acl||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ_ALL') || hasPermission(returnObject, 'READ_OWN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mishgunn/regataiades-app/commit/1ec66ae7e5b7008f903c067f3a9d5a239279e26f

[COMMIT MESSAGE]:Fixes||
=========================================================

+ @PostAuthorize("@AccessTool.isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/zenMycena/teahouse/commit/ee2ffbf1fa7f012b350cefe5cc9d9b420bd57877

[COMMIT MESSAGE]:initial commit Restful & WebMVC & Security & H2 JPA repository||
=========================================================

+ //@PostAuthorize("returnObject?.to?.id == principal?.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=26&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/cb0661ea4f3a2417988c34a5ee34682b13370e62

[COMMIT MESSAGE]:- Securing the service layer||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/0a5699a5a276777dd160237c3a7c78279b489d0d

[COMMIT MESSAGE]:- Securing of Services||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/f4e071e6f6a07f69c2636e5dd95180eeed9406d3

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/handiono/rooacl/commit/8f7cd8b190a6f3b8778b8afd9680b189214f858b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/handiono/rooacl/commit/8f7cd8b190a6f3b8778b8afd9680b189214f858b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/handiono/rooacl/commit/8f7cd8b190a6f3b8778b8afd9680b189214f858b

[COMMIT MESSAGE]:No commit message||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/PolicyWork/crawl-repo/commit/83036191816b4643851691195e08c167244a1aac

[COMMIT MESSAGE]:committing.||
=========================================================

++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
++ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("this.belongsToTenant(returnObject)")
++ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
++ @PostAuthorize("@paa.hasAccess(returnObject)")
++ @PostAuthorize("@paa.hasAccess(returnObject)")
++ @PostAuthorize("@paa.hasAccess(returnObject)")
++ @PostAuthorize("@paa.hasAccess(returnObject)")
++ @PostAuthorize("hasPermission(returnObject,'read')")
++ @PostAuthorize("hasPermission(returnObject,'read')")
++ @PostAuthorize("hasPermission(returnObject,'read')")
++ @PostAuthorize("hasPermission(returnObject,'read')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
++ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
+- @PostAuthorize("hasPermission(#entity, 'write')")
+- @PostAuthorize("hasPermission(returnObject, 'read')")
+- @PostAuthorize("hasPermission(#entity, 'write')")
++ @PostAuthorize("hasPermission(returnObject, 'write')")
++ @PostAuthorize("hasPermission(#entity, 'write')")
++ @PostAuthorize("hasPermission(#entity, 'read')")
++ @PostAuthorize("hasPermission(#entity, 'write')")
++ @PostAuthorize("hasPermission(#entity, 'write')")
++ @PostAuthorize("hasPermission(returnObject, 'read') and hasPermission(returnObject, 'write')")
++ @PostAuthorize("hasPermission(returnObject, 'read')")
+- @PostAuthorize("hasAuthority('ADMIN') or hasPermission(returnObject, 'READ') or hasPermission(returnObject, 'WRITE') or hasPermission(returnObject, 'ADMINISTRATION')")
++ @PostAuthorize("hasAuthority('ADMIN') or hasPermission(returnObject, 'READ') or hasPermission(returnObject, 'WRITE') or hasPermission(returnObject, 'CREATE') or hasPermission(returnObject, 'DELETE') or hasPermission(returnObject, 'ADMINISTRATION')")
+- @PostAuthorize("hasPermission(returnObject, 'READ')")
++ @PostAuthorize("hasAuthority('ADMIN') or hasPermission(returnObject, 'READ') or hasPermission(returnObject, 'WRITE') or hasPermission(returnObject, 'ADMINISTRATION')")
++ @PostAuthorize("hasPermission(returnObject, 'READ')")
++ @PostAuthorize("returnObject.length() == #input.length()")
++ @PostAuthorize("returnObject.spitter.username == principal.username")
++ @PostAuthorize("returnObject.length() == #input.length()")
++ @PostAuthorize("returnObject.spitter.username == principal.username")
++ @PostAuthorize("returnObject.id == T(Long).parseLong(principal.username) or hasRole('ROLE_ADMIN')")
++ @PostAuthorize("hasRole('ROLE_USER_AUTHENTICATOR') or hasRole('ROLE_ADMIN') or hasPermission(returnObject, 'read') or hasPermission(returnObject, admin)")
+- @PostAuthorize("hasRole('admin') or principal.username == returnObject.teamName")
++ @PostAuthorize("hasRole('ROLE_ADMIN') or principal.username == returnObject.teamName")
+- @PostAuthorize("returnObject.owner.domainUser.username == principal.username or hasRole('ROLE_VET')")
++ @PostAuthorize("principal.username == returnObject.owner.domainUser.username or hasRole('ROLE_VET')")
+- * @PostAuthorize("#to == returnObject.to")
++ * {@code @PostAuthorize("#to == returnObject.to")}
+- * @PostAuthorize("#to == returnObject.to")
++ * {@code @PostAuthorize("#to == returnObject.to")}
++ @PostAuthorize("#o?.contains('grant')")
++ * @PostAuthorize("#to == returnObject.to")
++ * @PostAuthorize("#to == returnObject.to")
+++ @PostAuthorize("(returnObject.email == principal.Username) or hasRole('ROLE_ADMIN')")
+++/* @PostAuthorize("returnObject?.summary == authentication.name")*/
+++/* @PostAuthorize("returnObject?.summary == authentication.name")*/
++- @PostAuthorize("hasRole('ROLE_ADMIN') or authentication.name == returnObject.email")
+++ @PostAuthorize("hasRole('ROLE_USER')")
+++ @PostAuthorize("hasRole('ROLE_ADMIN') or authentication.name == returnObject.user.email")
+++ @PostAuthorize("hasRole('ROLE_ADMIN') or authentication.name == returnObject.user.email")
+++ @PostAuthorize("hasRole('ROLE_ADMIN') or authentication.name == returnObject.email")
+++ @PostAuthorize("returnObject.length() == #input.length()")
+++ @PostAuthorize("returnObject.spitter.username == principal.username")
+++ @PostAuthorize("returnObject.length() == #input.length()")
+++ @PostAuthorize("returnObject.spitter.username == principal.username")
+++ @PostAuthorize("returnObject.length() == #input.length()")
+++ @PostAuthorize("returnObject.spitter.username == principal.username")
+++ @PostAuthorize("returnObject.length() == #input.length()")
+++ @PostAuthorize("returnObject.spitter.username == principal.username")
+++ @PostAuthorize("returnObject.length() == #input.length()")
+++ @PostAuthorize("returnObject.spitter.username == principal.username")
++@PostAuthorize("
+-/home/manish/workspace/crawl-repo/OUTPUT/BEST_MATCH/CrawlerOutput_Round2_run1.txt:1332:+ @PostAuthorize("returnObject == null or returnObject.julkinen or isAuthenticated()")
++ @PostAuthorize("returnObject.id == T(Long).parseLong(principal.username) or hasRole('ROLE_ADMIN')")
++ @PostAuthorize("returnObject.owner.name == principal.username or hasRole('ROLE_ADMIN')")
++ @PostAuthorize("returnObject.owner.name == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/terasolunaorg/terasoluna-tourreservation/commit/d0699a596b61da63fa11fc3244246e21d23c645b

[COMMIT MESSAGE]:Implement access control for other owner resource. terasolunaorg/tera…||…soluna-tourreservation#213
=========================================================

+ @PostAuthorize("returnObject == null or returnObject.customer.customerCode == principal.customer.customerCode")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chudanic/spring-security-acl-demo/commit/a919cfdbfb0ce94579f540d7d23608a921ffdfb3

[COMMIT MESSAGE]:Initial commit of Spring Security ACL in Google Cloud DataStore Demo||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'VIEWER') or (returnObject.user.login == authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marroqui69/lucychang2/commit/89eed03deb52813d1b70a6a5018b9dd249dea406

[COMMIT MESSAGE]:init||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=27&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhernakovMikhail/spring-acl-sample/commit/51f7accc0feb646758de36b276c63bced95eb864

[COMMIT MESSAGE]:Добавил простейший интерфейс||
=========================================================

- @PostAuthorize("hasAuthority('ADMIN') or hasPermission(returnObject, 'READ') or hasPermission(returnObject, 'WRITE') or hasPermission(returnObject, 'ADMINISTRATION')")
+ @PostAuthorize("hasAuthority('ADMIN') or hasPermission(returnObject, 'READ') or hasPermission(returnObject, 'WRITE') or hasPermission(returnObject, 'CREATE') or hasPermission(returnObject, 'DELETE') or hasPermission(returnObject, 'ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhernakovMikhail/spring-acl-sample/commit/c4c869bcf60e4b01645b4f64fb36dde42ad86cee

[COMMIT MESSAGE]:вынес конфигурацию из xml||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasAuthority('ADMIN') or hasPermission(returnObject, 'READ') or hasPermission(returnObject, 'WRITE') or hasPermission(returnObject, 'ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ZhernakovMikhail/spring-acl-sample/commit/2833ddfb778877a4ac4bb902beee5065cd0123d1

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/57ba23678866e81655f8aa996c2bd9d6c7bcbae7

[COMMIT MESSAGE]:TRACKR-234 - Track employee's contact address||* Added an address reference to an employee.
* Made the SelfEmployee DTO more powerful by including all fields needed for the self display. Refactored all logic from the EmployeeController into a service.
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or returnObject.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.employee?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
- @PostAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.employee?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
- @PostAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/2b064dcb11054571b854b51e4232dab891e21829

[COMMIT MESSAGE]:TRACKR-174 - Track sick days||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == returnObject.employee.id )")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.employee?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
- @PostAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Michielst/lucychangREST/commit/1c4a9ca6d8b938bfd44c369b34d519f75f971f5b

[COMMIT MESSAGE]:changes||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=28&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/alapierre/sample/commit/d581e20f55625ceb3e21c7b3eaa625a03f0e1620

[COMMIT MESSAGE]:I have added ACL support example||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read)")
+ @PostAuthorize("hasPermission(#event, write)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mkjasinski/spring-security-acl/commit/a9e67e4c44f23f6867ada3e0ebaad535b17d0e3b

[COMMIT MESSAGE]:I have added ACL support||
=========================================================

-// @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, read)")
+ @PostAuthorize("hasPermission(#event, write)")
-// @PostAuthorize("hasPermission(filterObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mkjasinski/spring-security-acl/commit/351f06fdffed6b991a767f891785d58939a4a3d7

[COMMIT MESSAGE]:Initial commit||
=========================================================

+// @PostAuthorize("hasPermission(returnObject, 'READ')")
+// @PostAuthorize("hasPermission(filterObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/a7364071dee8e59297502dbd871970403e008913

[COMMIT MESSAGE]:Use the new access method.||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shamim-ahmed/spring-demo/commit/da8782dce00739dcfd78db925e8758da8f78ea76

[COMMIT MESSAGE]:now the custom permission evaluator is used while retrieving a messag…||…e by its id
=========================================================

- @PostAuthorize("returnObject.username == principal.username")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shamim-ahmed/spring-demo/commit/592dde8b3f63c786489ead4aa113297fe6e2e682

[COMMIT MESSAGE]:added a new project to demonstrate how to implement a custom permissi…||…on evaluator
=========================================================

+ @PostAuthorize("returnObject.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/shamim-ahmed/spring-demo/commit/4a8687af6ff756386e4c5d35bb31d24058818877

[COMMIT MESSAGE]:added restriction retrieving and adding messages using pre-post annot…||…ations
=========================================================

+ @PostAuthorize("returnObject.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c7d573e65e4eb1a4d1c1643413a1c341e495b7a9

[COMMIT MESSAGE]:[CRM-23] Services server side authorization.||Change-Id: I79ebb863bb13fdf6de0de75a7880480f39409725
=========================================================

+ @PostAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=29&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/39fa37b0e8c544bb1cacc5a2c7e0246bfef12664

[COMMIT MESSAGE]:RAVE-835 Merge all from model-split at 1403154 (reintegration)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1403166 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2da933e9653c5317d1d84b8ae5c6f94e38e2cacc

[COMMIT MESSAGE]:Promote rave to a TLP -- INFRA-4573||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1305402 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lletsica/my_test_repo/commit/c628bccc4139c56c83cd221a6e6ff09d6895a571

[COMMIT MESSAGE]:Proyeto montado con tomcat Rave||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/alapierre/altkom_2004_10_06/commit/7a5edf5ea12cf4a33272b878d950a91ecf517bb5

[COMMIT MESSAGE]:spring-security-acl on Derby||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read)")
+ @PostAuthorize("hasPermission(#event, write)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/cb0661ea4f3a2417988c34a5ee34682b13370e62

[COMMIT MESSAGE]:- Securing the service layer||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/0a5699a5a276777dd160237c3a7c78279b489d0d

[COMMIT MESSAGE]:- Securing of Services||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pascal-gehring/mycomm-portal/commit/f4e071e6f6a07f69c2636e5dd95180eeed9406d3

[COMMIT MESSAGE]:initial import||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chotchki/pgGallery/commit/fbc9ff4ab41f2e7aa0e2684b3871d1f86d162e84

[COMMIT MESSAGE]:locked down the security backend||
=========================================================

+ @PostAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN') or returnObject.isPublic() == true")
+ @PostAuthorize("hasAnyRole('ROLE_USER','ROLE_ADMIN') or returnObject.isPublic() == true")

=========================================================
[CODE-CHANGE-URL]:https://github.com/szekai/restful-example/commit/e2875a3bfb2e33223a0f04feb776f7fb29eeeb32

[COMMIT MESSAGE]:add spring-security-full-acl-restful||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=30&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Serge009/security-acl/commit/dff12ffd452fcebab2517cafb9522612ab710171

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/judywangsg/spring-security-full-acl/commit/1063affd3f84a0b4bf81038ee27d77f414f06ba5

[COMMIT MESSAGE]:spring acl tutorial full version||spring acl tutorial full version
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KostadinP/web-programming-project/commit/a17ea80355881b4db8442da777b3e98674509360

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("hasRole('ROLE_USERS') and returnObject.user == authentication.name")

=========================================================
[CODE-CHANGE-URL]:https://github.com/remi-san/security-model/commit/c9019dc123581626c672d1fbf29d1107c1d26aee

[COMMIT MESSAGE]:moved some files from utils||
=========================================================

+ //@PostAuthorize("hasPermission(returnObject, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=31&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/eef3e42178786eee018a6dd5f11a4401499e8a78

[COMMIT MESSAGE]:everything working for education page in transfer_app||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/02f43ee645c6ed2c86f82bbc4f47d25647c914e7

[COMMIT MESSAGE]:changes made to be running with transfer app.||Added fields for NA values of dates.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/remi-san/security-model/commit/c9019dc123581626c672d1fbf29d1107c1d26aee

[COMMIT MESSAGE]:moved some files from utils||
=========================================================

+ //@PostAuthorize("hasPermission(returnObject, 'WRITE') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tony78it/homir/commit/016dcf40defb249d61983511d42522bc154c54ae

[COMMIT MESSAGE]:start on security config||
=========================================================

+ //@PostAuthorize("returnObject.email == principal.username or hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=32&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tony78it/homir/commit/016dcf40defb249d61983511d42522bc154c54ae

[COMMIT MESSAGE]:start on security config||
=========================================================

+ //@PostAuthorize("returnObject.email == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/ba271d50ab6de2d0ef70948bb655eeb751cd6a11

[COMMIT MESSAGE]:test||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'POST_READ')")
- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'USER_READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/dbe428aec6bd468c2f06efb4a2905c0adf7e01f1

[COMMIT MESSAGE]:security||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ_ALL') || hasPermission(returnObject, 'READ_OWN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")
- @PostAuthorize("hasPermission(returnObject, 'READ_ALL')")
+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/aa6cda3a4e6bd889002665c7355437166580785d

[COMMIT MESSAGE]:acl||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ_ALL')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/taraktikos/JavaSpring/commit/6453ce1271b61a9abb94407d18c86ca79fe385bf

[COMMIT MESSAGE]:acl||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ_ALL') || hasPermission(returnObject, 'READ_OWN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thpeng/spring-time/commit/2350be6eebce396ef4d404e1ddd6475b1f9ad54a

[COMMIT MESSAGE]:expanded timesheet including delete / put||
=========================================================

- @PostAuthorize("@authorizationService.isPrincipalSameAsUser(principal.username, returnObject.userId)")
+ @PostAuthorize("returnObject == null or @authorizationService.isPrincipalSameAsUser(principal.username, returnObject.userId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thpeng/spring-time/commit/c10a0e8872838b32551861cbdce226ea482e1e73

[COMMIT MESSAGE]:expanding the timesheet domain.||
=========================================================

+ @PostAuthorize("@authorizationService.isPrincipalSameAsUser(principal.username, returnObject.userId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thpeng/spring-time/commit/c10a0e8872838b32551861cbdce226ea482e1e73

[COMMIT MESSAGE]:expanding the timesheet domain.||
=========================================================

+ @PostAuthorize("@authorizationService.isPrincipalSameAsUser(principal.username, returnObject.userId)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thpeng/spring-time/commit/12afa668338b5a5824fb387ece54fa1b5161bcf2

[COMMIT MESSAGE]:added more acl rules, fixed a bug in the existing acl||
=========================================================

+ @PostAuthorize("returnObject.loginId == principal.username or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/gpimblott/SpringBootStarter/commit/7f8fd07bc66982cb9071dce3da111a03ca8fdcbd

[COMMIT MESSAGE]:Move gradle build file and sort out dependencies||
=========================================================

+ @PostAuthorize("(returnObject != null and returnObject.username == principal.username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=33&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Ventiv-Technology/AppConfig/commit/0b38017f9b485aae8c5daf35dc08b41d8ba4a55e

[COMMIT MESSAGE]:Enforce Environment is 'Writable' before attempting to overwrite it. …||…This ensures that one can't hijack the environment simply because they can see it
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mikesobczak/ProSpringSecurity/commit/02f5876e150f175c062f3dbb9de57bf21e4cf0e1

[COMMIT MESSAGE]:More stuff.||
=========================================================

- @PostAuthorize("T(java.lang.Integer).parseInt(getReturnObject().budget) < 5000000")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mikesobczak/ProSpringSecurity/commit/d01133a97d79cdb58087ae0ecf69f78fb0271797

[COMMIT MESSAGE]:More training.||
=========================================================

+ @PostAuthorize("T(java.lang.Integer).parseInt(getReturnObject().budget) < 5000000")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yadna13/synergy-bank/commit/b3f9220c40256f04f0482d49415c29a61d6bb88e

[COMMIT MESSAGE]:Base version of synergy-bank||
=========================================================

+ @PostAuthorize("returnObject.validateUserId(principal.username)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/4b351554a0832e31a48921317fb5d567af0c6ad8

[COMMIT MESSAGE]:Adjustments update book feature + delete book feature completed||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/b01319ba05dadd30afb4a02df2b19630f5c8a703

[COMMIT MESSAGE]:Tried to add a book update feature, added some comments||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/937d4f9bd54f99f387950dfe5928b6320f09e52d

[COMMIT MESSAGE]:Add book feature completed||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")
+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mikewiesner/spring-security-3.1-sample/commit/101fe953afaedcec943689befc43628648860d70

[COMMIT MESSAGE]:Solution||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'show')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=34&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/yadna13/synergy-credit-card/commit/b3f9220c40256f04f0482d49415c29a61d6bb88e

[COMMIT MESSAGE]:Base version of synergy-bank||
=========================================================

+ @PostAuthorize("returnObject.validateUserId(principal.username)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ristes/finki-wp/commit/28f52bbbf68a43362acbd1812924938436562db3

[COMMIT MESSAGE]:- spring security with custom user details and user details service||- preparation of rest forms with angular for city and country
=========================================================

+ @PostAuthorize("hasRole('ROLE_USERS') and returnObject.user == authentication.name")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=35&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.employee?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
- @PostAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e9146edeec352d15c1cf81872f146fdade0c7e74

[COMMIT MESSAGE]:Convert trackr to Spring Boot.||This introduces a lot of new stuff and removes some.

Features that are not anymore in trackr are:
* Credentials and authorities. They are provided from the tech portal.
* Automatic deactivation of employees.

The Spring profiles in trackr are less technical and allow gradually
switching on and off features instead of being just prod, qs and dev.
=========================================================

+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject?.employee?.email == principal?.username")
- @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.username == returnObject.employee.email")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.email == principal?.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/006ab0533fba6e0cd3011aa1ae46b03a92b7c6ef

[COMMIT MESSAGE]:TRACKR-221 - Use ?. operator in principal id checks for security||
=========================================================

- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")
- @PostAuthorize("hasRole('ROLE_ADMIN') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or principal?.id == returnObject.employee.id")
- @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and returnObject.employee.id == principal.id )")
+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or returnObject.employee.id == principal?.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/techdev-solutions/trackr-backend/commit/e95acdf019c27d69c989913538180d66ab6f45b5

[COMMIT MESSAGE]:TRACKR-54 - Request vacation||Added further vacation request tests and an event handler
=========================================================

+ @PostAuthorize("hasRole('ROLE_SUPERVISOR') or ( isAuthenticated() and principal.id == returnObject.employee.id )")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=36&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/a150b464/synergy-bank/commit/50f95405c53b315a507e417590c37574dbe3fe8a

[COMMIT MESSAGE]:Lock and Unlock||
=========================================================

+ @PostAuthorize("returnObject.validateUserId(principal.username)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vsushko/research/commit/db98634c7cd83a2053b6245bf3cdc26382b9fc85

[COMMIT MESSAGE]:complete chapter10||
=========================================================

+ @PostAuthorize("returnObject.spitter.username == pincipal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/cfc8dccf8064e569f2681d626fbf49d288d4d0c5

[COMMIT MESSAGE]:security work||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ // @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eugenp/course/commit/114fd74014a77830df458d01976fee075a42fb31

[COMMIT MESSAGE]:acl work||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/GWA-Portal/commit/dfaea8487bc567b92f7725c13e1f4d277188dcc3

[COMMIT MESSAGE]:Introduction of AclManager and refactoring of service methods||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'READ')")
+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/GWA-Portal/commit/9f186fdbace60cecada0d35b805d9ae819785fcb

[COMMIT MESSAGE]:new simpler permission system||
=========================================================

-@PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/timeu/GWA-Portal/commit/525e9454a43acd45b27e910e8749f502a9f20ff8

[COMMIT MESSAGE]:Initial import server packages||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'READ')")
+ @PostAuthorize("hasPermission(returnObject,'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/keslerm/reloader-tracker/commit/37dfa71afd6c3f64cb5061306d00d333b8babcea

[COMMIT MESSAGE]:Updating some security related things around recipes and just changing||the struture of things a bit around handling domain objects.

DTO Mapping is moving to the Controller layer.
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') || returnObject.userId == principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/keslerm/reloader-tracker/commit/3ff236d31d3bee2b25303da815079646f2c52d8d

[COMMIT MESSAGE]:Cleaning up some old dependencies and working on refactoring a lot of||the old getByUserId and using Spring Security pre/post filtering and
authorization.
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') || returnObject == null || returnObject.userId == principal.id")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=37&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/2c9a3b348c45042c3e16b2f33f9d74f7fd06bcae

[COMMIT MESSAGE]:Authorization - service layer + presentation - need some testing and …||…cleaning, but otherwise done
=========================================================

- @PostAuthorize("hasRole('ADMINISTRATOR') OR "
- @PostAuthorize("hasRole('ADMINISTRATOR') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/4fb80761a94c866b8083bcb7d5afaeea4daeed46

[COMMIT MESSAGE]:Authorization mostly on service layer||
=========================================================

+ @PostAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/biyefeilan/xyplatform/commit/271465ebb650bc4437bf92c6ada783684436af5f

[COMMIT MESSAGE]:first commit||
=========================================================

+ @PostAuthorize("returnObject.id == T(Long).parseLong(principal.username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thm-projects/arsnova-lms-connector/commit/1f0aeed3f5df7710b2017439b8c3b7cd28200894

[COMMIT MESSAGE]:Added authentification filter, handler and tokenservice.||
=========================================================

+ @PostAuthorize("isAuthenticated()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/9c88ba965bd4a135842c8dfdf2db2a0c76d2808a

[COMMIT MESSAGE]:CLOUD-41897 Remove Security annotations from DB layer||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/danillogontijo/geddireto/commit/79b832137f6c67b1c1778eabe52ec0dce3a5ec25

[COMMIT MESSAGE]:No commit message||
=========================================================

+ //@PostAuthorize("returnObject.idCarteira == principal.idCarteira")
+ //@PostAuthorize("returnObject.idCarteira == principal.idCarteira")
+ @PostAuthorize("(returnObject == null) or (returnObject.carteira.idCarteira == principal.idCarteira)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jmisur/javaagent/commit/2e7692adc1a85f520b4c7229ecff849ff4a6b9ef

[COMMIT MESSAGE]:spring security poc||
=========================================================

+ @PostAuthorize("returnObject.token == principal.username.toUpperCase()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vinutaNagaraddi/SpringStrutsTest/commit/d2ec5b44192ae4e8d7a235e20c1708a536739e55

[COMMIT MESSAGE]:First Commit of Spring_Struts projecct||
=========================================================

+ //@PostAuthorize("returnObject.person.lastName == 'Naga'")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=38&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/02f43ee645c6ed2c86f82bbc4f47d25647c914e7

[COMMIT MESSAGE]:changes made to be running with transfer app.||Added fields for NA values of dates.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/ab2a98580f8ac2e53384d19c353ddeb2f415b6dd

[COMMIT MESSAGE]:added TarnsferApplication Resource||cleaning getMyUser
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/986af4fa0770f9e78fda840dbf4f0f205ac190de

[COMMIT MESSAGE]:re enabled restrictions on group service and person service calls||
=========================================================

- //@PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")
+ @PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/7f2b4d61730b1cdcb586cb7519c919dd0396febb

[COMMIT MESSAGE]:Added sortBy, startIndex, count support on the External Group Provide…||…r to be used in SURFteams
=========================================================

- @PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")
+ //@PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/0a7472e20d0f21c90257471ec44afc5873e2013c

[COMMIT MESSAGE]:BACKLOG-387: implementation of person api: access control; mock ldap …||…service; mock eb service;
=========================================================

+ @PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mff-uk/ODCS/commit/638ebe28563e951b6a8393554a531048d8b47fd1

[COMMIT MESSAGE]:Facades split into interfaces and implementations||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'view')")
+ @PostAuthorize("hasPermission(returnObject,'view')")
- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=39&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/eaglestorm/Eldar-Works/commit/7a2180655228565d596d2152d372b5a3dada0848

[COMMIT MESSAGE]:changed to web api and client.||
=========================================================

+ //@PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tomekl007/spitterMVCplusHibernate/commit/0bac83428d85ca0e8c4e7d474bdcd0b4735f1805

[COMMIT MESSAGE]:add RESTfull services||
=========================================================

- @PostAuthorize("returnObject.spitter.username==principal.username")
+ //@PostAuthorize("returnObject.spitter.username==principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tomekl007/spitterMVCplusHibernate/commit/56eaf6be846c07a276af1d021b26caa3922a22af

[COMMIT MESSAGE]:add custom login, using plain Text, DB, or ldap||
=========================================================

+ @PostAuthorize("returnObject.spitter.username==principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/flybigcat/TicTacToeGame/commit/bab05b3c16da11659e8c17522f893a6f6c9cd3a6

[COMMIT MESSAGE]:TicTacToe Game (full version)||
=========================================================

+ @PostAuthorize("principal.username == returnObject.player1.username")
+@PostAuthorize("principal.username == returnObject.player1.username") is used for method

=========================================================
[CODE-CHANGE-URL]:https://github.com/jinloes/secrets/commit/3a703ff8a57ca2842641d72e155111f2af6c1a99

[COMMIT MESSAGE]:added get secret||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
- //@PostAuthorize("1 == 2")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jinloes/secrets/commit/d9fb8dd760826703aa3f30b4a9bad74bc94b561e

[COMMIT MESSAGE]:added security to the secrets||
=========================================================

+ //@PostAuthorize("1 == 2")

=========================================================
[CODE-CHANGE-URL]:https://github.com/marroqui69/lucychang2/commit/89eed03deb52813d1b70a6a5018b9dd249dea406

[COMMIT MESSAGE]:init||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/steveschrader/SE4/commit/2a5a39f6073d87b3eb8cea027bdb9d916a3a0842

[COMMIT MESSAGE]:Layout en het creëeren en bewerken van de rol van een partij werkt nu||met een wrapper klasse. Het valideren lukt niet goed, nakijken!
=========================================================

+ //@PostAuthorize("#model.get('rol').partij.emailadres == authentication.principal.username")
- @PostAuthorize("#model.get('rol').partij.emailadres == authentication.principal.username")
+// @PostAuthorize("#model.get('rol').partij.emailadres == authentication.principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/steveschrader/SE4/commit/d79a3f80c25f3b9f499a2a1da66efa1c460e6152

[COMMIT MESSAGE]:Administrator Rol werkt volledig met inloggen en de juiste pagina's||worden dan ook getoond
=========================================================

+ @PostAuthorize("#model.get('rol').partij.emailadres == authentication.principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/steveschrader/SE4/commit/fb8e472476808a7c5aa2282b494cbfe726da6fd8

[COMMIT MESSAGE]:commit||
=========================================================

+ @PostAuthorize("#model.get('rol').partij.emailadres == authentication.principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=40&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/spebbe/cryson/commit/3ca1a4e2f575f5d7184a7ebff55024b548794132

[COMMIT MESSAGE]:Don't try to validate deleted entity.||
=========================================================

- @PostAuthorize("hasPermission(#entity, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spebbe/cryson/commit/1d56743aafa46b6ec794a97a6943ebab253175f9

[COMMIT MESSAGE]:Extended support for Restrictable entities.||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spebbe/cryson/commit/0a5811fe9153fcef77bc908d1da9430d8fad549e

[COMMIT MESSAGE]:Check permissions on refreshed version of updated entity.||
=========================================================

- @PostAuthorize("hasPermission(#entity, 'write')")
+ @PostAuthorize("hasPermission(returnObject, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spebbe/cryson/commit/8540c1de69556dacd7366250209f51577c4c4603

[COMMIT MESSAGE]:Authorization was messed up -- trying to fix.||
=========================================================

+ @PostAuthorize("hasPermission(#entity, 'write')")
+ @PostAuthorize("hasPermission(#entity, 'read')")
+ @PostAuthorize("hasPermission(#entity, 'write')")
+ @PostAuthorize("hasPermission(#entity, 'write')")
+ @PostAuthorize("hasPermission(returnObject, 'read') and hasPermission(returnObject, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spebbe/cryson/commit/6bcfce6ed2ccb7f410d4175ea85faf9ccda00a4f

[COMMIT MESSAGE]:Imported server and client sources.||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/adf2a6c521a0a873a07be5c849b4cac7d8798df7

[COMMIT MESSAGE]:In case Widget object was coming null for new URL @PostAuthorize was …||…throwing Access is denied.RAVE-400

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1230851 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/adf2a6c521a0a873a07be5c849b4cac7d8798df7

[COMMIT MESSAGE]:In case Widget object was coming null for new URL @PostAuthorize was …||…throwing Access is denied.RAVE-400

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1230851 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2dbe0052b0f45741f4e5db56d9dbb2ebd2dc540f

[COMMIT MESSAGE]:RAVE-319: Widget persistence not working||Added @Transaction annotation to the registerNewWidget and updateWidget methods to ensure JPA commits

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190457 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- * @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/2bc596199b198853e08c6abc174e64f27b5240c6

[COMMIT MESSAGE]:RAVE-310: fixed incorrect security annotation on updateWidget (admins…||… can now update non-owned widgets)

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190386 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ * @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/yoshutch/mybyu/commit/d0c37171d5da56d4b2681cfd56da45293771fc2b

[COMMIT MESSAGE]:UP-2950 Adding support and configuration for Spring Security annotati…||…on-based permission expressions under a pre-authentication setup. This commit also includes adding support for SpringMVC's ContentNegotiatingViewResolver.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Michielst/lucychangREST/commit/1c4a9ca6d8b938bfd44c369b34d519f75f971f5b

[COMMIT MESSAGE]:changes||
=========================================================

+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+ @PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
+@PostAuthorize("#model.get('rol').persoon.emailadres == authentication.principal.username")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=41&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/dschadow/JavaSecurity/commit/46589ca192324a9ea7ef0be8bcd2a11c4137a7c3

[COMMIT MESSAGE]:Introduced service class with method level security||
=========================================================

+ @PostAuthorize("returnObject.username == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/michaelkrog/orderly-server/commit/c5e12311f1aac85693d9b7db11a06d660c6cba8c

[COMMIT MESSAGE]:Lots of work on CORS and details that make things start to work on mo…||…bile.
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or @relationService.isRelated(principal.person, returnObject.domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ivanplese/spring-security-demo/commit/ee1244591e480f8c3b318f1a09819e21ad70fa61

[COMMIT MESSAGE]:inital commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/75c363593ad90a1328c656c2be150be6f66fd6fe

[COMMIT MESSAGE]:RAVE-475: Create Person Profile page based off of a PageTemplate||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1294003 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/755068177ebf796d7014b9e095bb251fd34f8d55

[COMMIT MESSAGE]:Code in support of RAVE-458: Person Profile multiple sub-pages||- added infrastructure to allow for a hierarchy of Page objects for any Page Type (USER, PERSON_PROFILE)


git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1291474 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/ef31170d554b8d7b25e0af2f2f8cefc9f0dcf188

[COMMIT MESSAGE]:Changes in support of RAVE-298:||- created common AbstractRestApi class
- updated the DefaultPagePermissionEvaluator to handle permission checks when the object to be checked differs from the returned Object
- secured remaining PageService methods that deal with Page objects, except addNewDefaultPage (see RAVE-303)


git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1185340 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/91c2fda6a260a84bb8b8387802788feb055d24e8

[COMMIT MESSAGE]:Code to support RAVE-298 (unchecked page manipulations):||- implemented DefaultPagePermissionEvaluator
- protected one PageService method: getPage
- added handleAccessDeniedException to o.a.r.p.w.a.rest.PageApi
- fixed permissionEvaluator bean definition in applicationContext-security.xml to prevent duplicate bean creation

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1183496 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/5b7bb2e236491583e8205cd717ae1715c765b7dc

[COMMIT MESSAGE]:link Course with CourseResource||
=========================================================

+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/c25ae7693c42b96cf3c613fcabe3ffdd070ebb52

[COMMIT MESSAGE]:Link User with coursegroups||
=========================================================

+ @PostAuthorize("@access.hasPermission('user', false, true, false, false)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KUTCO/SchoolHub/commit/df76c4b09d25824960ce6df7de846229b0e3ba7c

[COMMIT MESSAGE]:Add LinkerControl functions for views||
=========================================================

+ @PostAuthorize("@access.hasPermission('admin', true, true, true, true)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=42&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93

[NEXT-PAGE-URL]:https://github.com/search?l=java&p=43&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PostAuthorize("returnObject.createdBy==principal.username")
+ @PostAuthorize("returnObject.username==principal.username or hasAnyRole('adminPrivilege','managerPrivilege')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myhall/PA165_DeliveryService/commit/33456fd2a71a5223d6ac11c28f18138fe6fcb796

[COMMIT MESSAGE]:Access rights for service layer methods + facade||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
+ @PostAuthorize("hasRole('ROLE_ADMIN') or "

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myhall/PA165_DeliveryService/commit/33456fd2a71a5223d6ac11c28f18138fe6fcb796

[COMMIT MESSAGE]:Access rights for service layer methods + facade||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
+ @PostAuthorize("hasRole('ROLE_ADMIN') or "

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/3e766437ab4474111f7a4c8a980f5f2e9574094e

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/296ebe880482ebcd493dc091d04de5c9caa95a39

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username)")
+ @PostAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/uPortal/commit/d0c37171d5da56d4b2681cfd56da45293771fc2b

[COMMIT MESSAGE]:UP-2950 Adding support and configuration for Spring Security annotati…||…on-based permission expressions under a pre-authentication setup. This commit also includes adding support for SpringMVC's ContentNegotiatingViewResolver.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=44&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/71d000be167d856372e8d65f528151400fd9f0a8

[COMMIT MESSAGE]:Fixed issue with null values. Everything but file upload is working.||Notice wierd qwerk with hibernate and embedded objects.  It is updating
them unnecissarily.
=========================================================

- @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/a561ade948aac1f2a4186c81bd0c593dd2ae1afd

[COMMIT MESSAGE]:-Added fuctionality to get all responses for a given form id.||-Implemented new sorting and pagination method.
-Made adjustments to security requirements.
=========================================================

+ @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kumlien/school/commit/d542eadb04839c32abd634d14f2eb91054abee82

[COMMIT MESSAGE]:Lägg till lite mer security||
=========================================================

+ @PostAuthorize("(returnObject.body != null and returnObject.body.username == principal.username) or hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/2c9a3b348c45042c3e16b2f33f9d74f7fd06bcae

[COMMIT MESSAGE]:Authorization - service layer + presentation - need some testing and …||…cleaning, but otherwise done
=========================================================

- @PostAuthorize("hasRole('ADMINISTRATOR') OR "
- @PostAuthorize("hasRole('ADMINISTRATOR') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/4fb80761a94c866b8083bcb7d5afaeea4daeed46

[COMMIT MESSAGE]:Authorization mostly on service layer||
=========================================================

+ @PostAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/ab2a98580f8ac2e53384d19c353ddeb2f415b6dd

[COMMIT MESSAGE]:added TarnsferApplication Resource||cleaning getMyUser
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=45&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c60f10d5517c2863228024c6ff5e8b5edb335ceb

[COMMIT MESSAGE]:[minor] Client access||Change-Id: Iaae5b30d6263819295733d554927965bf613a9c1
=========================================================

- @PostAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")
+ @PostAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(returnObject, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c7d573e65e4eb1a4d1c1643413a1c341e495b7a9

[COMMIT MESSAGE]:[CRM-23] Services server side authorization.||Change-Id: I79ebb863bb13fdf6de0de75a7880480f39409725
=========================================================

+ @PostAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/razbomi/boxing-spring-boot/commit/5529952140175ce237cc234d1782df4a5f3b89b5

[COMMIT MESSAGE]:initial commit||Greeting service and file uploads, playing
=========================================================

+ // @PostAuthorize("hasPermission(returnObject, read)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/39fa37b0e8c544bb1cacc5a2c7e0246bfef12664

[COMMIT MESSAGE]:RAVE-835 Merge all from model-split at 1403154 (reintegration)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1403166 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2da933e9653c5317d1d84b8ae5c6f94e38e2cacc

[COMMIT MESSAGE]:Promote rave to a TLP -- INFRA-4573||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1305402 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/if052java/if052/commit/81542881cdec2bb941636fc9dbcc15efaed0a030

[COMMIT MESSAGE]:AddressResource methods secured||
=========================================================

-// @PostAuthorize("returnObject.user.userId == principal.username")
- @PostAuthorize("hasPermission(returnObject, 'get')")
+ @PostAuthorize("hasPermission(returnObject, 'getAddress')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/if052java/if052/commit/53eec2e6b02a5300c6d3ca82cf3278741050d01f

[COMMIT MESSAGE]:address/{addressId} rest endpoint secured with CustomPermissonEvaluator||
=========================================================

+// @PostAuthorize("returnObject.user.userId == principal.username")
+ @PostAuthorize("hasPermission(returnObject, 'get')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lletsica/my_test_repo/commit/c628bccc4139c56c83cd221a6e6ff09d6895a571

[COMMIT MESSAGE]:Proyeto montado con tomcat Rave||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=46&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/lletsica/my_test_repo/commit/c628bccc4139c56c83cd221a6e6ff09d6895a571

[COMMIT MESSAGE]:Proyeto montado con tomcat Rave||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/9c88ba965bd4a135842c8dfdf2db2a0c76d2808a

[COMMIT MESSAGE]:CLOUD-41897 Remove Security annotations from DB layer||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/43c9a6374c8206bf64babb2c4a3c42a6881c7160

[COMMIT MESSAGE]:CLOUD-872 create new security- group and rule resources||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/bc498a2f04214d86154da94bdca635574a669253

[COMMIT MESSAGE]:CLOUD-659 create network abstraction||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/9c88ba965bd4a135842c8dfdf2db2a0c76d2808a

[COMMIT MESSAGE]:CLOUD-41897 Remove Security annotations from DB layer||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/9c88ba965bd4a135842c8dfdf2db2a0c76d2808a

[COMMIT MESSAGE]:CLOUD-41897 Remove Security annotations from DB layer||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/43c9a6374c8206bf64babb2c4a3c42a6881c7160

[COMMIT MESSAGE]:CLOUD-872 create new security- group and rule resources||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=47&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/fc0d75709de4b59142028bfb118704ab5ffcc28d

[COMMIT MESSAGE]:Muokattu tekstikappalenäkymä tukemaan viiteid:tä||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/8537365888800646f1bd2243b76a9cfacb546537

[COMMIT MESSAGE]:Tutkinnon osien käsittely viitteiden avulla refactorointi.||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.tutkinnonOsaDto.id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/feecc4fd868c42eef0b8233dc14b4403d1c81b58

[COMMIT MESSAGE]:kosmeettisia muutoksia||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.id, 'perusteenosa', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/deef82e74791ffa5a2fe5057ba9f3e7851cca7b5

[COMMIT MESSAGE]:Oikeustarkistelun toteutusta.||Perusteenosiin liittyvän perusteprojektin hakeminen. Perustetta tai
perusteen osaa ei voi enää muokata ellei se kuulu käynnissä olevaan
perusteprojektiin (osa tarkistuksista puuttuu yhä).
=========================================================

+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sovanegger/filmplanning/commit/9cb65dafdbaabdbaeb60f7b159c430ca5d1d5538

[COMMIT MESSAGE]:commiting all src/||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'ADMINISTRATION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=48&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/71d000be167d856372e8d65f528151400fd9f0a8

[COMMIT MESSAGE]:Fixed issue with null values. Everything but file upload is working.||Notice wierd qwerk with hibernate and embedded objects.  It is updating
them unnecissarily.
=========================================================

- @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/a561ade948aac1f2a4186c81bd0c593dd2ae1afd

[COMMIT MESSAGE]:-Added fuctionality to get all responses for a given form id.||-Implemented new sorting and pagination method.
-Made adjustments to security requirements.
=========================================================

+ @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/8ffff3ce48d9da997e91ecf13f8a32f1098116fa

[COMMIT MESSAGE]:+Checks for expired forms||+If getFormById fails because of authorization or privacy levels or expired then return a hollow form with just meta data
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN') or returnObject.getEnabled()==true and returnObject.getPubli()==true or returnObject.getEnabled()==true and hasRole('ROLE_USER')" )
+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN') or returnObject.getEnabled()==true and returnObject.getPubli()==true and returnObject.isExpired()==false or returnObject.getEnabled()==true and hasRole('ROLE_USER') and returnObject.isExpired()==false" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/5257ad14ea28d0b1539f25d719a5a0e8730ff4ec

[COMMIT MESSAGE]:+Implemented enable/disable and public/restricted security for the fo…||…rms resource.

+Added "PHONE" to the validation enum
+Added a default "PLAIN" value when creating a new Form
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN') or returnObject.getEnabled()==true and returnObject.getPubli()==true or returnObject.getEnabled()==true and hasRole('ROLE_USER')" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/bogic-past/waterchannel/commit/748c7459177564814f4b5bdb84eb0f7971c3264d

[COMMIT MESSAGE]:Added changes||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'getAddress')")
+ @PostAuthorize("hasPermission(returnObject, 'getWaterMeter')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/KosteCZ/so-tired-information-system/commit/9b700787a8304bbf3f0ef1a090b9466ed505ac5f

[COMMIT MESSAGE]:- Service security||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=49&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/KosteCZ/so-tired-information-system/commit/9b700787a8304bbf3f0ef1a090b9466ed505ac5f

[COMMIT MESSAGE]:- Service security||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
+ @PostAuthorize("hasRole('ROLE_ADMIN') or "

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/6ad9916702f7f90b282b9fa561977e0cecccc3e5

[COMMIT MESSAGE]:oprava drobnych chyb||
=========================================================

- @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplaySeller(returnObject)")
- @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplaySeller(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/47f0dd1945dae7979bdff681d7e8a9a05fc2e759

[COMMIT MESSAGE]:pridani podpory pro logovani||
=========================================================

+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/8f04e52503abdade8db194278140037da3a83edf

[COMMIT MESSAGE]:nova verze||
=========================================================

- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_sellers_all') or returnObject.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/c45447e04603745d6c9aa5dc934d9074087fe660

[COMMIT MESSAGE]:uprava zabezpeceni||
=========================================================

+ @PostAuthorize("isAnonymous() or hasRole('ROLE_per_sellers_all') or returnObject.id == principal.sellerId")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/05497cc0d509aa63ebf1c8badec71e15fa2aa78e

[COMMIT MESSAGE]:editace profilu, captcha atd.||
=========================================================

- @PostAuthorize("isAnonymous() or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")

=========================================================
[CODE-CHANGE-URL]:https://github.com/akuepfer/coursera-mobile-cloud-computing-with-android/commit/718095fbb5839655a2f59c1787bc2256ca58b8f4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.doctorId == principal.id")
+ @PostAuthorize("returnObject.doctorId == authentication.id")
+ @PostAuthorize("returnObject.Id == principal.id || returnObject.doctorId == principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/9c88ba965bd4a135842c8dfdf2db2a0c76d2808a

[COMMIT MESSAGE]:CLOUD-41897 Remove Security annotations from DB layer||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sequenceiq/cloudbreak/commit/bc498a2f04214d86154da94bdca635574a669253

[COMMIT MESSAGE]:CLOUD-659 create network abstraction||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/a79dc2dde57d34fe478c83e01a9fef7fe67941d9

[COMMIT MESSAGE]:Added 004-method-authorization-using-acls.||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read)")
+ @PostAuthorize("(hasPermission(returnObject, read) and returnObject.visible) or hasPermission(returnObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/1ca75a3cb5f864a58533b1d1eebb44b61a98f928

[COMMIT MESSAGE]:Added 005-view-authorization-using-acls||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read)")
+ @PostAuthorize("(hasPermission(returnObject, read) and returnObject.visible) or hasPermission(returnObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thepresbyterian/topchef/commit/2ef860afaf9d4a218818400ef057a8b4f3b5f0ea

[COMMIT MESSAGE]:Publishing to GitHub||
=========================================================

+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("isAuthenticated()")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') and @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=50&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/9c5aed234502a56f789d2319caa3b0e0a5d23132

[COMMIT MESSAGE]:RAVE-731 Refactored WidgetComment to no longer need the widgetID attr…||…ibute.

git-svn-id: https://svn.apache.org/repos/asf/rave/branches/model-split@1394834 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/0acaf1f25e712b4ec3c9930bec04baa62f7e841e

[COMMIT MESSAGE]:In case Widget object was coming null for new URL @PostAuthorize was …||…throwing Access is denied.RAVE-400

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1230851 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/0acaf1f25e712b4ec3c9930bec04baa62f7e841e

[COMMIT MESSAGE]:In case Widget object was coming null for new URL @PostAuthorize was …||…throwing Access is denied.RAVE-400

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1230851 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/2dbe0052b0f45741f4e5db56d9dbb2ebd2dc540f

[COMMIT MESSAGE]:RAVE-319: Widget persistence not working||Added @Transaction annotation to the registerNewWidget and updateWidget methods to ensure JPA commits

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190457 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- * @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/2bc596199b198853e08c6abc174e64f27b5240c6

[COMMIT MESSAGE]:RAVE-310: fixed incorrect security annotation on updateWidget (admins…||… can now update non-owned widgets)

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190386 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ * @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PostAuthorize("returnObject.createdBy==principal.username")
+ @PostAuthorize("returnObject.username==principal.username or hasAnyRole('adminPrivilege','managerPrivilege')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PostAuthorize("returnObject.createdBy==principal.username")
+ @PostAuthorize("returnObject.username==principal.username or hasAnyRole('adminPrivilege','managerPrivilege')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/39fa37b0e8c544bb1cacc5a2c7e0246bfef12664

[COMMIT MESSAGE]:RAVE-835 Merge all from model-split at 1403154 (reintegration)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1403166 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2da933e9653c5317d1d84b8ae5c6f94e38e2cacc

[COMMIT MESSAGE]:Promote rave to a TLP -- INFRA-4573||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1305402 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lletsica/my_test_repo/commit/c628bccc4139c56c83cd221a6e6ff09d6895a571

[COMMIT MESSAGE]:Proyeto montado con tomcat Rave||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=51&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-samples-securemail/commit/6b22d786029ce7e2f142f25d21cd931effa6d2e0

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/e3f7f4c6034697b476db9e7ca8e6021fcf4395b4

[COMMIT MESSAGE]:Updated page service to create instances of pages by page template id…||… RAVE-1066

git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1531267 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/87f01bea2a8ccc9eb8c0396c837429d6383a4bae

[COMMIT MESSAGE]:Changing to filter permission annotation (RAVE-1054)||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1521535 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/1bd8c9e663ea6c17cdaad1769e89c03d61615ee1

[COMMIT MESSAGE]:Fixed service permission annotation (RAVE-1054)||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1521345 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/7a43cad0deac81e5e5a08fb50906c2b90bf7ca84

[COMMIT MESSAGE]:Fill out controllers, add 204 response filter||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1510718 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/9cbfd16293260a48e5e5895c556ac7142330df49

[COMMIT MESSAGE]:RAVE-1011: Update page service to support get all / get limited||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1508584 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/cc247d6114bb520ecdf0dda32cc8e6f30ccb03c0

[COMMIT MESSAGE]:Updates and changes to implement page sharing between rave users. See…||… RAVE-103. (Support shared spaces.)

git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1335687 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/a94b16a309511b320c9e0f64479a25ece0eab12a

[COMMIT MESSAGE]:RAVE-475: Create Person Profile page based off of a PageTemplate||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1294003 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/f7084fdd8f1b5c8dcf1d2215dc906927eec0d04e

[COMMIT MESSAGE]:Code in support of RAVE-458: Person Profile multiple sub-pages||- added infrastructure to allow for a hierarchy of Page objects for any Page Type (USER, PERSON_PROFILE)


git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1291474 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/ef31170d554b8d7b25e0af2f2f8cefc9f0dcf188

[COMMIT MESSAGE]:Changes in support of RAVE-298:||- created common AbstractRestApi class
- updated the DefaultPagePermissionEvaluator to handle permission checks when the object to be checked differs from the returned Object
- secured remaining PageService methods that deal with Page objects, except addNewDefaultPage (see RAVE-303)


git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1185340 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/91c2fda6a260a84bb8b8387802788feb055d24e8

[COMMIT MESSAGE]:Code to support RAVE-298 (unchecked page manipulations):||- implemented DefaultPagePermissionEvaluator
- protected one PageService method: getPage
- added handleAccessDeniedException to o.a.r.p.w.a.rest.PageApi
- fixed permissionEvaluator bean definition in applicationContext-security.xml to prevent duplicate bean creation

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1183496 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/6e886c74aa02a87db9705ef27ebf8bae70f7689b

[COMMIT MESSAGE]:Updated page service to create instances of pages by page template id…||… RAVE-1066

git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1531267 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/ad607595994288cd8e9cb343cf72278d0d44dedc

[COMMIT MESSAGE]:Changing to filter permission annotation (RAVE-1054)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1521535 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/ceb1665b0d5653ff71f2ef7f0ade85f098ca1631

[COMMIT MESSAGE]:Fixed service permission annotation (RAVE-1054)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1521345 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/c3bc0ff1f19a992bb6891aa17ea16d47bc6138eb

[COMMIT MESSAGE]:Fill out controllers, add 204 response filter||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1510718 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/f9bb62c515751b1859af25c5af4fff7e41ec8de7

[COMMIT MESSAGE]:RAVE-1011: Update page service to support get all / get limited||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1508584 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/39fa37b0e8c544bb1cacc5a2c7e0246bfef12664

[COMMIT MESSAGE]:RAVE-835 Merge all from model-split at 1403154 (reintegration)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1403166 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2b3b144d1fb7fd43891b8f682768b7d6affceb47

[COMMIT MESSAGE]:Updates and changes to implement page sharing between rave users. See…||… RAVE-103. (Support shared spaces.)

git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1335687 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2da933e9653c5317d1d84b8ae5c6f94e38e2cacc

[COMMIT MESSAGE]:Promote rave to a TLP -- INFRA-4573||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1305402 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/cb2223acb6d48c0b4db0a01950fee2da7d3f7913

[COMMIT MESSAGE]:pieniä parannuksia rajapintaan||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject.id, 'peruste', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/8537365888800646f1bd2243b76a9cfacb546537

[COMMIT MESSAGE]:Tutkinnon osien käsittely viitteiden avulla refactorointi.||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.tutkinnonOsaDto.id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/deef82e74791ffa5a2fe5057ba9f3e7851cca7b5

[COMMIT MESSAGE]:Oikeustarkistelun toteutusta.||Perusteenosiin liittyvän perusteprojektin hakeminen. Perustetta tai
perusteen osaa ei voi enää muokata ellei se kuulu käynnissä olevaan
perusteprojektiin (osa tarkistuksista puuttuu yhä).
=========================================================

+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Angry-Quester/applicationtracker/commit/305cd0ac19044e04f1af00fecbd436628a312749

[COMMIT MESSAGE]:Wip commit. Added some stupid code experiments with controller. Chang…||…ed all tabs to spaces
=========================================================

-// @PostAuthorize("hasPermission(returnObject, admin)")
+// @PostAuthorize("hasPermission(returnObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Angry-Quester/applicationtracker/commit/29f0782d57cc7d8403cf781877fbf552c31ac968

[COMMIT MESSAGE]:Added 'Login controller' and simple logic to process login failure. S…||…witched off method security.
=========================================================

- @PostAuthorize("hasPermission(returnObject, admin)")
+// @PostAuthorize("hasPermission(returnObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Angry-Quester/applicationtracker/commit/de843a7fd3238f183253fe1aff259380f3ea5db5

[COMMIT MESSAGE]:Big success. Somehow it feels mute though. ACL started to work, event…||…ually. Everything that is left is to create administrative tools, and the whole infrastructure to support security requirements. As simple as an apple pie :) Just agonising, don't mind...
=========================================================

+ @PostAuthorize("hasPermission(returnObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lletsica/my_test_repo/commit/c628bccc4139c56c83cd221a6e6ff09d6895a571

[COMMIT MESSAGE]:Proyeto montado con tomcat Rave||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=52&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/qiaoma/tic_tac_toe/commit/b76b8f3f67ef8146688235a64a84e69b2e4607e4

[COMMIT MESSAGE]:Initial commit on Tic Tac Toe app||
=========================================================

+ //@PostAuthorize("principal.username == returnObject.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/47f0dd1945dae7979bdff681d7e8a9a05fc2e759

[COMMIT MESSAGE]:pridani podpory pro logovani||
=========================================================

+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/8f04e52503abdade8db194278140037da3a83edf

[COMMIT MESSAGE]:nova verze||
=========================================================

- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_sellers_all') or returnObject.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/05497cc0d509aa63ebf1c8badec71e15fa2aa78e

[COMMIT MESSAGE]:editace profilu, captcha atd.||
=========================================================

- @PostAuthorize("isAnonymous() or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/fc327c0dfd7b996a2e185588c2b31f49d648660f

[COMMIT MESSAGE]:zabezpeceni, uprava editace inzeratu||
=========================================================

+ @PostAuthorize("isAnonymous() or returnObject.seller.id == principal.sellerId")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=53&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/7573106cf1b92176585ab549e6a4b563afd46160

[COMMIT MESSAGE]:Bugfixes and new SQL sample tables.||-fixed "Unable to locate ACE" error by changing the third contructor
bean for the aclAuthorizationStrategyImpl in aclConfig.xml so that
ROLE_USER is now allowed to edit object permissions.
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/TheGreenLark/plantApp/commit/a09c07008b2608c877315bd8f7597b0d7be3b954

[COMMIT MESSAGE]:replaced honors.uh.edu with dash as package||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
- @PostAuthorize("hasPermission(returnObject, 'WRITE')")
- @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/openmhealth/omh-dsu-ri/commit/52606c28c271e3853ab04168d6a077bd2b98c014

[COMMIT MESSAGE]:Update the data point controller with OAuth2 authorization annotations.||
=========================================================

+ @PostAuthorize("returnObject.body == null || returnObject.body.userId == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/chpladmin/chpl-api/commit/57db02fd4cf11eed8ba2ffd22e54e611ecba098f

[COMMIT MESSAGE]:Fixed issue in UserManagementController which prevented users from||changing their passwords.
=========================================================

+ @PostAuthorize("hasRole('ROLE_USER_AUTHENTICATOR') or hasRole('ROLE_ADMIN') or hasPermission(returnObject, 'read') or hasPermission(returnObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

+ @PostAuthorize("@fulfillmentPermissionService.hasPermission(principal, returnObject.body.data.get(\"order\").getId(), 'MANAGE_POD')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=54&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/europeana/Europeana-Cloud/commit/87c3f45f102965c981325a15a84f52f77567fffe

[COMMIT MESSAGE]:ECL-441: permission-rest-api, permissions for repr-versions, + tests||
=========================================================

+ @PostAuthorize("hasPermission"

=========================================================
[CODE-CHANGE-URL]:https://github.com/europeana/Europeana-Cloud/commit/011ac27420e62a4b1cabdfca3ed46df37d00fb40

[COMMIT MESSAGE]:mcs-rest: moved permissions at version-level||
=========================================================

- @PostAuthorize("hasPermission"

=========================================================
[CODE-CHANGE-URL]:https://github.com/europeana/Europeana-Cloud/commit/99b1f5da1e0763c4a88c8a6522fddf2208da61f3

[COMMIT MESSAGE]:ECL-109 - fix bug - files are not deleted from openstack||
=========================================================

+ @PostAuthorize("hasPermission"

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/90a67a6947c165e270236713a152b108608ef569

[COMMIT MESSAGE]:- 개인 페이지 기능 추가 /member/{id}||
=========================================================

- @PostAuthorize("(returnObject.email == principal.Username) or hasRole('ROLE_ADMIN')")
+// @PostAuthorize("(returnObject.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/32a1bd7fe28f4787278b6a37cc3666c69796e1ef

[COMMIT MESSAGE]:adding sources||
=========================================================

+ @PostAuthorize("(returnObject.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenGeoportal/OGP2/commit/4c8534a867fe608f322cdde347042a184867000e

[COMMIT MESSAGE]:Add: support for basic authentication to restricted GeoServer.||Add: wmc ui elements, added support for namespace prefixes in jaxb
implementation

Update: libraries; Spring, Spring Security, Jackson, underscore,
backbone, etc. (see pom.xml)

fix: removed version numbers from Spring application context schema
locations

fix: reimplemented load indicators: sometimes indicator wouldn't go away
after load.
=========================================================

+ //@PostAuthorize("hasPermission(#layerInfo, 'download')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nickguletskii/OpenOlympus/commit/d29c3a37cc3b6d46f92512aadb099d697a921db1

[COMMIT MESSAGE]:Secure services and controllers||
=========================================================

- @PostAuthorize("hasAuthority('SUPERUSER') or #returnObject.published")

=========================================================
[CODE-CHANGE-URL]:https://github.com/nickguletskii/OpenOlympus/commit/13263c6eab2a35f4088ab0632a02dae9d423c868

[COMMIT MESSAGE]:Squash partial rewrite branch and move into an orphan branch||Squashed and orphaned a local branch to avoid problems with incorrect
license headers, deleted dependencies, etc...

This is a partial rewrite/refactored version of OpenOlympus 0.0.1.
The web server is now used to provide a JSON API to a frontend written
in Angular and Bootstrap. This should make it easier to test. The
backend now utilises @JsonView and Spring Security expressions. JOOQ
is now used to generate native queries.
=========================================================

+ @PostAuthorize("hasAuthority('SUPERUSER') or #returnObject.published")

=========================================================
[CODE-CHANGE-URL]:https://github.com/if052java/if052/commit/d0f27ebe37f1b0e6ab3afd269d6d0e6b70e0d961

[COMMIT MESSAGE]:Conflicts resolved||
=========================================================

-// @PostAuthorize("returnObject.user.userId == principal.username")
- @PostAuthorize("hasPermission(returnObject, 'get')")
+ @PostAuthorize("hasPermission(returnObject, 'getAddress')")
+ @PostAuthorize("hasPermission(returnObject, 'getWaterMeter')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/if052java/if052/commit/da45ad863b33b9fc29216c4e65d214c9216b2cdb

[COMMIT MESSAGE]:WaterMeterResource methods secured||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'getWaterMeter')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=55&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/if052java/if052/commit/d0f27ebe37f1b0e6ab3afd269d6d0e6b70e0d961

[COMMIT MESSAGE]:Conflicts resolved||
=========================================================

-// @PostAuthorize("returnObject.user.userId == principal.username")
- @PostAuthorize("hasPermission(returnObject, 'get')")
+ @PostAuthorize("hasPermission(returnObject, 'getAddress')")
+ @PostAuthorize("hasPermission(returnObject, 'getWaterMeter')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/if052java/if052/commit/da45ad863b33b9fc29216c4e65d214c9216b2cdb

[COMMIT MESSAGE]:WaterMeterResource methods secured||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'getWaterMeter')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/AmericanConsultants/gsa-aeec-pool2-prototype/commit/8c875d1d8daca8f53ac1f28bf4c2428d59c2ed9e

[COMMIT MESSAGE]:Initial Commit||
=========================================================

+ @PostAuthorize("this.belongsToTenant(returnObject) && (hasAnyRole('ROLE_ADMIN_INVOICE','ROLE_RUN_AS_ADMIN_INVOICE') or this.belongsToUser(returnObject, authentication.name))")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_ADMIN_MEMBER') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("hasRole('ROLE_REINDEX') or (this.belongsToTenant(returnObject) and (hasAnyRole('ROLE_ADMIN_GYMNAST','ROLE_RUN_AS_ADMIN_GYMNAST') or this.belongsToUser(returnObject, authentication.name) or this.userIsInstructor(authentication.name) or this.sanitize(returnObject)))")
+ @PostAuthorize("this.belongsToTenant(returnObject) or hasRole('ROLE_REINDEX')")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasRole('ROLE_ALL_NOTIFICATIONS') or this.belongsToUser(returnObject, authentication.name)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("this.belongsToTenant(returnObject)")
+ @PostAuthorize("hasAnyRole('ROLE_ADMIN_CART','ROLE_RUN_AS_ADMIN_CART') or this.belongsToUser(returnObject, authentication.name)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/3418b4045c3ef65458ac00e4265d8e6a04231f6e

[COMMIT MESSAGE]:Permissions refactoring; User permissions removed, only user.manageme…||…nt permission remained. DPU template screen is now protected with new permission;
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'user.read')")
+ @PostAuthorize("hasPermission(returnObject, 'user.management')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/3f9ddecf74cad1bc6758c331c6953c4154e0f82b

[COMMIT MESSAGE]:new permission model||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'view')")
+ @PostAuthorize("hasPermission(returnObject,'pipeline.read')")
- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'user.read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/68229a28cd0f742ceeaf7964938f45fd4748ea97

[COMMIT MESSAGE]:user provisioning finished||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/5d9842d583e56f25940ececf01799e82824bcc63

[COMMIT MESSAGE]:user provisioning a case integracia||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/817237840498ada06aa99fd03fdc315a6b6fae0c

[COMMIT MESSAGE]:130 - the code was formatted by our template||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/638ebe28563e951b6a8393554a531048d8b47fd1

[COMMIT MESSAGE]:Facades split into interfaces and implementations||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'view')")
+ @PostAuthorize("hasPermission(returnObject,'view')")
- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/vimsvarcode/elmis/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

+ @PostAuthorize("@fulfillmentPermissionService.hasPermission(principal, returnObject.body.data.get(\"order\").getId(), 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anadon/spring-security-new-login/commit/a09756745fd95bcfa8c05eb977227ef06d929ad4

[COMMIT MESSAGE]:SEC-2151: Support binding method arguments with Annotations||This allow utilizing method arguments for method access control on
interfaces prior to JDK 8.
=========================================================

+ @PostAuthorize("#o?.contains('grant')")
+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=56&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/a09756745fd95bcfa8c05eb977227ef06d929ad4

[COMMIT MESSAGE]:SEC-2151: Support binding method arguments with Annotations||This allow utilizing method arguments for method access control on
interfaces prior to JDK 8.
=========================================================

+ @PostAuthorize("#o?.contains('grant')")
+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/008xiaoman/abc/commit/8af31fd4685d7375a8486cd15bb61094f02f8bab

[COMMIT MESSAGE]:init||
=========================================================

+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/bogic-past/waterchannel/commit/748c7459177564814f4b5bdb84eb0f7971c3264d

[COMMIT MESSAGE]:Added changes||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'getAddress')")
+ @PostAuthorize("hasPermission(returnObject, 'getWaterMeter')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USAID-DELIVER-PROJECT/elmis/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

+ @PostAuthorize("@fulfillmentPermissionService.hasPermission(principal, returnObject.body.data.get(\"order\").getId(), 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/ad1d858e2bbe06e51230e6fd5b30bdff17b08bbd

[COMMIT MESSAGE]:SEC-3056 - Fix JavaDoc errors.||Fixed JavaDoc errors accross multiple modules in order to make javadoc happy with Java 8.
=========================================================

- * @PostAuthorize("#to == returnObject.to")
+ * {@code @PostAuthorize("#to == returnObject.to")}
- * @PostAuthorize("#to == returnObject.to")
+ * {@code @PostAuthorize("#to == returnObject.to")}

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/a09756745fd95bcfa8c05eb977227ef06d929ad4

[COMMIT MESSAGE]:SEC-2151: Support binding method arguments with Annotations||This allow utilizing method arguments for method access control on
interfaces prior to JDK 8.
=========================================================

+ @PostAuthorize("#o?.contains('grant')")
+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jasolangi/jasolangi.github.io/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

+ @PostAuthorize("@fulfillmentPermissionService.hasPermission(principal, returnObject.body.data.get(\"order\").getId(), 'MANAGE_POD')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=57&q=%40PostAuthorize%28%22&type=Code&utf8=%E2%9C%93

