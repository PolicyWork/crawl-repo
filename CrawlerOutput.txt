======================================================
[OUTPUT-FILENAME]: MainMenuViewSecutiry.java
======================================================

+import com.qlkh.core.client.constant.UserRoleEnum;
+import com.smvp4g.mvp.client.core.utils.LoginUtils;
+        if (LoginUtils.getRole().equals(UserRoleEnum.USER.getRole())) {
+            subToolBar.setEnabled(false);
+        }
-        MyNumberField quantityNumberField = new MyNumberField();
-        quantityNumberField.setSelectOnFocus(true);
-        quantityColumnConfig.setEditor(new CellEditor(quantityNumberField));
+
+        if (!LoginUtils.getRole().equals(UserRoleEnum.USER.getRole())) {
+            MyNumberField quantityNumberField = new MyNumberField();
+            quantityNumberField.setSelectOnFocus(true);
+            quantityColumnConfig.setEditor(new CellEditor(quantityNumberField));
+        }
+
-        return new HasRole[]{UserRoleEnum.MANAGER};
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
+import com.google.gwt.user.client.ui.HTML;
+        contentPanel.add(new HTML("<b>Cập nhật phiên bản 1.4.0</b>" +
+                "<ul>" +
+                "<li>- User xí nghiệp có thể xem định mức cho từng công việc</li>" +
+                "<li>- Số chứng từ hoá đơn xẽ tự động reset về 1 khi chuyển sang năm mới</li>" +
+                "</ul>"));
+
-        return new HasRole[]{UserRoleEnum.MANAGER};
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
-        return new HasRole[]{UserRoleEnum.ADMIN};
+        return new HasRole[]{UserRoleEnum.ADMIN, UserRoleEnum.MANAGER};
-        mnlGroupManager.setStyleName("menulink");
-        mainPanel.add(mnlGroupManager, new HBoxLayoutData(new Margins(0, 5, 0, 0)));
+        mnlGroupManager.setStyleName("menulink");
+        mainPanel.add(mnlGroupManager, new HBoxLayoutData(new Margins(0, 5, 0, 0)));
-        return new HasRole[]{UserRoleEnum.ADMIN};
+        return new HasRole[]{UserRoleEnum.ADMIN, UserRoleEnum.MANAGER};
+    @FieldSecurity
+    @FieldSecurity
-        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.MATERIAL_MANAGER, UserRoleEnum.USER};
-        return new HasRole[]{UserRoleEnum.MANAGER};
+        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+    }
+
+    public HasRole[] planReportPanel() {
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
+    }
+
+    public HasRole[] priceReportPanel() {
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
-        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.MATERIAL_MANAGER, UserRoleEnum.USER};
-@Place
+@Place(defaultPlace = true)
+                    view.getExportDate().setValue(currentMaterial.getExportDate());
+                            currentMaterial.setExportDate(view.getExportDate().getValue());
+import com.extjs.gxt.ui.client.widget.form.DateField;
+    @I18nField
+    DateField exportDate = new DateField();
+
-        ColumnConfig dateColumnConfig = new ColumnConfig("createdDate", getConstant().dateColumnTitle(), 80);
-        dateColumnConfig.setDateTimeFormat(DateTimeFormat.getFormat("d-MM-yyyy"));
+        ColumnConfig dateColumnConfig = new ColumnConfig("exportDate", getConstant().dateColumnTitle(), 80);
+        dateColumnConfig.setDateTimeFormat(DateTimeFormat.getFormat("dd-MM-yyyy"));
+            exportDate.setAllowBlank(false);
+            exportDate.setEditable(false);
+            exportDate.getPropertyEditor().setFormat(DateTimeFormat.getFormat("dd-MM-yyyy"));
+
+            editPanel.add(exportDate);
+    public DateField getExportDate() {
+        return exportDate;
+    }
+
+        exportDate.clear();
+    String exportDate();
-materialError=Chua chon vat tu
-txtTotal=Yeu cau
-totalError=Thuc xuat vuot qua yeu cau
+materialError=Chưa chọn vật tư
+txtTotal=Yêu cầu
+totalError=Thực xuất vuợt quá yêu cầu
-btnCopy=Copy du lieu
+btnCopy=Copy dữ liệu
+exportDate=Ngày xuất
-        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+        return new HasRole[]{UserRoleEnum.WAREHOUSE_MANAGER};
-        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+        return new HasRole[]{UserRoleEnum.WAREHOUSE_MANAGER};
-        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+        return new HasRole[]{UserRoleEnum.WAREHOUSE_MANAGER};
-                UserRoleEnum.MATERIAL_MANAGER
+                UserRoleEnum.MATERIAL_MANAGER,
+                UserRoleEnum.WAREHOUSE_MANAGER
-                UserRoleEnum.MATERIAL_MANAGER
+                UserRoleEnum.MATERIAL_MANAGER,
+                UserRoleEnum.WAREHOUSE_MANAGER
-        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+        return new HasRole[]{UserRoleEnum.WAREHOUSE_MANAGER};
-        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+        return new HasRole[]{UserRoleEnum.WAREHOUSE_MANAGER};
-        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+        return new HasRole[]{UserRoleEnum.WAREHOUSE_MANAGER};
+     * The manager of warehouse.
+     */
+    WAREHOUSE_MANAGER("WAREHOUSE_MANAGER"),
+
+    /**
+        <property name="exportDate" column="exportDate" not-null="true"/>
+import java.util.Date;
+
+    private Date exportDate;
+
+    public Date getExportDate() {
+        return exportDate;
+    }
+
+    public void setExportDate(Date exportDate) {
+        this.exportDate = exportDate;
+    }
-applicationVersion=1.2.2 (cập nhật ngày ${buildNumber})
+applicationVersion=1.2.3 (cập nhật ngày ${buildNumber})
+ALTER TABLE  `material_in` ADD  `exportDate` DATE NOT NULL AFTER  `stationId`;
+
+INSERT INTO `user` (`id`, `userName`, `passWord`, `userRole`, `stationId`, `createdDate`, `updatedDate`, `createBy`, `updateBy`) VALUES
+(50, 'thongke', '88f86247e8dc34a32ce1707877b5ee4f', 'WAREHOUSE_MANAGER', 27, '2013-05-03', '2013-05-03', 1, 1);
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
+            materialIn.setExportDate(new Date());
-public class LimitJobPlace extends AbstractPlace {
+public class MaterialLimitPlace extends AbstractPlace {
+package com.qlkh.client.client.module.content.place;
+
+import com.smvp4g.mvp.client.core.place.AbstractPlace;
+import com.smvp4g.mvp.client.core.place.Place;
+
+/**
+ * The Class MaterailPlace.
+ *
+ * @author Nguyen Duc Dung
+ * @since 3/22/13 1:06 PM
+ */
+@Place
+public class MaterialPlace extends AbstractPlace {
+}
-import com.qlkh.client.client.module.content.place.LimitJobPlace;
+import com.qlkh.client.client.module.content.place.MaterialLimitPlace;
-import com.qlkh.client.client.module.content.view.MaterialView;
+import com.qlkh.client.client.module.content.view.MaterialLimitView;
-@Presenter(view = MaterialView.class, place = LimitJobPlace.class)
-public class MaterialPresenter extends AbstractTaskDetailPresenter<MaterialView> {
+@Presenter(view = MaterialLimitView.class, place = MaterialLimitPlace.class)
+public class MaterialLimitPresenter extends AbstractTaskDetailPresenter<MaterialLimitView> {
-import com.qlkh.client.client.module.content.view.i18n.MaterialConstant;
-import com.qlkh.client.client.module.content.view.security.MaterialSecurity;
+import com.qlkh.client.client.module.content.view.i18n.MaterialLimitConstant;
+import com.qlkh.client.client.module.content.view.security.MaterialLimitSecurity;
-@ViewSecurity(configuratorClass = MaterialSecurity.class)
-@View(parentDomId = DomIdConstant.CONTENT_PANEL, constantsClass = MaterialConstant.class)
-public class MaterialView extends AbstractTaskDetailView<MaterialConstant> {
+@ViewSecurity(configuratorClass = MaterialLimitSecurity.class)
+@View(parentDomId = DomIdConstant.CONTENT_PANEL, constantsClass = MaterialLimitConstant.class)
+public class MaterialLimitView extends AbstractTaskDetailView<MaterialLimitConstant> {
-public interface MaterialConstant extends TaskDetailDKConstant {
+public interface MaterialLimitConstant extends TaskDetailDKConstant {
-public class MaterialSecurity implements ViewSecurityConfigurator {
+public class MaterialLimitSecurity implements ViewSecurityConfigurator {
-    MenuLink mlLimitJob = new MenuLink(LimitJobPlace.class);
+    MenuLink mlLimitJob = new MenuLink(MaterialLimitPlace.class);
+
+    @FieldSecurity
+    @HistoryHandler
+    @I18nField
+    MenuLink mlMaterial = new MenuLink(MaterialPlace.class);
+        mlMaterial.setStyleName("menulink");
+        mainPanel.add(mlMaterial, new HBoxLayoutData(new Margins(0, 5, 0, 0)));
+
+    String mlMaterial();
+mlMaterial=Quản lý giá vật tư
+    public HasRole[] mlMaterial() {
+        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+    }
+
-    MenuLink mnlTaskDetail = new MenuLink(TaskDetailKDKPlace.class);
+    MenuLink mnlTaskDetailKDK = new MenuLink(TaskDetailKDKPlace.class);
-    MenuLink mnlTaskAnnualDetail = new MenuLink(TaskDetailDKPlace.class);
+    MenuLink mnlTaskDetailDK = new MenuLink(TaskDetailDKPlace.class);
-        mnlTaskAnnualDetail.setStyleName("menulink");
-        mainPanel.add(mnlTaskAnnualDetail, new HBoxLayoutData(new Margins(0, 5, 0, 0)));
-        mnlTaskDetail.setStyleName("menulink");
-        mainPanel.add(mnlTaskDetail, new HBoxLayoutData(new Margins(0, 5, 0, 0)));
+        mnlTaskDetailDK.setStyleName("menulink");
+        mainPanel.add(mnlTaskDetailDK, new HBoxLayoutData(new Margins(0, 5, 0, 0)));
+        mnlTaskDetailKDK.setStyleName("menulink");
+        mainPanel.add(mnlTaskDetailKDK, new HBoxLayoutData(new Margins(0, 5, 0, 0)));
-    String mnlTaskDetail();
-    String mnlTaskAnnualDetail();
+    String mnlTaskDetailKDK();
+    String mnlTaskDetailDK();
-mnlTaskDetail=Công tác năm
+mnlTaskDetailKDK=Công tác không định kỳ
-mnlTaskAnnualDetail=Công tác tháng
+mnlTaskDetailDK=Công tác tháng
-    public HasRole[] mnlTaskDetail() {
+    public HasRole[] mnlTaskDetailKDK() {
-    public HasRole[] mnlTaskAnnualDetail() {
+    public HasRole[] mnlTaskDetailDK() {
-applicationVersion=1.0.9 (cập nhật ngày ${buildNumber})
+applicationVersion=1.1.0 (cập nhật ngày ${buildNumber})
-    <bean class="com.qlkh.server.dao.impl.TaskDetailDaoImpl">
-        <property name="sessionFactory" ref="sessionFactory"/>
-    </bean>
-
-                <bean class="com.qlkh.server.handler.taskdetail.DeleteTaskDetailHandler"/>
======================================================
[OUTPUT-FILENAME]: ReportSecurity.java
======================================================

+    @FieldSecurity
+    FormPanel taskDefaultValueReportPanel = new FormPanel();
+
+    @I18nField
+    @I18nField
+    Button btnTaskDefaultReport = new Button();
+
+    @I18nField
+    Button btnTaskDefaultExcelReport = new Button();
+
+        taskDefaultValueReportPanel.setFrame(true);
+        HorizontalPanel hp5 = new HorizontalPanel();
+        hp5.add(btnTaskDefaultReport);
+        hp5.add(btnTaskDefaultExcelReport);
+        hp5.setSpacing(4);
+
+        taskDefaultValueReportPanel.add(hp5);
+
+        vp.add(taskDefaultValueReportPanel);
+
+    public Button getBtnTaskDefaultReport() {
+        return btnTaskDefaultReport;
+    }
+
+    public Button getBtnTaskDefaultExcelReport() {
+        return btnTaskDefaultExcelReport;
+    }
+    String taskDefaultValueReportPanel();
+    String btnTaskDefaultReport();
+    String btnTaskDefaultExcelReport();
+taskDefaultValueReportPanel=Định mức công việc
-btnMaterialInExcelReport=In báo cáo(Excel)
+btnMaterialInExcelReport=In báo cáo(Excel)
+btnTaskDefaultReport=Xem báo cáo online
+btnTaskDefaultExcelReport=In báo cáo(Excel)
+    public HasRole[] taskDefaultValueReportPanel() {
+        return new HasRole[]{UserRoleEnum.USER, UserRoleEnum.MANAGER};
+    }
+
+    @FieldSecurity
+    @FieldSecurity
-        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.MATERIAL_MANAGER, UserRoleEnum.USER};
-        return new HasRole[]{UserRoleEnum.MANAGER};
+        return new HasRole[]{UserRoleEnum.MATERIAL_MANAGER};
+    }
+
+    public HasRole[] planReportPanel() {
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
+    }
+
+    public HasRole[] priceReportPanel() {
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
-        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.USER};
+        return new HasRole[]{UserRoleEnum.MANAGER, UserRoleEnum.MATERIAL_MANAGER, UserRoleEnum.USER};
+import com.extjs.gxt.ui.client.data.BeanModelLookup;
+import com.qlkh.core.client.criterion.ClientRestrictions;
+import com.qlkh.core.client.model.Branch;
+    private ListStore<BeanModel> branchListStore;
-        if (stationListStore != null) {
-            //reload stations list.
-            stationListStore = GridUtils.createListStoreForCb(Station.class);
-            view.getCbbReportStation().setStore(stationListStore);
-        }
+                    branchListStore = GridUtils.createListStoreForCb(Branch.class,
+                            ClientRestrictions.eq("station.id", currentStation.getId()));
+                    //Add default model.
+                    Branch fakeBranch = new Branch();
+                    fakeBranch.setName(view.getConstant().fakeBranchName());
+                    BeanModel fakeModel = BeanModelLookup.get().getFactory(Branch.class).createModel(fakeBranch);
+                    branchListStore.insert(fakeModel, 0);
+                    view.getCbbReportBranch().setStore(branchListStore);
+                    view.getCbbReportBranch().setValue(fakeModel);
+            Long branchId = null;
+                Branch branch = view.getCbbReportBranch().getValue().getBean();
+                if (branch != null) {
+                    branchId = branch.getId();
+                }
-                        fileTypeEnum, station.getId()), new AbstractAsyncCallback<ReportResult>() {
+                        fileTypeEnum, station.getId(), branchId), new AbstractAsyncCallback<ReportResult>() {
+import com.extjs.gxt.ui.client.store.ListStore;
-    @I18nField
+    @FieldSecurity
+    ComboBox<BeanModel> cbbReportBranch = new ComboBox<BeanModel>();
+
+        cbbReportBranch.setDisplayField(BranchManagerView.BRANCH_NAME_COLUMN);
+        cbbReportBranch.setTriggerAction(ComboBox.TriggerAction.ALL);
+        cbbReportBranch.setEditable(false);
+        //Set empty store for waiting for loading data for the sever.
+        cbbReportBranch.setStore(new ListStore<BeanModel>());
+
+        hp.add(cbbReportBranch);
+        cbbReportBranch.setEnabled(enable);
+
+    public ComboBox<BeanModel> getCbbReportBranch() {
+        return cbbReportBranch;
+    }
-    String cbbReportStation();
+    String fakeBranchName();
-cbbReportStation=Trung Tâm
+fakeBranchName=Toàn bộ trung tâm
+
+    public HasRole[] cbbReportBranch() {
+        return new HasRole[]{UserRoleEnum.USER};
+    }
+    private Long branchId;
-    public ReportAction(ReportTypeEnum reportTypeEnum, ReportFileTypeEnum fileTypeEnum, long stationId) {
+    public ReportAction(ReportTypeEnum reportTypeEnum,
+                        ReportFileTypeEnum fileTypeEnum, long stationId, Long branchId) {
+        this.branchId = branchId;
+
+    public Long getBranchId() {
+        return branchId;
+    }
-        return new ReportResult(reportForCompany(action.getReportTypeEnum(), action.getFileTypeEnum(), action.getStationId()));
+        return new ReportResult(reportForCompany(action));
-    private String reportForCompany(ReportTypeEnum reportTypeEnum, ReportFileTypeEnum fileTypeEnum, long stationId) throws ActionException {
+    private String reportForCompany(ReportAction action) throws ActionException {
+        ReportTypeEnum reportTypeEnum = action.getReportTypeEnum();
+        ReportFileTypeEnum fileTypeEnum = action.getFileTypeEnum();
+        long stationId = action.getStationId();
======================================================
[OUTPUT-FILENAME]: MyService.java
======================================================

======================================================
[OUTPUT-FILENAME]: T1_in.java
==================================================