
=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/9c5aed234502a56f789d2319caa3b0e0a5d23132

[COMMIT MESSAGE]:RAVE-731 Refactored WidgetComment to no longer need the widgetID attr…||…ibute.

git-svn-id: https://svn.apache.org/repos/asf/rave/branches/model-split@1394834 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/0acaf1f25e712b4ec3c9930bec04baa62f7e841e

[COMMIT MESSAGE]:In case Widget object was coming null for new URL @PostAuthorize was …||…throwing Access is denied.RAVE-400

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1230851 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/2dbe0052b0f45741f4e5db56d9dbb2ebd2dc540f

[COMMIT MESSAGE]:RAVE-319: Widget persistence not working||Added @Transaction annotation to the registerNewWidget and updateWidget methods to ensure JPA commits

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190457 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- * @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/2bc596199b198853e08c6abc174e64f27b5240c6

[COMMIT MESSAGE]:RAVE-310: fixed incorrect security annotation on updateWidget (admins…||… can now update non-owned widgets)

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190386 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ * @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/qiaoma/tic_tac_toe/commit/b76b8f3f67ef8146688235a64a84e69b2e4607e4

[COMMIT MESSAGE]:Initial commit on Tic Tac Toe app||
=========================================================

+ //@PostAuthorize("principal.username == returnObject.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tomekl007/spitterMVCplusHibernate/commit/0bac83428d85ca0e8c4e7d474bdcd0b4735f1805

[COMMIT MESSAGE]:add RESTfull services||
=========================================================

- @PostAuthorize("returnObject.spitter.username==principal.username")
+ //@PostAuthorize("returnObject.spitter.username==principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/tomekl007/spitterMVCplusHibernate/commit/56eaf6be846c07a276af1d021b26caa3922a22af

[COMMIT MESSAGE]:add custom login, using plain Text, DB, or ldap||
=========================================================

+ @PostAuthorize("returnObject.spitter.username==principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/flybigcat/TicTacToeGame/commit/bab05b3c16da11659e8c17522f893a6f6c9cd3a6

[COMMIT MESSAGE]:TicTacToe Game (full version)||
=========================================================

+ @PostAuthorize("principal.username == returnObject.player1.username")
+@PostAuthorize("principal.username == returnObject.player1.username") is used for method

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/817237840498ada06aa99fd03fdc315a6b6fae0c

[COMMIT MESSAGE]:130 - the code was formatted by our template||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/UnifiedViews/Core/commit/638ebe28563e951b6a8393554a531048d8b47fd1

[COMMIT MESSAGE]:Facades split into interfaces and implementations||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'view')")
+ @PostAuthorize("hasPermission(returnObject,'view')")
- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/a79dc2dde57d34fe478c83e01a9fef7fe67941d9

[COMMIT MESSAGE]:Added 004-method-authorization-using-acls.||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read)")
+ @PostAuthorize("(hasPermission(returnObject, read) and returnObject.visible) or hasPermission(returnObject, admin)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sergiofgonzalez/spring-examples-repo/commit/1ca75a3cb5f864a58533b1d1eebb44b61a98f928

[COMMIT MESSAGE]:Added 005-view-authorization-using-acls||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, read)")
+ @PostAuthorize("(hasPermission(returnObject, read) and returnObject.visible) or hasPermission(returnObject, admin)")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=26&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/986af4fa0770f9e78fda840dbf4f0f205ac190de

[COMMIT MESSAGE]:re enabled restrictions on group service and person service calls||
=========================================================

- //@PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")
+ @PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/7f2b4d61730b1cdcb586cb7519c919dd0396febb

[COMMIT MESSAGE]:Added sortBy, startIndex, count support on the External Group Provide…||…r to be used in SURFteams
=========================================================

- @PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")
+ //@PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenConext/OpenConext-api/commit/0a7472e20d0f21c90257471ec44afc5873e2013c

[COMMIT MESSAGE]:BACKLOG-387: implementation of person api: access control; mock ldap …||…service; mock eb service;
=========================================================

+ @PostAuthorize("#onBehalf == null or returnObject.isMember(#onBehalfOf)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jmisur/javaagent/commit/2e7692adc1a85f520b4c7229ecff849ff4a6b9ef

[COMMIT MESSAGE]:spring security poc||
=========================================================

+ @PostAuthorize("returnObject.token == principal.username.toUpperCase()")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/39fa37b0e8c544bb1cacc5a2c7e0246bfef12664

[COMMIT MESSAGE]:RAVE-835 Merge all from model-split at 1403154 (reintegration)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1403166 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2da933e9653c5317d1d84b8ae5c6f94e38e2cacc

[COMMIT MESSAGE]:Promote rave to a TLP -- INFRA-4573||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1305402 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lletsica/my_test_repo/commit/c628bccc4139c56c83cd221a6e6ff09d6895a571

[COMMIT MESSAGE]:Proyeto montado con tomcat Rave||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mff-uk/ODCS/commit/638ebe28563e951b6a8393554a531048d8b47fd1

[COMMIT MESSAGE]:Facades split into interfaces and implementations||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'view')")
+ @PostAuthorize("hasPermission(returnObject,'view')")
- @PostAuthorize("hasPermission(returnObject, 'view')")
+ @PostAuthorize("hasPermission(returnObject, 'view')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/47f0dd1945dae7979bdff681d7e8a9a05fc2e759

[COMMIT MESSAGE]:pridani podpory pro logovani||
=========================================================

+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/8f04e52503abdade8db194278140037da3a83edf

[COMMIT MESSAGE]:nova verze||
=========================================================

- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_sellers_all') or returnObject.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/05497cc0d509aa63ebf1c8badec71e15fa2aa78e

[COMMIT MESSAGE]:editace profilu, captcha atd.||
=========================================================

- @PostAuthorize("isAnonymous() or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/fc327c0dfd7b996a2e185588c2b31f49d648660f

[COMMIT MESSAGE]:zabezpeceni, uprava editace inzeratu||
=========================================================

+ @PostAuthorize("isAnonymous() or returnObject.seller.id == principal.sellerId")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/6ad9916702f7f90b282b9fa561977e0cecccc3e5

[COMMIT MESSAGE]:oprava drobnych chyb||
=========================================================

- @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplaySeller(returnObject)")
- @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplaySeller(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/47f0dd1945dae7979bdff681d7e8a9a05fc2e759

[COMMIT MESSAGE]:pridani podpory pro logovani||
=========================================================

+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/8f04e52503abdade8db194278140037da3a83edf

[COMMIT MESSAGE]:nova verze||
=========================================================

- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_sellers_all') or returnObject.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/c45447e04603745d6c9aa5dc934d9074087fe660

[COMMIT MESSAGE]:uprava zabezpeceni||
=========================================================

+ @PostAuthorize("isAnonymous() or hasRole('ROLE_per_sellers_all') or returnObject.id == principal.sellerId")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/05497cc0d509aa63ebf1c8badec71e15fa2aa78e

[COMMIT MESSAGE]:editace profilu, captcha atd.||
=========================================================

- @PostAuthorize("isAnonymous() or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=27&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/ab2a98580f8ac2e53384d19c353ddeb2f415b6dd

[COMMIT MESSAGE]:added TarnsferApplication Resource||cleaning getMyUser
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/02f43ee645c6ed2c86f82bbc4f47d25647c914e7

[COMMIT MESSAGE]:changes made to be running with transfer app.||Added fields for NA values of dates.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/a3d7b93349b74065f0ad016c17ae0435761a0e96

[COMMIT MESSAGE]:switched App and backend to preserve issues in the right place||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/e3f7f4c6034697b476db9e7ca8e6021fcf4395b4

[COMMIT MESSAGE]:Updated page service to create instances of pages by page template id…||… RAVE-1066

git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1531267 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/87f01bea2a8ccc9eb8c0396c837429d6383a4bae

[COMMIT MESSAGE]:Changing to filter permission annotation (RAVE-1054)||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1521535 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/1bd8c9e663ea6c17cdaad1769e89c03d61615ee1

[COMMIT MESSAGE]:Fixed service permission annotation (RAVE-1054)||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1521345 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/7a43cad0deac81e5e5a08fb50906c2b90bf7ca84

[COMMIT MESSAGE]:Fill out controllers, add 204 response filter||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1510718 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/9cbfd16293260a48e5e5895c556ac7142330df49

[COMMIT MESSAGE]:RAVE-1011: Update page service to support get all / get limited||git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1508584 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/cc247d6114bb520ecdf0dda32cc8e6f30ccb03c0

[COMMIT MESSAGE]:Updates and changes to implement page sharing between rave users. See…||… RAVE-103. (Support shared spaces.)

git-svn-id: https://svn.apache.org/repos/asf/rave/trunk@1335687 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/a94b16a309511b320c9e0f64479a25ece0eab12a

[COMMIT MESSAGE]:RAVE-475: Create Person Profile page based off of a PageTemplate||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1294003 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/f7084fdd8f1b5c8dcf1d2215dc906927eec0d04e

[COMMIT MESSAGE]:Code in support of RAVE-458: Person Profile multiple sub-pages||- added infrastructure to allow for a hierarchy of Page objects for any Page Type (USER, PERSON_PROFILE)


git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1291474 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/84f0183dada8cc7e92433e39e14f89200c15f5cd

[COMMIT MESSAGE]:RAVE-310: Widget ModelPermissionEvaluator and Service Annotations||git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1190019 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/ef31170d554b8d7b25e0af2f2f8cefc9f0dcf188

[COMMIT MESSAGE]:Changes in support of RAVE-298:||- created common AbstractRestApi class
- updated the DefaultPagePermissionEvaluator to handle permission checks when the object to be checked differs from the returned Object
- secured remaining PageService methods that deal with Page objects, except addNewDefaultPage (see RAVE-303)


git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1185340 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/91c2fda6a260a84bb8b8387802788feb055d24e8

[COMMIT MESSAGE]:Code to support RAVE-298 (unchecked page manipulations):||- implemented DefaultPagePermissionEvaluator
- protected one PageService method: getPage
- added handleAccessDeniedException to o.a.r.p.w.a.rest.PageApi
- fixed permissionEvaluator bean definition in applicationContext-security.xml to prevent duplicate bean creation

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1183496 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/fc0d75709de4b59142028bfb118704ab5ffcc28d

[COMMIT MESSAGE]:Muokattu tekstikappalenäkymä tukemaan viiteid:tä||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/8537365888800646f1bd2243b76a9cfacb546537

[COMMIT MESSAGE]:Tutkinnon osien käsittely viitteiden avulla refactorointi.||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.tutkinnonOsaDto.id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/feecc4fd868c42eef0b8233dc14b4403d1c81b58

[COMMIT MESSAGE]:kosmeettisia muutoksia||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.id, 'perusteenosa', 'MUOKKAUS')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/deef82e74791ffa5a2fe5057ba9f3e7851cca7b5

[COMMIT MESSAGE]:Oikeustarkistelun toteutusta.||Perusteenosiin liittyvän perusteprojektin hakeminen. Perustetta tai
perusteen osaa ei voi enää muokata ellei se kuulu käynnissä olevaan
perusteprojektiin (osa tarkistuksista puuttuu yhä).
=========================================================

+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/6e886c74aa02a87db9705ef27ebf8bae70f7689b

[COMMIT MESSAGE]:Updated page service to create instances of pages by page template id…||… RAVE-1066

git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1531267 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/ad607595994288cd8e9cb343cf72278d0d44dedc

[COMMIT MESSAGE]:Changing to filter permission annotation (RAVE-1054)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1521535 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/ceb1665b0d5653ff71f2ef7f0ade85f098ca1631

[COMMIT MESSAGE]:Fixed service permission annotation (RAVE-1054)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1521345 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/c3bc0ff1f19a992bb6891aa17ea16d47bc6138eb

[COMMIT MESSAGE]:Fill out controllers, add 204 response filter||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1510718 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/f9bb62c515751b1859af25c5af4fff7e41ec8de7

[COMMIT MESSAGE]:RAVE-1011: Update page service to support get all / get limited||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1508584 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/39fa37b0e8c544bb1cacc5a2c7e0246bfef12664

[COMMIT MESSAGE]:RAVE-835 Merge all from model-split at 1403154 (reintegration)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1403166 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2b3b144d1fb7fd43891b8f682768b7d6affceb47

[COMMIT MESSAGE]:Updates and changes to implement page sharing between rave users. See…||… RAVE-103. (Support shared spaces.)

git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1335687 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2da933e9653c5317d1d84b8ae5c6f94e38e2cacc

[COMMIT MESSAGE]:Promote rave to a TLP -- INFRA-4573||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1305402 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=28&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/3e766437ab4474111f7a4c8a980f5f2e9574094e

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ezajko/mx-hero-src/commit/296ebe880482ebcd493dc091d04de5c9caa95a39

[COMMIT MESSAGE]:No commit message||
=========================================================

- @PostAuthorize("hasRole('ROLE_ADMIN') or (hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain) or (hasRole('ROLE_DOMAIN_ACCOUNT') and #username == principal.username)")
+ @PostAuthorize("hasRole('ROLE_DOMAIN_ADMIN') and returnObject.domain == principal.domain")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/71d000be167d856372e8d65f528151400fd9f0a8

[COMMIT MESSAGE]:Fixed issue with null values. Everything but file upload is working.||Notice wierd qwerk with hibernate and embedded objects.  It is updating
them unnecissarily.
=========================================================

- @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/RESTFUL-WS/commit/a561ade948aac1f2a4186c81bd0c593dd2ae1afd

[COMMIT MESSAGE]:-Added fuctionality to get all responses for a given form id.||-Implemented new sorting and pagination method.
-Made adjustments to security requirements.
=========================================================

+ @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/kumlien/school/commit/d542eadb04839c32abd634d14f2eb91054abee82

[COMMIT MESSAGE]:Lägg till lite mer security||
=========================================================

+ @PostAuthorize("(returnObject.body != null and returnObject.body.username == principal.username) or hasRole('ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-projects/spring-security/commit/a09756745fd95bcfa8c05eb977227ef06d929ad4

[COMMIT MESSAGE]:SEC-2151: Support binding method arguments with Annotations||This allow utilizing method arguments for method access control on
interfaces prior to JDK 8.
=========================================================

+ @PostAuthorize("#o?.contains('grant')")
+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/lletsica/my_test_repo/commit/c628bccc4139c56c83cd221a6e6ff09d6895a571

[COMMIT MESSAGE]:Proyeto montado con tomcat Rave||
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=29&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/tekul/spring-security/commit/a09756745fd95bcfa8c05eb977227ef06d929ad4

[COMMIT MESSAGE]:SEC-2151: Support binding method arguments with Annotations||This allow utilizing method arguments for method access control on
interfaces prior to JDK 8.
=========================================================

+ @PostAuthorize("#o?.contains('grant')")
+ * @PostAuthorize("#to == returnObject.to")
+ * @PostAuthorize("#to == returnObject.to")

=========================================================
[CODE-CHANGE-URL]:https://github.com/machak/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Jasig/uPortal/commit/d0c37171d5da56d4b2681cfd56da45293771fc2b

[COMMIT MESSAGE]:UP-2950 Adding support and configuration for Spring Security annotati…||…on-based permission expressions under a pre-authentication setup. This commit also includes adding support for SpringMVC's ContentNegotiatingViewResolver.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'VIEW')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myhall/PA165_DeliveryService/commit/33456fd2a71a5223d6ac11c28f18138fe6fcb796

[COMMIT MESSAGE]:Access rights for service layer methods + facade||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
+ @PostAuthorize("hasRole('ROLE_ADMIN') or "

=========================================================
[CODE-CHANGE-URL]:https://github.com/Myhall/PA165_DeliveryService/commit/33456fd2a71a5223d6ac11c28f18138fe6fcb796

[COMMIT MESSAGE]:Access rights for service layer methods + facade||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
+ @PostAuthorize("hasRole('ROLE_ADMIN') or "
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=30&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/2c9a3b348c45042c3e16b2f33f9d74f7fd06bcae

[COMMIT MESSAGE]:Authorization - service layer + presentation - need some testing and …||…cleaning, but otherwise done
=========================================================

- @PostAuthorize("hasRole('ADMINISTRATOR') OR "
- @PostAuthorize("hasRole('ADMINISTRATOR') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/bender-futur/pujcovna-stroju/commit/4fb80761a94c866b8083bcb7d5afaeea4daeed46

[COMMIT MESSAGE]:Authorization mostly on service layer||
=========================================================

+ @PostAuthorize("hasRole('ADMINISTRATOR') OR hasRole('EMPLOYEE') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "
+ @PostAuthorize("hasRole('ADMINISTRATOR') OR "

=========================================================
[CODE-CHANGE-URL]:https://github.com/apache/rave/commit/3c7f0a219ee40aac8fe4f8f4066bf71b2da4f107

[COMMIT MESSAGE]:RAVE-307: RegionWidget ModelPermissionEvaluator and Service Annotations||Applied patch supplied by Venkat Mahadevan

git-svn-id: https://svn.apache.org/repos/asf/incubator/rave/trunk@1189266 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/thepresbyterian/topchef/commit/2ef860afaf9d4a218818400ef057a8b4f3b5f0ea

[COMMIT MESSAGE]:Publishing to GitHub||
=========================================================

+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("isAuthenticated()")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') and @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("@methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or @methodSecurity.principalIsUser(principal,#userid)")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/8ffff3ce48d9da997e91ecf13f8a32f1098116fa

[COMMIT MESSAGE]:+Checks for expired forms||+If getFormById fails because of authorization or privacy levels or expired then return a hollow form with just meta data
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN') or returnObject.getEnabled()==true and returnObject.getPubli()==true or returnObject.getEnabled()==true and hasRole('ROLE_USER')" )
+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN') or returnObject.getEnabled()==true and returnObject.getPubli()==true and returnObject.isExpired()==false or returnObject.getEnabled()==true and hasRole('ROLE_USER') and returnObject.isExpired()==false" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/5257ad14ea28d0b1539f25d719a5a0e8730ff4ec

[COMMIT MESSAGE]:+Implemented enable/disable and public/restricted security for the fo…||…rms resource.

+Added "PHONE" to the validation enum
+Added a default "PLAIN" value when creating a new Form
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN') or returnObject.getEnabled()==true and returnObject.getPubli()==true or returnObject.getEnabled()==true and hasRole('ROLE_USER')" )

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/71d000be167d856372e8d65f528151400fd9f0a8

[COMMIT MESSAGE]:Fixed issue with null values. Everything but file upload is working.||Notice wierd qwerk with hibernate and embedded objects.  It is updating
them unnecissarily.
=========================================================

- @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")
+ @PostAuthorize("hasPermission(returnObject, 'read') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/FormBuilderBackend/commit/a561ade948aac1f2a4186c81bd0c593dd2ae1afd

[COMMIT MESSAGE]:-Added fuctionality to get all responses for a given form id.||-Implemented new sorting and pagination method.
-Made adjustments to security requirements.
=========================================================

+ @PostAuthorize("hasPermission(#returnObject, 'read') or hasRole('ROLE_ADMIN')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=31&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/akuepfer/coursera-mobile-cloud-computing-with-android/commit/718095fbb5839655a2f59c1787bc2256ca58b8f4

[COMMIT MESSAGE]:Initial commit||
=========================================================

+ @PostAuthorize("returnObject.doctorId == principal.id")
+ @PostAuthorize("returnObject.doctorId == authentication.id")
+ @PostAuthorize("returnObject.Id == principal.id || returnObject.doctorId == principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c60f10d5517c2863228024c6ff5e8b5edb335ceb

[COMMIT MESSAGE]:[minor] Client access||Change-Id: Iaae5b30d6263819295733d554927965bf613a9c1
=========================================================

- @PostAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")
+ @PostAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(returnObject, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/netkuba/pengurus/commit/c7d573e65e4eb1a4d1c1643413a1c341e495b7a9

[COMMIT MESSAGE]:[CRM-23] Services server side authorization.||Change-Id: I79ebb863bb13fdf6de0de75a7880480f39409725
=========================================================

+ @PostAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasRole('ROLE_EXECUTIVE') or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasAnyRole('ROLE_EXECUTIVE', 'ROLE_ACCOUNTANT') or hasPermission(#quoteDTO, 'write')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/sovanegger/filmplanning/commit/9cb65dafdbaabdbaeb60f7b159c430ca5d1d5538

[COMMIT MESSAGE]:commiting all src/||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'ADMINISTRATION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/39fa37b0e8c544bb1cacc5a2c7e0246bfef12664

[COMMIT MESSAGE]:RAVE-835 Merge all from model-split at 1403154 (reintegration)||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1403166 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/svn2github/rave/commit/2da933e9653c5317d1d84b8ae5c6f94e38e2cacc

[COMMIT MESSAGE]:Promote rave to a TLP -- INFRA-4573||git-svn-id: http://svn.apache.org/repos/asf/rave/trunk@1305402 13f79535-47bb-0310-9956-ffa450edef68
=========================================================

+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("returnObject == null or hasPermission(returnObject, 'read')")
+// @PostAuthorize("hasPermission(returnObject, 'read')")
+ @PostAuthorize("hasPermission(returnObject, 'create')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/DataAnalyticsinStudentHands/TerryApplicationBackend/commit/ab2a98580f8ac2e53384d19c353ddeb2f415b6dd

[COMMIT MESSAGE]:added TarnsferApplication Resource||cleaning getMyUser
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ') or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/openmhealth/omh-dsu-ri/commit/52606c28c271e3853ab04168d6a077bd2b98c014

[COMMIT MESSAGE]:Update the data point controller with OAuth2 authorization annotations.||
=========================================================

+ @PostAuthorize("returnObject.body == null || returnObject.body.userId == principal.username")

=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PostAuthorize("returnObject.createdBy==principal.username")
+ @PostAuthorize("returnObject.username==principal.username or hasAnyRole('adminPrivilege','managerPrivilege')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=32&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/newlifewj/projects/commit/1bf2a16f3d6e518eec734335781fd4cefb146ae3

[COMMIT MESSAGE]:first time||
=========================================================

+ @PostAuthorize("returnObject.createdBy==principal.username")
+ @PostAuthorize("returnObject.username==principal.username or hasAnyRole('adminPrivilege','managerPrivilege')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/c5a7e82abaab593e2d1a9d71a721220ae9475b87

[COMMIT MESSAGE]:Academic Funcionando con resultClass.||
=========================================================

- @PostAuthorize("hasPermission(returnObject, 'READ')")
-// @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/f6eec8bbbca18e2beafb6bf170bc042d443f2a12

[COMMIT MESSAGE]:fusion. misma jsp para add y modify degree.||
=========================================================

+// @PostAuthorize("hasPermission(returnObject, 'READ')")
+// @PostAuthorize("hasPermission(returnObject, 'READ')")
- @PostAuthorize("hasPermission(returnObject, 'READ')")
+// @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/3f5f5a1611f992c344b1eea6c4c443336d92942f

[COMMIT MESSAGE]:Merge commit '0dc3a42904757f1e309d7890d49a9c3e2e40d08d' into union||Conflicts:
	src/main/java/es/ucm/fdi/dalgs/academicTerm/service/AcademicTermService.java
	src/main/java/es/ucm/fdi/dalgs/academicTerm/web/AcademicTermController.java
	src/main/java/es/ucm/fdi/dalgs/degree/service/DegreeService.java
	src/main/java/es/ucm/fdi/dalgs/degree/web/DegreeController.java
	src/main/java/es/ucm/fdi/dalgs/domain/Module.java
	src/main/java/es/ucm/fdi/dalgs/domain/Topic.java
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/romoAlmudena/tfg/commit/e4f09d8db8c7c3d65ba217a486725fd252b28687

[COMMIT MESSAGE]:Fixed academicTerm y degree (except to mantain de value of showAll be…||…tween pages)
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USAID-DELIVER-PROJECT/elmis/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

+ @PostAuthorize("@fulfillmentPermissionService.hasPermission(principal, returnObject.body.data.get(\"order\").getId(), 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/slovi/kolomet/commit/8f04e52503abdade8db194278140037da3a83edf

[COMMIT MESSAGE]:nova verze||
=========================================================

- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_products_all') or returnObject.seller.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isCapableToDisplayProduct(returnObject)")
- @PostAuthorize("isAnonymous() or hasRole('ROLE_per_sellers_all') or returnObject.id == principal.sellerId")
+ @PostAuthorize("isAnonymous() or principal.isSellerOwner(returnObject)")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/097da165cfe5ebf32c31c910f35b3aaff18add4d

[COMMIT MESSAGE]:Fixed a permissions-related issue in the upload files functionality||where a user was being authorised for a null domain object.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")
- @PostAuthorize("hasPermission(returnObject, 'READ')")
- @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

+ @PostAuthorize("@fulfillmentPermissionService.hasPermission(principal, returnObject.body.data.get(\"order\").getId(), 'MANAGE_POD')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rodrigoataides/educarmais/commit/584901efa3b7d6618c93763af2b6f53636c59d57

[COMMIT MESSAGE]:Comit de arquivo grande||
=========================================================

+ declare @method: public * (@Entity * && !br.com.core.log.Log && !br.com.core.modelo.acl.*).find*(Long): @PostAuthorize("hasPermission(returnObject, 'READ')");
+// declare @method: public * (@Entity * && !br.com.core.log.Log && !br.com.core.modelo.acl.*).find*(Long): @PostAuthorize("hasPermission(returnObject, 'READ')");

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenGeoportal/OGP2/commit/4c8534a867fe608f322cdde347042a184867000e

[COMMIT MESSAGE]:Add: support for basic authentication to restricted GeoServer.||Add: wmc ui elements, added support for namespace prefixes in jaxb
implementation

Update: libraries; Spring, Spring Security, Jackson, underscore,
backbone, etc. (see pom.xml)

fix: removed version numbers from Spring application context schema
locations

fix: reimplemented load indicators: sometimes indicator wouldn't go away
after load.
=========================================================

+ //@PostAuthorize("hasPermission(#layerInfo, 'download')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jasolangi/jasolangi.github.io/commit/ef895654aa8b15447f00954f1b6467cccf273b96

[COMMIT MESSAGE]:|#1318| Adding post authorize to get api of pod.||
=========================================================

+ @PostAuthorize("@fulfillmentPermissionService.hasPermission(principal, returnObject.body.data.get(\"order\").getId(), 'MANAGE_POD')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=33&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/luversof/bluesky-project/commit/05a889763c0a10029feb0fac5d6b820c16d90000

[COMMIT MESSAGE]:jpa auditing은 어떻게 설정하는거지..||
=========================================================

- @PostAuthorize("hasRole('ROLE_USER') && #modelMap[blog].username == authentication.name")
+ @PostAuthorize("hasRole('ROLE_USER') && #modelMap[article].blog.userId == authentication.principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/mycellar/mycellar/commit/286b32121a9803e1f81746e0d0d81940d9c78e8a

[COMMIT MESSAGE]:big update:||use mocha for protractor
update angularjs and other js libs
better separation of rest services (admin and others)
fix token repository cleaner
fix password generator tool
=========================================================

+ // TODO @PostAuthorize("") to check booking is owned by

=========================================================
[CODE-CHANGE-URL]:https://github.com/Deutsche-Digitale-Bibliothek/aas-LDAP4DDB/commit/96820672eb829427eec5683afceecef8622fb925

[COMMIT MESSAGE]:unify privilege-set and privilege representation for org-privileges +…||… user-privileges
=========================================================

- @PostAuthorize(privileges = { Privilege.DEFAULT }, scope = Scope.ORGANIZATION)
+ @PostAuthorize(privileges = { PrivilegeEnum.DEFAULT }, scope = Scope.ORGANIZATION)
- @PostAuthorize(privileges = { Privilege.ADMIN_ORG, Privilege.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
+ @PostAuthorize(privileges = { PrivilegeEnum.ADMIN_ORG, PrivilegeEnum.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
- @PostAuthorize(privileges = { Privilege.ADMIN_USER, Privilege.ADMIN, Privilege.SELF }, scope = Scope.PERSON)
+ @PostAuthorize(privileges = { PrivilegeEnum.ADMIN_USER, PrivilegeEnum.ADMIN, PrivilegeEnum.SELF }, scope = Scope.PERSON)

=========================================================
[CODE-CHANGE-URL]:https://github.com/Deutsche-Digitale-Bibliothek/aas-LDAP4DDB/commit/3e2e7fb1946583cda0637250260c4d3ef34fae4d

[COMMIT MESSAGE]:use extra methods for post-authorize||
=========================================================

+ @PostAuthorize(privileges = { Privilege.ADMIN_USER, Privilege.ADMIN, Privilege.SELF }, scope = Scope.PERSON)

=========================================================
[CODE-CHANGE-URL]:https://github.com/Deutsche-Digitale-Bibliothek/aas-LDAP4DDB/commit/513f3bc376aaa829a80829f6a02f8957342817bf

[COMMIT MESSAGE]:further implementation of authorization||
=========================================================

+ @PostAuthorize(privileges = { Privilege.ADMIN_ORG, Privilege.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
+ @PostAuthorize(privileges = { Privilege.DEFAULT }, scope=Scope.ORGANIZATION)
+ @PostAuthorize(privileges = { Privilege.ADMIN_ORG, Privilege.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
+ @PostAuthorize(privileges = { Privilege.ADMIN_USER, Privilege.ADMIN, Privilege.SELF }, scope = Scope.PERSON)

=========================================================
[CODE-CHANGE-URL]:https://github.com/Deutsche-Digitale-Bibliothek/aas-LDAP4DDB/commit/96820672eb829427eec5683afceecef8622fb925

[COMMIT MESSAGE]:unify privilege-set and privilege representation for org-privileges +…||… user-privileges
=========================================================

- @PostAuthorize(privileges = { Privilege.DEFAULT }, scope = Scope.ORGANIZATION)
+ @PostAuthorize(privileges = { PrivilegeEnum.DEFAULT }, scope = Scope.ORGANIZATION)
- @PostAuthorize(privileges = { Privilege.ADMIN_ORG, Privilege.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
+ @PostAuthorize(privileges = { PrivilegeEnum.ADMIN_ORG, PrivilegeEnum.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
- @PostAuthorize(privileges = { Privilege.ADMIN_USER, Privilege.ADMIN, Privilege.SELF }, scope = Scope.PERSON)
+ @PostAuthorize(privileges = { PrivilegeEnum.ADMIN_USER, PrivilegeEnum.ADMIN, PrivilegeEnum.SELF }, scope = Scope.PERSON)

=========================================================
[CODE-CHANGE-URL]:https://github.com/Deutsche-Digitale-Bibliothek/aas-LDAP4DDB/commit/513f3bc376aaa829a80829f6a02f8957342817bf

[COMMIT MESSAGE]:further implementation of authorization||
=========================================================

+ @PostAuthorize(privileges = { Privilege.ADMIN_ORG, Privilege.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
+ @PostAuthorize(privileges = { Privilege.DEFAULT }, scope=Scope.ORGANIZATION)
+ @PostAuthorize(privileges = { Privilege.ADMIN_ORG, Privilege.ADMIN }, scope = Scope.ORGANIZATION, bypassAttributes = { @BypassAttribute(name = "status", values = { "approved" }) })
+ @PostAuthorize(privileges = { Privilege.ADMIN_USER, Privilege.ADMIN, Privilege.SELF }, scope = Scope.PERSON)

=========================================================
[CODE-CHANGE-URL]:https://github.com/USAID-DELIVER-PROJECT/elmis/commit/5701caf9bd7cde3ec09eb35b9e787145b2df8130

[COMMIT MESSAGE]:Merge branch 'master' of https://github.com/OpenLMIS/open-lmis||Conflicts:
	modules/core/src/main/java/org/openlmis/core/domain/Product.java
	modules/core/src/main/java/org/openlmis/core/domain/ProgramProduct.java
	modules/core/src/main/java/org/openlmis/core/repository/mapper/ProgramProductMapper.java
	modules/core/src/main/java/org/openlmis/core/service/ProgramProductService.java
	modules/openlmis-web/src/main/java/org/openlmis/web/controller/RequisitionController.java
	modules/openlmis-web/src/main/resources/messages_en.properties
	modules/openlmis-web/src/main/webapp/public/js/rnr/controller/create/create-requisition-controller.js
	modules/openlmis-web/src/main/webapp/public/js/rnr/model/regular-rnr-line-item.js
	modules/openlmis-web/src/test/java/org/openlmis/web/controller/RequisitionControllerTest.java
	modules/requisition/src/main/java/org/openlmis/rnr/service/RequisitionService.java
	modules/requisition/src/test/java/org/openlmis/rnr/domain/RnrLineItemTest.java
	modules/shipment/src/main/java/org/openlmis/shipment/domain/ShipmentLineItem.java
	modules/shipment/src/main/java/org/openlmis/shipment/dto/ShipmentLineItemDTO.java
	modules/shipment/src/main/java/org/openlmis/shipment/repository/mapper/ShipmentMapper.java
	modules/shipment/src/test/java/org/openlmis/shipment/ShipmentLineItemTransformerTest.java
	modules/shipment/src/test/java/org/openlmis/shipment/dto/ShipmentLineItemDTOTest.java
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
- @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USAID-DELIVER-PROJECT/elmis/commit/9c0309e77847dd10c96083f6cde841c1c8ba0470

[COMMIT MESSAGE]:|#1404| +Riya| sending numberOfMonths present in previous period to c…||…lient side on initiating rnr and fetching it again.
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
- @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/USAID-DELIVER-PROJECT/elmis/commit/a1fa7b0c7950e75d7e4c4bc1afaf10b6c8dab566

[COMMIT MESSAGE]:|#1050| PostAuthorize permission evaluator for print and get requisition||
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.model.get(\"rnr\"), 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-samples-securemail/commit/1669232a4592668db9347c5b416a7180d071bbfd

[COMMIT MESSAGE]:Finished moving to mailuser and added jdbc namespace||
=========================================================

- @PostAuthorize("hasPermission(returnObject,'read')")
+ @PostAuthorize("returnObject.fromUser.id == principal.id or returnObject.toUser.id == principal.id")

=========================================================
[CODE-CHANGE-URL]:https://github.com/rwinch/spring-security-samples-securemail/commit/6b22d786029ce7e2f142f25d21cd931effa6d2e0

[COMMIT MESSAGE]:initial commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject,'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/ventilb/tcdemos/commit/094508e8e479d2db123d32c3482c1daf6f21613b

[COMMIT MESSAGE]:* Domainmodel-Visitor Schnittstelle verallgemeinert und Abstraktionen…||… geschaffen

* Spring Security ACL integriert
* SketchPad auf Hibernate erweitert und ACL integriert
* Methoden für Bearbeitung von ACLs implementiert
* Login-Mechanismus implementiert
=========================================================

+ @PostAuthorize(value = "hasPermission(returnObject, 'READ') and " +

=========================================================
[CODE-CHANGE-URL]:https://github.com/fmacicasan/FreeDaysIntern/commit/7f81dcdccfd7e678a16016f86f621e2ddf2ce1de

[COMMIT MESSAGE]:added hrapp again on master||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'RegularUser', 'own')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fmacicasan/FreeDaysIntern/commit/9097d48f21188012ff299b2ff67f24d9476fc26d

[COMMIT MESSAGE]:removed hrapp||
=========================================================

- @PostAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'RegularUser', 'own')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fmacicasan/FreeDaysIntern/commit/4372c2f27a02714c4cd3415984c34b6a16eaf6e1

[COMMIT MESSAGE]:changed project name to hrapp||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'RegularUser', 'own')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/9c0309e77847dd10c96083f6cde841c1c8ba0470

[COMMIT MESSAGE]:|#1404| +Riya| sending numberOfMonths present in previous period to c…||…lient side on initiating rnr and fetching it again.
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
- @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/OpenLMIS/open-lmis/commit/a1fa7b0c7950e75d7e4c4bc1afaf10b6c8dab566

[COMMIT MESSAGE]:|#1050| PostAuthorize permission evaluator for print and get requisition||
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.model.get(\"rnr\"), 'VIEW_REQUISITION')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=34&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93


=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/8537365888800646f1bd2243b76a9cfacb546537

[COMMIT MESSAGE]:Tutkinnon osien käsittely viitteiden avulla refactorointi.||
=========================================================

+ @PostAuthorize("hasPermission(returnObject.tutkinnonOsaDto.id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/42bbfc5e21a637e84c942fd0e4ce94b53f1a495e

[COMMIT MESSAGE]:oikeustarkisteluja.||Lisätty oikeustarkisteluja ja refaktoroitu julkista palvelukerroksen
API:a.
=========================================================

- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
- @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/Opetushallitus/eperusteet/commit/deef82e74791ffa5a2fe5057ba9f3e7851cca7b5

[COMMIT MESSAGE]:Oikeustarkistelun toteutusta.||Perusteenosiin liittyvän perusteprojektin hakeminen. Perustetta tai
perusteen osaa ei voi enää muokata ellei se kuulu käynnissä olevaan
perusteprojektiin (osa tarkistuksista puuttuu yhä).
=========================================================

+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")
+ @PostAuthorize("returnObject.tila == T(fi.vm.sade.eperusteet.domain.PerusteTila).VALMIS or hasPermission(#id, 'perusteenosa', 'LUKU')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jasolangi/jasolangi.github.io/commit/5701caf9bd7cde3ec09eb35b9e787145b2df8130

[COMMIT MESSAGE]:Merge branch 'master' of https://github.com/OpenLMIS/open-lmis||Conflicts:
	modules/core/src/main/java/org/openlmis/core/domain/Product.java
	modules/core/src/main/java/org/openlmis/core/domain/ProgramProduct.java
	modules/core/src/main/java/org/openlmis/core/repository/mapper/ProgramProductMapper.java
	modules/core/src/main/java/org/openlmis/core/service/ProgramProductService.java
	modules/openlmis-web/src/main/java/org/openlmis/web/controller/RequisitionController.java
	modules/openlmis-web/src/main/resources/messages_en.properties
	modules/openlmis-web/src/main/webapp/public/js/rnr/controller/create/create-requisition-controller.js
	modules/openlmis-web/src/main/webapp/public/js/rnr/model/regular-rnr-line-item.js
	modules/openlmis-web/src/test/java/org/openlmis/web/controller/RequisitionControllerTest.java
	modules/requisition/src/main/java/org/openlmis/rnr/service/RequisitionService.java
	modules/requisition/src/test/java/org/openlmis/rnr/domain/RnrLineItemTest.java
	modules/shipment/src/main/java/org/openlmis/shipment/domain/ShipmentLineItem.java
	modules/shipment/src/main/java/org/openlmis/shipment/dto/ShipmentLineItemDTO.java
	modules/shipment/src/main/java/org/openlmis/shipment/repository/mapper/ShipmentMapper.java
	modules/shipment/src/test/java/org/openlmis/shipment/ShipmentLineItemTransformerTest.java
	modules/shipment/src/test/java/org/openlmis/shipment/dto/ShipmentLineItemDTOTest.java
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
- @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jasolangi/jasolangi.github.io/commit/9c0309e77847dd10c96083f6cde841c1c8ba0470

[COMMIT MESSAGE]:|#1404| +Riya| sending numberOfMonths present in previous period to c…||…lient side on initiating rnr and fetching it again.
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
- @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/jasolangi/jasolangi.github.io/commit/a1fa7b0c7950e75d7e4c4bc1afaf10b6c8dab566

[COMMIT MESSAGE]:|#1050| PostAuthorize permission evaluator for print and get requisition||
=========================================================

+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.body.data.get(\"rnr\"), 'VIEW_REQUISITION')")
+ @PostAuthorize("@requisitionPermissionService.hasPermission(principal, returnObject.model.get(\"rnr\"), 'VIEW_REQUISITION')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/90a67a6947c165e270236713a152b108608ef569

[COMMIT MESSAGE]:- 개인 페이지 기능 추가 /member/{id}||
=========================================================

- @PostAuthorize("(returnObject.email == principal.Username) or hasRole('ROLE_ADMIN')")
+// @PostAuthorize("(returnObject.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/spring-sprout/springsprout/commit/32a1bd7fe28f4787278b6a37cc3666c69796e1ef

[COMMIT MESSAGE]:adding sources||
=========================================================

+ @PostAuthorize("(returnObject.email == principal.Username) or hasRole('ROLE_ADMIN')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/anu-doi/anudc/commit/4ce7a2845d8e25127e2303b846f6bd195fdf55da

[COMMIT MESSAGE]:Added gitignore to root, updated CustomAuthenticationEntryPoint class…||… so requests missing user agents get 401 instead of redirect response. Added object-level security to the web service.
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'READ')")
+ @PostAuthorize("hasPermission(returnObject, 'WRITE')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/pavelkuchin/checkers/commit/ef77d6f86251d9ee502a4ef42928336f8a583579

[COMMIT MESSAGE]:Enhancement security||! Common security gaps have been closed but I should think things thoroughly here in future.
+ Consts class with constants (ME, and Security constants have been implemented)
! LoginLastTime is not working yet. I know why, but don't known how i can fix it.
! See server warning logs. From now all service layer exceptions (included security) will be posted here.
! getAllUsers becomes protected from ROLE_USER (Only ROLE_ADMIN has have access here)
=========================================================

+ @PostAuthorize("hasAnyRole('ROLE_ADMIN,ROLE_USER')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/excilys/excilys-bank/commit/bdf822dce4b103683eef7922f48d8dca0741c905

[COMMIT MESSAGE]:first big commit||
=========================================================

+ @PostAuthorize("hasPermission(returnObject, 'read')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fmacicasan/FreeDaysIntern/commit/31f3da5dbf8ee93cde70dbf9c068f2f70381d1fa

[COMMIT MESSAGE]:Permissions changes for regular user listing and profiles.||
=========================================================

- @PostAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'RegularUser', 'own')")
+ @PostAuthorize("hasRole('ROLE_ADMIN') or hasRole('ROLE_FDADMIN') or hasPermission(#id,'RegularUser', 'own')")

=========================================================
[CODE-CHANGE-URL]:https://github.com/fmacicasan/FreeDaysIntern/commit/b2687a12bd24f1ad574d46985f96f2c8409ff725

[COMMIT MESSAGE]:added helpfull links, todo, security some comments vacation display.||
=========================================================

+ @PostAuthorize("hasRole('ROLE_ADMIN') or hasPermission(#id,'RegularUser', 'own')")
[NEXT-PAGE-URL]:https://github.com/search?l=java&p=35&q=%40PostAuthorize%28&type=Code&utf8=%E2%9C%93

